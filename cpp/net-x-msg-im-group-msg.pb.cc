// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net-x-msg-im-group-msg.proto

#include "net-x-msg-im-group-msg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class XmsgImGroupSendMsgReq_ExtEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupSendMsgReq_ExtEntry_DoNotUse>
      _instance;
} _XmsgImGroupSendMsgReq_ExtEntry_DoNotUse_default_instance_;
class XmsgImGroupSendMsgReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupSendMsgReq>
      _instance;
} _XmsgImGroupSendMsgReq_default_instance_;
class XmsgImGroupSendMsgRsp_ExtEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupSendMsgRsp_ExtEntry_DoNotUse>
      _instance;
} _XmsgImGroupSendMsgRsp_ExtEntry_DoNotUse_default_instance_;
class XmsgImGroupSendMsgRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupSendMsgRsp>
      _instance;
} _XmsgImGroupSendMsgRsp_default_instance_;
class XmsgImMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImMsg>
      _instance;
} _XmsgImMsg_default_instance_;
class XmsgImMsgTextDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImMsgText>
      _instance;
} _XmsgImMsgText_default_instance_;
class XmsgImMsgHtmlDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImMsgHtml>
      _instance;
} _XmsgImMsgHtml_default_instance_;
class XmsgImMsgImageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImMsgImage>
      _instance;
} _XmsgImMsgImage_default_instance_;
class XmsgImMsgVoiceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImMsgVoice>
      _instance;
} _XmsgImMsgVoice_default_instance_;
class XmsgImMsgVideoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImMsgVideo>
      _instance;
} _XmsgImMsgVideo_default_instance_;
class XmsgImMsgFileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImMsgFile>
      _instance;
} _XmsgImMsgFile_default_instance_;
class XmsgImMsgMergeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImMsgMerge>
      _instance;
} _XmsgImMsgMerge_default_instance_;
class XmsgImMsgAtDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImMsgAt>
      _instance;
} _XmsgImMsgAt_default_instance_;
class XmsgImGroupMsgNotice_ExtEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupMsgNotice_ExtEntry_DoNotUse>
      _instance;
} _XmsgImGroupMsgNotice_ExtEntry_DoNotUse_default_instance_;
class XmsgImGroupMsgNoticeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupMsgNotice>
      _instance;
} _XmsgImGroupMsgNotice_default_instance_;
class XmsgImGroupMsgSyncReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupMsgSyncReq>
      _instance;
} _XmsgImGroupMsgSyncReq_default_instance_;
class XmsgImGroupMsgSyncRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupMsgSyncRsp>
      _instance;
} _XmsgImGroupMsgSyncRsp_default_instance_;
class XmsgImGroupMsgHistoryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupMsgHistory>
      _instance;
} _XmsgImGroupMsgHistory_default_instance_;
class XmsgImGroupMsgQueryReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupMsgQueryReq>
      _instance;
} _XmsgImGroupMsgQueryReq_default_instance_;
class XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem>
      _instance;
} _XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem_default_instance_;
class XmsgImGroupMsgQueryRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupMsgQueryRsp>
      _instance;
} _XmsgImGroupMsgQueryRsp_default_instance_;
class XmsgImGroupMsgReadReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupMsgReadReq>
      _instance;
} _XmsgImGroupMsgReadReq_default_instance_;
class XmsgImGroupMsgReadRsp_ExtEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupMsgReadRsp_ExtEntry_DoNotUse>
      _instance;
} _XmsgImGroupMsgReadRsp_ExtEntry_DoNotUse_default_instance_;
class XmsgImGroupMsgReadRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupMsgReadRsp>
      _instance;
} _XmsgImGroupMsgReadRsp_default_instance_;
class XmsgImGroupMsgReadNoticeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupMsgReadNotice>
      _instance;
} _XmsgImGroupMsgReadNotice_default_instance_;
namespace protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto {
void InitDefaultsXmsgImGroupSendMsgReq_ExtEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImGroupSendMsgReq_ExtEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImGroupSendMsgReq_ExtEntry_DoNotUse();
  }
  ::XmsgImGroupSendMsgReq_ExtEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupSendMsgReq_ExtEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupSendMsgReq_ExtEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImGroupSendMsgReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImMsg();
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImGroupSendMsgReq_ExtEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImGroupSendMsgReq_default_instance_;
    new (ptr) ::XmsgImGroupSendMsgReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImGroupSendMsgReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupSendMsgReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupSendMsgReqImpl);
}

void InitDefaultsXmsgImGroupSendMsgRsp_ExtEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImGroupSendMsgRsp_ExtEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImGroupSendMsgRsp_ExtEntry_DoNotUse();
  }
  ::XmsgImGroupSendMsgRsp_ExtEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupSendMsgRsp_ExtEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupSendMsgRsp_ExtEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImGroupSendMsgRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImGroupSendMsgRsp_ExtEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImGroupSendMsgRsp_default_instance_;
    new (ptr) ::XmsgImGroupSendMsgRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImGroupSendMsgRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupSendMsgRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupSendMsgRspImpl);
}

void InitDefaultsXmsgImMsgImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImMsgText();
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImMsgHtml();
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImMsgImage();
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImMsgVoice();
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImMsgVideo();
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImMsgFile();
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImMsgAt();
  {
    void* ptr = &::_XmsgImMsg_default_instance_;
    new (ptr) ::XmsgImMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::_XmsgImMsgMerge_default_instance_;
    new (ptr) ::XmsgImMsgMerge();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImMsg::InitAsDefaultInstance();
  ::XmsgImMsgMerge::InitAsDefaultInstance();
}

void InitDefaultsXmsgImMsg() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImMsgImpl);
}

void InitDefaultsXmsgImMsgTextImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImMsgText_default_instance_;
    new (ptr) ::XmsgImMsgText();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImMsgText::InitAsDefaultInstance();
}

void InitDefaultsXmsgImMsgText() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImMsgTextImpl);
}

void InitDefaultsXmsgImMsgHtmlImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImMsgHtml_default_instance_;
    new (ptr) ::XmsgImMsgHtml();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImMsgHtml::InitAsDefaultInstance();
}

void InitDefaultsXmsgImMsgHtml() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImMsgHtmlImpl);
}

void InitDefaultsXmsgImMsgImageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImMsgImage_default_instance_;
    new (ptr) ::XmsgImMsgImage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImMsgImage::InitAsDefaultInstance();
}

void InitDefaultsXmsgImMsgImage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImMsgImageImpl);
}

void InitDefaultsXmsgImMsgVoiceImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImMsgVoice_default_instance_;
    new (ptr) ::XmsgImMsgVoice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImMsgVoice::InitAsDefaultInstance();
}

void InitDefaultsXmsgImMsgVoice() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImMsgVoiceImpl);
}

void InitDefaultsXmsgImMsgVideoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImMsgVideo_default_instance_;
    new (ptr) ::XmsgImMsgVideo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImMsgVideo::InitAsDefaultInstance();
}

void InitDefaultsXmsgImMsgVideo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImMsgVideoImpl);
}

void InitDefaultsXmsgImMsgFileImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImMsgFile_default_instance_;
    new (ptr) ::XmsgImMsgFile();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImMsgFile::InitAsDefaultInstance();
}

void InitDefaultsXmsgImMsgFile() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImMsgFileImpl);
}

void InitDefaultsXmsgImMsgAtImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImMsgAt_default_instance_;
    new (ptr) ::XmsgImMsgAt();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImMsgAt::InitAsDefaultInstance();
}

void InitDefaultsXmsgImMsgAt() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImMsgAtImpl);
}

void InitDefaultsXmsgImGroupMsgNotice_ExtEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImGroupMsgNotice_ExtEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImGroupMsgNotice_ExtEntry_DoNotUse();
  }
  ::XmsgImGroupMsgNotice_ExtEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupMsgNotice_ExtEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupMsgNotice_ExtEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImGroupMsgNoticeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImMsg();
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImGroupMsgNotice_ExtEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImGroupMsgNotice_default_instance_;
    new (ptr) ::XmsgImGroupMsgNotice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImGroupMsgNotice::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupMsgNotice() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupMsgNoticeImpl);
}

void InitDefaultsXmsgImGroupMsgSyncReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImGroupMsgSyncReq_default_instance_;
    new (ptr) ::XmsgImGroupMsgSyncReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImGroupMsgSyncReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupMsgSyncReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupMsgSyncReqImpl);
}

void InitDefaultsXmsgImGroupMsgSyncRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImGroupMsgHistory();
  {
    void* ptr = &::_XmsgImGroupMsgSyncRsp_default_instance_;
    new (ptr) ::XmsgImGroupMsgSyncRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImGroupMsgSyncRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupMsgSyncRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupMsgSyncRspImpl);
}

void InitDefaultsXmsgImGroupMsgHistoryImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImMsg();
  {
    void* ptr = &::_XmsgImGroupMsgHistory_default_instance_;
    new (ptr) ::XmsgImGroupMsgHistory();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImGroupMsgHistory::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupMsgHistory() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupMsgHistoryImpl);
}

void InitDefaultsXmsgImGroupMsgQueryReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImGroupMsgQueryReq_default_instance_;
    new (ptr) ::XmsgImGroupMsgQueryReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImGroupMsgQueryReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupMsgQueryReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupMsgQueryReqImpl);
}

void InitDefaultsXmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItemImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImMsg();
  {
    void* ptr = &::_XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem_default_instance_;
    new (ptr) ::XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItemImpl);
}

void InitDefaultsXmsgImGroupMsgQueryRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem();
  {
    void* ptr = &::_XmsgImGroupMsgQueryRsp_default_instance_;
    new (ptr) ::XmsgImGroupMsgQueryRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImGroupMsgQueryRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupMsgQueryRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupMsgQueryRspImpl);
}

void InitDefaultsXmsgImGroupMsgReadReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImGroupMsgReadReq_default_instance_;
    new (ptr) ::XmsgImGroupMsgReadReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImGroupMsgReadReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupMsgReadReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupMsgReadReqImpl);
}

void InitDefaultsXmsgImGroupMsgReadRsp_ExtEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImGroupMsgReadRsp_ExtEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImGroupMsgReadRsp_ExtEntry_DoNotUse();
  }
  ::XmsgImGroupMsgReadRsp_ExtEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupMsgReadRsp_ExtEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupMsgReadRsp_ExtEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImGroupMsgReadRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImGroupMsgReadRsp_ExtEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImGroupMsgReadRsp_default_instance_;
    new (ptr) ::XmsgImGroupMsgReadRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImGroupMsgReadRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupMsgReadRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupMsgReadRspImpl);
}

void InitDefaultsXmsgImGroupMsgReadNoticeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImGroupMsgReadNotice_default_instance_;
    new (ptr) ::XmsgImGroupMsgReadNotice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImGroupMsgReadNotice::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupMsgReadNotice() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupMsgReadNoticeImpl);
}

::google::protobuf::Metadata file_level_metadata[25];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSendMsgReq_ExtEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSendMsgReq_ExtEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSendMsgReq_ExtEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSendMsgReq_ExtEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSendMsgReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSendMsgReq, cgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSendMsgReq, localmsgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSendMsgReq, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSendMsgReq, ext_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSendMsgRsp_ExtEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSendMsgRsp_ExtEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSendMsgRsp_ExtEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSendMsgRsp_ExtEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSendMsgRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSendMsgRsp, msgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSendMsgRsp, gcgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSendMsgRsp, gts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSendMsgRsp, ext_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMsg, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMsg, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMsg, html_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMsg, image_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMsg, voice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMsg, video_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMsg, file_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMsg, merge_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMsg, atx_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMsgText, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMsgText, text_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMsgHtml, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMsgHtml, html_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMsgImage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMsgImage, uri_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMsgVoice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMsgVoice, uri_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMsgVideo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMsgVideo, uri_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMsgFile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMsgFile, from_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMsgFile, fid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMsgMerge, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMsgMerge, msg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMsgAt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMsgAt, cgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupMsgNotice_ExtEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupMsgNotice_ExtEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupMsgNotice_ExtEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupMsgNotice_ExtEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupMsgNotice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupMsgNotice, gcgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupMsgNotice, scgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupMsgNotice, msgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupMsgNotice, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupMsgNotice, gts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupMsgNotice, ext_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupMsgSyncReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupMsgSyncReq, cgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupMsgSyncReq, msgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupMsgSyncReq, latest_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupMsgSyncRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupMsgSyncRsp, msg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupMsgHistory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupMsgHistory, scgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupMsgHistory, msgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupMsgHistory, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupMsgHistory, gts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupMsgHistory, isread_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupMsgQueryReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupMsgQueryReq, cgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupMsgQueryReq, msgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupMsgQueryReq, before_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupMsgQueryReq, pagesize_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem, scgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem, msgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem, gts_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupMsgQueryRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupMsgQueryRsp, msg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupMsgReadReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupMsgReadReq, cgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupMsgReadReq, msgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupMsgReadRsp_ExtEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupMsgReadRsp_ExtEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupMsgReadRsp_ExtEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupMsgReadRsp_ExtEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupMsgReadRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupMsgReadRsp, ext_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupMsgReadNotice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupMsgReadNotice, cgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupMsgReadNotice, msgid_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::XmsgImGroupSendMsgReq_ExtEntry_DoNotUse)},
  { 9, -1, sizeof(::XmsgImGroupSendMsgReq)},
  { 18, 25, sizeof(::XmsgImGroupSendMsgRsp_ExtEntry_DoNotUse)},
  { 27, -1, sizeof(::XmsgImGroupSendMsgRsp)},
  { 36, -1, sizeof(::XmsgImMsg)},
  { 50, -1, sizeof(::XmsgImMsgText)},
  { 56, -1, sizeof(::XmsgImMsgHtml)},
  { 62, -1, sizeof(::XmsgImMsgImage)},
  { 68, -1, sizeof(::XmsgImMsgVoice)},
  { 74, -1, sizeof(::XmsgImMsgVideo)},
  { 80, -1, sizeof(::XmsgImMsgFile)},
  { 87, -1, sizeof(::XmsgImMsgMerge)},
  { 93, -1, sizeof(::XmsgImMsgAt)},
  { 99, 106, sizeof(::XmsgImGroupMsgNotice_ExtEntry_DoNotUse)},
  { 108, -1, sizeof(::XmsgImGroupMsgNotice)},
  { 119, -1, sizeof(::XmsgImGroupMsgSyncReq)},
  { 127, -1, sizeof(::XmsgImGroupMsgSyncRsp)},
  { 133, -1, sizeof(::XmsgImGroupMsgHistory)},
  { 143, -1, sizeof(::XmsgImGroupMsgQueryReq)},
  { 152, -1, sizeof(::XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem)},
  { 161, -1, sizeof(::XmsgImGroupMsgQueryRsp)},
  { 167, -1, sizeof(::XmsgImGroupMsgReadReq)},
  { 174, 181, sizeof(::XmsgImGroupMsgReadRsp_ExtEntry_DoNotUse)},
  { 183, -1, sizeof(::XmsgImGroupMsgReadRsp)},
  { 189, -1, sizeof(::XmsgImGroupMsgReadNotice)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupSendMsgReq_ExtEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupSendMsgReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupSendMsgRsp_ExtEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupSendMsgRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImMsgText_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImMsgHtml_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImMsgImage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImMsgVoice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImMsgVideo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImMsgFile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImMsgMerge_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImMsgAt_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupMsgNotice_ExtEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupMsgNotice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupMsgSyncReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupMsgSyncRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupMsgHistory_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupMsgQueryReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupMsgQueryRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupMsgReadReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupMsgReadRsp_ExtEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupMsgReadRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupMsgReadNotice_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "net-x-msg-im-group-msg.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 25);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\034net-x-msg-im-group-msg.proto\"\253\001\n\025XmsgI"
      "mGroupSendMsgReq\022\013\n\003cgt\030\001 \001(\t\022\022\n\nlocalMs"
      "gId\030\002 \001(\004\022\027\n\003msg\030\003 \001(\0132\n.XmsgImMsg\022,\n\003ex"
      "t\030\004 \003(\0132\037.XmsgImGroupSendMsgReq.ExtEntry"
      "\032*\n\010ExtEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t"
      ":\0028\001\"\233\001\n\025XmsgImGroupSendMsgRsp\022\r\n\005msgId\030"
      "\001 \001(\004\022\014\n\004gcgt\030\002 \001(\t\022\013\n\003gts\030\003 \001(\004\022,\n\003ext\030"
      "\004 \003(\0132\037.XmsgImGroupSendMsgRsp.ExtEntry\032*"
      "\n\010ExtEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\002"
      "8\001\"\216\002\n\tXmsgImMsg\022\014\n\004type\030\001 \001(\t\022\034\n\004text\030\002"
      " \001(\0132\016.XmsgImMsgText\022\034\n\004html\030\003 \001(\0132\016.Xms"
      "gImMsgHtml\022\036\n\005image\030\004 \001(\0132\017.XmsgImMsgIma"
      "ge\022\036\n\005voice\030\005 \001(\0132\017.XmsgImMsgVoice\022\036\n\005vi"
      "deo\030\006 \001(\0132\017.XmsgImMsgVideo\022\034\n\004file\030\007 \001(\013"
      "2\016.XmsgImMsgFile\022\036\n\005merge\030\010 \001(\0132\017.XmsgIm"
      "MsgMerge\022\031\n\003atx\030\t \001(\0132\014.XmsgImMsgAt\"\035\n\rX"
      "msgImMsgText\022\014\n\004text\030\001 \001(\t\"\035\n\rXmsgImMsgH"
      "tml\022\014\n\004html\030\001 \001(\t\"\035\n\016XmsgImMsgImage\022\013\n\003u"
      "ri\030\001 \001(\t\"\035\n\016XmsgImMsgVoice\022\013\n\003uri\030\001 \001(\t\""
      "\035\n\016XmsgImMsgVideo\022\013\n\003uri\030\001 \001(\t\"*\n\rXmsgIm"
      "MsgFile\022\014\n\004from\030\001 \001(\t\022\013\n\003fid\030\002 \001(\t\")\n\016Xm"
      "sgImMsgMerge\022\027\n\003msg\030\001 \003(\0132\n.XmsgImMsg\"\032\n"
      "\013XmsgImMsgAt\022\013\n\003cgt\030\002 \003(\t\"\300\001\n\024XmsgImGrou"
      "pMsgNotice\022\014\n\004gcgt\030\001 \001(\t\022\014\n\004scgt\030\002 \001(\t\022\r"
      "\n\005msgId\030\003 \001(\004\022\027\n\003msg\030\004 \001(\0132\n.XmsgImMsg\022\013"
      "\n\003gts\030\005 \001(\004\022+\n\003ext\030\006 \003(\0132\036.XmsgImGroupMs"
      "gNotice.ExtEntry\032*\n\010ExtEntry\022\013\n\003key\030\001 \001("
      "\t\022\r\n\005value\030\002 \001(\t:\0028\001\"C\n\025XmsgImGroupMsgSy"
      "ncReq\022\013\n\003cgt\030\001 \001(\t\022\r\n\005msgId\030\002 \001(\004\022\016\n\006lat"
      "est\030\003 \001(\r\"<\n\025XmsgImGroupMsgSyncRsp\022#\n\003ms"
      "g\030\001 \003(\0132\026.XmsgImGroupMsgHistory\"j\n\025XmsgI"
      "mGroupMsgHistory\022\014\n\004scgt\030\001 \001(\t\022\r\n\005msgId\030"
      "\002 \001(\004\022\027\n\003msg\030\003 \001(\0132\n.XmsgImMsg\022\013\n\003gts\030\004 "
      "\001(\004\022\016\n\006isRead\030\005 \001(\010\"V\n\026XmsgImGroupMsgQue"
      "ryReq\022\013\n\003cgt\030\001 \001(\t\022\r\n\005msgId\030\002 \001(\004\022\016\n\006bef"
      "ore\030\003 \001(\010\022\020\n\010pageSize\030\004 \001(\r\"\272\001\n\026XmsgImGr"
      "oupMsgQueryRsp\022\?\n\003msg\030\001 \003(\01322.XmsgImGrou"
      "pMsgQueryRsp.XmsgImGroupMsgQueryRspItem\032"
      "_\n\032XmsgImGroupMsgQueryRspItem\022\014\n\004scgt\030\001 "
      "\001(\t\022\r\n\005msgId\030\002 \001(\004\022\027\n\003msg\030\003 \001(\0132\n.XmsgIm"
      "Msg\022\013\n\003gts\030\004 \001(\004\"3\n\025XmsgImGroupMsgReadRe"
      "q\022\013\n\003cgt\030\001 \001(\t\022\r\n\005msgId\030\002 \001(\004\"q\n\025XmsgImG"
      "roupMsgReadRsp\022,\n\003ext\030\001 \003(\0132\037.XmsgImGrou"
      "pMsgReadRsp.ExtEntry\032*\n\010ExtEntry\022\013\n\003key\030"
      "\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"6\n\030XmsgImGroupM"
      "sgReadNotice\022\013\n\003cgt\030\001 \001(\t\022\r\n\005msgId\030\002 \001(\004"
      "B\034\n\010x.msg.pbB\020XmsgImGroupMsgPbb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1878);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net-x-msg-im-group-msg.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto

// ===================================================================

XmsgImGroupSendMsgReq_ExtEntry_DoNotUse::XmsgImGroupSendMsgReq_ExtEntry_DoNotUse() {}
XmsgImGroupSendMsgReq_ExtEntry_DoNotUse::XmsgImGroupSendMsgReq_ExtEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImGroupSendMsgReq_ExtEntry_DoNotUse::MergeFrom(const XmsgImGroupSendMsgReq_ExtEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImGroupSendMsgReq_ExtEntry_DoNotUse::GetMetadata() const {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::file_level_metadata[0];
}
void XmsgImGroupSendMsgReq_ExtEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImGroupSendMsgReq::InitAsDefaultInstance() {
  ::_XmsgImGroupSendMsgReq_default_instance_._instance.get_mutable()->msg_ = const_cast< ::XmsgImMsg*>(
      ::XmsgImMsg::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImGroupSendMsgReq::kCgtFieldNumber;
const int XmsgImGroupSendMsgReq::kLocalMsgIdFieldNumber;
const int XmsgImGroupSendMsgReq::kMsgFieldNumber;
const int XmsgImGroupSendMsgReq::kExtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImGroupSendMsgReq::XmsgImGroupSendMsgReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImGroupSendMsgReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImGroupSendMsgReq)
}
XmsgImGroupSendMsgReq::XmsgImGroupSendMsgReq(const XmsgImGroupSendMsgReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ext_.MergeFrom(from.ext_);
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cgt().size() > 0) {
    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  if (from.has_msg()) {
    msg_ = new ::XmsgImMsg(*from.msg_);
  } else {
    msg_ = NULL;
  }
  localmsgid_ = from.localmsgid_;
  // @@protoc_insertion_point(copy_constructor:XmsgImGroupSendMsgReq)
}

void XmsgImGroupSendMsgReq::SharedCtor() {
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&localmsgid_) -
      reinterpret_cast<char*>(&msg_)) + sizeof(localmsgid_));
  _cached_size_ = 0;
}

XmsgImGroupSendMsgReq::~XmsgImGroupSendMsgReq() {
  // @@protoc_insertion_point(destructor:XmsgImGroupSendMsgReq)
  SharedDtor();
}

void XmsgImGroupSendMsgReq::SharedDtor() {
  cgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete msg_;
}

void XmsgImGroupSendMsgReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImGroupSendMsgReq::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImGroupSendMsgReq& XmsgImGroupSendMsgReq::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImGroupSendMsgReq();
  return *internal_default_instance();
}

XmsgImGroupSendMsgReq* XmsgImGroupSendMsgReq::New(::google::protobuf::Arena* arena) const {
  XmsgImGroupSendMsgReq* n = new XmsgImGroupSendMsgReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImGroupSendMsgReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImGroupSendMsgReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ext_.Clear();
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && msg_ != NULL) {
    delete msg_;
  }
  msg_ = NULL;
  localmsgid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool XmsgImGroupSendMsgReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImGroupSendMsgReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cgt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cgt().data(), static_cast<int>(this->cgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupSendMsgReq.cgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 localMsgId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &localmsgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .XmsgImMsg msg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> ext = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          XmsgImGroupSendMsgReq_ExtEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImGroupSendMsgReq_ExtEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&ext_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupSendMsgReq.ExtEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupSendMsgReq.ExtEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImGroupSendMsgReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImGroupSendMsgReq)
  return false;
#undef DO_
}

void XmsgImGroupSendMsgReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImGroupSendMsgReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupSendMsgReq.cgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cgt(), output);
  }

  // uint64 localMsgId = 2;
  if (this->localmsgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->localmsgid(), output);
  }

  // .XmsgImMsg msg = 3;
  if (this->has_msg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->msg_, output);
  }

  // map<string, string> ext = 4;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupSendMsgReq.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupSendMsgReq.ExtEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImGroupSendMsgReq_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImGroupSendMsgReq_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImGroupSendMsgReq)
}

::google::protobuf::uint8* XmsgImGroupSendMsgReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImGroupSendMsgReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupSendMsgReq.cgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cgt(), target);
  }

  // uint64 localMsgId = 2;
  if (this->localmsgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->localmsgid(), target);
  }

  // .XmsgImMsg msg = 3;
  if (this->has_msg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->msg_, deterministic, target);
  }

  // map<string, string> ext = 4;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupSendMsgReq.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupSendMsgReq.ExtEntry.value");
      }
    };

    if (deterministic &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImGroupSendMsgReq_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImGroupSendMsgReq_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImGroupSendMsgReq)
  return target;
}

size_t XmsgImGroupSendMsgReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImGroupSendMsgReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> ext = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ext_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImGroupSendMsgReq_ExtEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->ext().begin();
        it != this->ext().end(); ++it) {
      entry.reset(ext_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cgt());
  }

  // .XmsgImMsg msg = 3;
  if (this->has_msg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->msg_);
  }

  // uint64 localMsgId = 2;
  if (this->localmsgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->localmsgid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImGroupSendMsgReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImGroupSendMsgReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImGroupSendMsgReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImGroupSendMsgReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImGroupSendMsgReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImGroupSendMsgReq)
    MergeFrom(*source);
  }
}

void XmsgImGroupSendMsgReq::MergeFrom(const XmsgImGroupSendMsgReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImGroupSendMsgReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ext_.MergeFrom(from.ext_);
  if (from.cgt().size() > 0) {

    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  if (from.has_msg()) {
    mutable_msg()->::XmsgImMsg::MergeFrom(from.msg());
  }
  if (from.localmsgid() != 0) {
    set_localmsgid(from.localmsgid());
  }
}

void XmsgImGroupSendMsgReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImGroupSendMsgReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImGroupSendMsgReq::CopyFrom(const XmsgImGroupSendMsgReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImGroupSendMsgReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImGroupSendMsgReq::IsInitialized() const {
  return true;
}

void XmsgImGroupSendMsgReq::Swap(XmsgImGroupSendMsgReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImGroupSendMsgReq::InternalSwap(XmsgImGroupSendMsgReq* other) {
  using std::swap;
  ext_.Swap(&other->ext_);
  cgt_.Swap(&other->cgt_);
  swap(msg_, other->msg_);
  swap(localmsgid_, other->localmsgid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImGroupSendMsgReq::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgImGroupSendMsgRsp_ExtEntry_DoNotUse::XmsgImGroupSendMsgRsp_ExtEntry_DoNotUse() {}
XmsgImGroupSendMsgRsp_ExtEntry_DoNotUse::XmsgImGroupSendMsgRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImGroupSendMsgRsp_ExtEntry_DoNotUse::MergeFrom(const XmsgImGroupSendMsgRsp_ExtEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImGroupSendMsgRsp_ExtEntry_DoNotUse::GetMetadata() const {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::file_level_metadata[2];
}
void XmsgImGroupSendMsgRsp_ExtEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImGroupSendMsgRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImGroupSendMsgRsp::kMsgIdFieldNumber;
const int XmsgImGroupSendMsgRsp::kGcgtFieldNumber;
const int XmsgImGroupSendMsgRsp::kGtsFieldNumber;
const int XmsgImGroupSendMsgRsp::kExtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImGroupSendMsgRsp::XmsgImGroupSendMsgRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImGroupSendMsgRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImGroupSendMsgRsp)
}
XmsgImGroupSendMsgRsp::XmsgImGroupSendMsgRsp(const XmsgImGroupSendMsgRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ext_.MergeFrom(from.ext_);
  gcgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.gcgt().size() > 0) {
    gcgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gcgt_);
  }
  ::memcpy(&msgid_, &from.msgid_,
    static_cast<size_t>(reinterpret_cast<char*>(&gts_) -
    reinterpret_cast<char*>(&msgid_)) + sizeof(gts_));
  // @@protoc_insertion_point(copy_constructor:XmsgImGroupSendMsgRsp)
}

void XmsgImGroupSendMsgRsp::SharedCtor() {
  gcgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gts_) -
      reinterpret_cast<char*>(&msgid_)) + sizeof(gts_));
  _cached_size_ = 0;
}

XmsgImGroupSendMsgRsp::~XmsgImGroupSendMsgRsp() {
  // @@protoc_insertion_point(destructor:XmsgImGroupSendMsgRsp)
  SharedDtor();
}

void XmsgImGroupSendMsgRsp::SharedDtor() {
  gcgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgImGroupSendMsgRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImGroupSendMsgRsp::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImGroupSendMsgRsp& XmsgImGroupSendMsgRsp::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImGroupSendMsgRsp();
  return *internal_default_instance();
}

XmsgImGroupSendMsgRsp* XmsgImGroupSendMsgRsp::New(::google::protobuf::Arena* arena) const {
  XmsgImGroupSendMsgRsp* n = new XmsgImGroupSendMsgRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImGroupSendMsgRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImGroupSendMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ext_.Clear();
  gcgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gts_) -
      reinterpret_cast<char*>(&msgid_)) + sizeof(gts_));
  _internal_metadata_.Clear();
}

bool XmsgImGroupSendMsgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImGroupSendMsgRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 msgId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string gcgt = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gcgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gcgt().data(), static_cast<int>(this->gcgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupSendMsgRsp.gcgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 gts = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> ext = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          XmsgImGroupSendMsgRsp_ExtEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImGroupSendMsgRsp_ExtEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&ext_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupSendMsgRsp.ExtEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupSendMsgRsp.ExtEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImGroupSendMsgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImGroupSendMsgRsp)
  return false;
#undef DO_
}

void XmsgImGroupSendMsgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImGroupSendMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 msgId = 1;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->msgid(), output);
  }

  // string gcgt = 2;
  if (this->gcgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gcgt().data(), static_cast<int>(this->gcgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupSendMsgRsp.gcgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->gcgt(), output);
  }

  // uint64 gts = 3;
  if (this->gts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->gts(), output);
  }

  // map<string, string> ext = 4;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupSendMsgRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupSendMsgRsp.ExtEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImGroupSendMsgRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImGroupSendMsgRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImGroupSendMsgRsp)
}

::google::protobuf::uint8* XmsgImGroupSendMsgRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImGroupSendMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 msgId = 1;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->msgid(), target);
  }

  // string gcgt = 2;
  if (this->gcgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gcgt().data(), static_cast<int>(this->gcgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupSendMsgRsp.gcgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->gcgt(), target);
  }

  // uint64 gts = 3;
  if (this->gts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->gts(), target);
  }

  // map<string, string> ext = 4;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupSendMsgRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupSendMsgRsp.ExtEntry.value");
      }
    };

    if (deterministic &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImGroupSendMsgRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImGroupSendMsgRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImGroupSendMsgRsp)
  return target;
}

size_t XmsgImGroupSendMsgRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImGroupSendMsgRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> ext = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ext_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImGroupSendMsgRsp_ExtEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->ext().begin();
        it != this->ext().end(); ++it) {
      entry.reset(ext_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string gcgt = 2;
  if (this->gcgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gcgt());
  }

  // uint64 msgId = 1;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgid());
  }

  // uint64 gts = 3;
  if (this->gts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gts());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImGroupSendMsgRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImGroupSendMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImGroupSendMsgRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImGroupSendMsgRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImGroupSendMsgRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImGroupSendMsgRsp)
    MergeFrom(*source);
  }
}

void XmsgImGroupSendMsgRsp::MergeFrom(const XmsgImGroupSendMsgRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImGroupSendMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ext_.MergeFrom(from.ext_);
  if (from.gcgt().size() > 0) {

    gcgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gcgt_);
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
  if (from.gts() != 0) {
    set_gts(from.gts());
  }
}

void XmsgImGroupSendMsgRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImGroupSendMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImGroupSendMsgRsp::CopyFrom(const XmsgImGroupSendMsgRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImGroupSendMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImGroupSendMsgRsp::IsInitialized() const {
  return true;
}

void XmsgImGroupSendMsgRsp::Swap(XmsgImGroupSendMsgRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImGroupSendMsgRsp::InternalSwap(XmsgImGroupSendMsgRsp* other) {
  using std::swap;
  ext_.Swap(&other->ext_);
  gcgt_.Swap(&other->gcgt_);
  swap(msgid_, other->msgid_);
  swap(gts_, other->gts_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImGroupSendMsgRsp::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImMsg::InitAsDefaultInstance() {
  ::_XmsgImMsg_default_instance_._instance.get_mutable()->text_ = const_cast< ::XmsgImMsgText*>(
      ::XmsgImMsgText::internal_default_instance());
  ::_XmsgImMsg_default_instance_._instance.get_mutable()->html_ = const_cast< ::XmsgImMsgHtml*>(
      ::XmsgImMsgHtml::internal_default_instance());
  ::_XmsgImMsg_default_instance_._instance.get_mutable()->image_ = const_cast< ::XmsgImMsgImage*>(
      ::XmsgImMsgImage::internal_default_instance());
  ::_XmsgImMsg_default_instance_._instance.get_mutable()->voice_ = const_cast< ::XmsgImMsgVoice*>(
      ::XmsgImMsgVoice::internal_default_instance());
  ::_XmsgImMsg_default_instance_._instance.get_mutable()->video_ = const_cast< ::XmsgImMsgVideo*>(
      ::XmsgImMsgVideo::internal_default_instance());
  ::_XmsgImMsg_default_instance_._instance.get_mutable()->file_ = const_cast< ::XmsgImMsgFile*>(
      ::XmsgImMsgFile::internal_default_instance());
  ::_XmsgImMsg_default_instance_._instance.get_mutable()->merge_ = const_cast< ::XmsgImMsgMerge*>(
      ::XmsgImMsgMerge::internal_default_instance());
  ::_XmsgImMsg_default_instance_._instance.get_mutable()->atx_ = const_cast< ::XmsgImMsgAt*>(
      ::XmsgImMsgAt::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImMsg::kTypeFieldNumber;
const int XmsgImMsg::kTextFieldNumber;
const int XmsgImMsg::kHtmlFieldNumber;
const int XmsgImMsg::kImageFieldNumber;
const int XmsgImMsg::kVoiceFieldNumber;
const int XmsgImMsg::kVideoFieldNumber;
const int XmsgImMsg::kFileFieldNumber;
const int XmsgImMsg::kMergeFieldNumber;
const int XmsgImMsg::kAtxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImMsg::XmsgImMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImMsg();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImMsg)
}
XmsgImMsg::XmsgImMsg(const XmsgImMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.has_text()) {
    text_ = new ::XmsgImMsgText(*from.text_);
  } else {
    text_ = NULL;
  }
  if (from.has_html()) {
    html_ = new ::XmsgImMsgHtml(*from.html_);
  } else {
    html_ = NULL;
  }
  if (from.has_image()) {
    image_ = new ::XmsgImMsgImage(*from.image_);
  } else {
    image_ = NULL;
  }
  if (from.has_voice()) {
    voice_ = new ::XmsgImMsgVoice(*from.voice_);
  } else {
    voice_ = NULL;
  }
  if (from.has_video()) {
    video_ = new ::XmsgImMsgVideo(*from.video_);
  } else {
    video_ = NULL;
  }
  if (from.has_file()) {
    file_ = new ::XmsgImMsgFile(*from.file_);
  } else {
    file_ = NULL;
  }
  if (from.has_merge()) {
    merge_ = new ::XmsgImMsgMerge(*from.merge_);
  } else {
    merge_ = NULL;
  }
  if (from.has_atx()) {
    atx_ = new ::XmsgImMsgAt(*from.atx_);
  } else {
    atx_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:XmsgImMsg)
}

void XmsgImMsg::SharedCtor() {
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&text_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&atx_) -
      reinterpret_cast<char*>(&text_)) + sizeof(atx_));
  _cached_size_ = 0;
}

XmsgImMsg::~XmsgImMsg() {
  // @@protoc_insertion_point(destructor:XmsgImMsg)
  SharedDtor();
}

void XmsgImMsg::SharedDtor() {
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete text_;
  if (this != internal_default_instance()) delete html_;
  if (this != internal_default_instance()) delete image_;
  if (this != internal_default_instance()) delete voice_;
  if (this != internal_default_instance()) delete video_;
  if (this != internal_default_instance()) delete file_;
  if (this != internal_default_instance()) delete merge_;
  if (this != internal_default_instance()) delete atx_;
}

void XmsgImMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImMsg::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImMsg& XmsgImMsg::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImMsg();
  return *internal_default_instance();
}

XmsgImMsg* XmsgImMsg::New(::google::protobuf::Arena* arena) const {
  XmsgImMsg* n = new XmsgImMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && text_ != NULL) {
    delete text_;
  }
  text_ = NULL;
  if (GetArenaNoVirtual() == NULL && html_ != NULL) {
    delete html_;
  }
  html_ = NULL;
  if (GetArenaNoVirtual() == NULL && image_ != NULL) {
    delete image_;
  }
  image_ = NULL;
  if (GetArenaNoVirtual() == NULL && voice_ != NULL) {
    delete voice_;
  }
  voice_ = NULL;
  if (GetArenaNoVirtual() == NULL && video_ != NULL) {
    delete video_;
  }
  video_ = NULL;
  if (GetArenaNoVirtual() == NULL && file_ != NULL) {
    delete file_;
  }
  file_ = NULL;
  if (GetArenaNoVirtual() == NULL && merge_ != NULL) {
    delete merge_;
  }
  merge_ = NULL;
  if (GetArenaNoVirtual() == NULL && atx_ != NULL) {
    delete atx_;
  }
  atx_ = NULL;
  _internal_metadata_.Clear();
}

bool XmsgImMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImMsg.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .XmsgImMsgText text = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_text()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .XmsgImMsgHtml html = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_html()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .XmsgImMsgImage image = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_image()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .XmsgImMsgVoice voice = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_voice()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .XmsgImMsgVideo video = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_video()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .XmsgImMsgFile file = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_file()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .XmsgImMsgMerge merge = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_merge()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .XmsgImMsgAt atx = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_atx()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImMsg)
  return false;
#undef DO_
}

void XmsgImMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImMsg.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type(), output);
  }

  // .XmsgImMsgText text = 2;
  if (this->has_text()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->text_, output);
  }

  // .XmsgImMsgHtml html = 3;
  if (this->has_html()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->html_, output);
  }

  // .XmsgImMsgImage image = 4;
  if (this->has_image()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->image_, output);
  }

  // .XmsgImMsgVoice voice = 5;
  if (this->has_voice()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->voice_, output);
  }

  // .XmsgImMsgVideo video = 6;
  if (this->has_video()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->video_, output);
  }

  // .XmsgImMsgFile file = 7;
  if (this->has_file()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->file_, output);
  }

  // .XmsgImMsgMerge merge = 8;
  if (this->has_merge()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->merge_, output);
  }

  // .XmsgImMsgAt atx = 9;
  if (this->has_atx()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->atx_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImMsg)
}

::google::protobuf::uint8* XmsgImMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImMsg.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->type(), target);
  }

  // .XmsgImMsgText text = 2;
  if (this->has_text()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->text_, deterministic, target);
  }

  // .XmsgImMsgHtml html = 3;
  if (this->has_html()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->html_, deterministic, target);
  }

  // .XmsgImMsgImage image = 4;
  if (this->has_image()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->image_, deterministic, target);
  }

  // .XmsgImMsgVoice voice = 5;
  if (this->has_voice()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->voice_, deterministic, target);
  }

  // .XmsgImMsgVideo video = 6;
  if (this->has_video()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->video_, deterministic, target);
  }

  // .XmsgImMsgFile file = 7;
  if (this->has_file()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, *this->file_, deterministic, target);
  }

  // .XmsgImMsgMerge merge = 8;
  if (this->has_merge()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, *this->merge_, deterministic, target);
  }

  // .XmsgImMsgAt atx = 9;
  if (this->has_atx()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, *this->atx_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImMsg)
  return target;
}

size_t XmsgImMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string type = 1;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // .XmsgImMsgText text = 2;
  if (this->has_text()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->text_);
  }

  // .XmsgImMsgHtml html = 3;
  if (this->has_html()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->html_);
  }

  // .XmsgImMsgImage image = 4;
  if (this->has_image()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->image_);
  }

  // .XmsgImMsgVoice voice = 5;
  if (this->has_voice()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->voice_);
  }

  // .XmsgImMsgVideo video = 6;
  if (this->has_video()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->video_);
  }

  // .XmsgImMsgFile file = 7;
  if (this->has_file()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->file_);
  }

  // .XmsgImMsgMerge merge = 8;
  if (this->has_merge()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->merge_);
  }

  // .XmsgImMsgAt atx = 9;
  if (this->has_atx()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->atx_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImMsg)
    MergeFrom(*source);
  }
}

void XmsgImMsg::MergeFrom(const XmsgImMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.has_text()) {
    mutable_text()->::XmsgImMsgText::MergeFrom(from.text());
  }
  if (from.has_html()) {
    mutable_html()->::XmsgImMsgHtml::MergeFrom(from.html());
  }
  if (from.has_image()) {
    mutable_image()->::XmsgImMsgImage::MergeFrom(from.image());
  }
  if (from.has_voice()) {
    mutable_voice()->::XmsgImMsgVoice::MergeFrom(from.voice());
  }
  if (from.has_video()) {
    mutable_video()->::XmsgImMsgVideo::MergeFrom(from.video());
  }
  if (from.has_file()) {
    mutable_file()->::XmsgImMsgFile::MergeFrom(from.file());
  }
  if (from.has_merge()) {
    mutable_merge()->::XmsgImMsgMerge::MergeFrom(from.merge());
  }
  if (from.has_atx()) {
    mutable_atx()->::XmsgImMsgAt::MergeFrom(from.atx());
  }
}

void XmsgImMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImMsg::CopyFrom(const XmsgImMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImMsg::IsInitialized() const {
  return true;
}

void XmsgImMsg::Swap(XmsgImMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImMsg::InternalSwap(XmsgImMsg* other) {
  using std::swap;
  type_.Swap(&other->type_);
  swap(text_, other->text_);
  swap(html_, other->html_);
  swap(image_, other->image_);
  swap(voice_, other->voice_);
  swap(video_, other->video_);
  swap(file_, other->file_);
  swap(merge_, other->merge_);
  swap(atx_, other->atx_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImMsg::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImMsgText::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImMsgText::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImMsgText::XmsgImMsgText()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImMsgText();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImMsgText)
}
XmsgImMsgText::XmsgImMsgText(const XmsgImMsgText& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  // @@protoc_insertion_point(copy_constructor:XmsgImMsgText)
}

void XmsgImMsgText::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

XmsgImMsgText::~XmsgImMsgText() {
  // @@protoc_insertion_point(destructor:XmsgImMsgText)
  SharedDtor();
}

void XmsgImMsgText::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgImMsgText::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImMsgText::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImMsgText& XmsgImMsgText::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImMsgText();
  return *internal_default_instance();
}

XmsgImMsgText* XmsgImMsgText::New(::google::protobuf::Arena* arena) const {
  XmsgImMsgText* n = new XmsgImMsgText;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImMsgText::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImMsgText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool XmsgImMsgText::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImMsgText)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string text = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImMsgText.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImMsgText)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImMsgText)
  return false;
#undef DO_
}

void XmsgImMsgText::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImMsgText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImMsgText.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->text(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImMsgText)
}

::google::protobuf::uint8* XmsgImMsgText::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImMsgText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImMsgText.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->text(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImMsgText)
  return target;
}

size_t XmsgImMsgText::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImMsgText)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string text = 1;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImMsgText::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImMsgText)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImMsgText* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImMsgText>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImMsgText)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImMsgText)
    MergeFrom(*source);
  }
}

void XmsgImMsgText::MergeFrom(const XmsgImMsgText& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImMsgText)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.text().size() > 0) {

    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
}

void XmsgImMsgText::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImMsgText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImMsgText::CopyFrom(const XmsgImMsgText& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImMsgText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImMsgText::IsInitialized() const {
  return true;
}

void XmsgImMsgText::Swap(XmsgImMsgText* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImMsgText::InternalSwap(XmsgImMsgText* other) {
  using std::swap;
  text_.Swap(&other->text_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImMsgText::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImMsgHtml::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImMsgHtml::kHtmlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImMsgHtml::XmsgImMsgHtml()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImMsgHtml();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImMsgHtml)
}
XmsgImMsgHtml::XmsgImMsgHtml(const XmsgImMsgHtml& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  html_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.html().size() > 0) {
    html_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.html_);
  }
  // @@protoc_insertion_point(copy_constructor:XmsgImMsgHtml)
}

void XmsgImMsgHtml::SharedCtor() {
  html_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

XmsgImMsgHtml::~XmsgImMsgHtml() {
  // @@protoc_insertion_point(destructor:XmsgImMsgHtml)
  SharedDtor();
}

void XmsgImMsgHtml::SharedDtor() {
  html_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgImMsgHtml::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImMsgHtml::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImMsgHtml& XmsgImMsgHtml::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImMsgHtml();
  return *internal_default_instance();
}

XmsgImMsgHtml* XmsgImMsgHtml::New(::google::protobuf::Arena* arena) const {
  XmsgImMsgHtml* n = new XmsgImMsgHtml;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImMsgHtml::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImMsgHtml)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  html_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool XmsgImMsgHtml::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImMsgHtml)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string html = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_html()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->html().data(), static_cast<int>(this->html().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImMsgHtml.html"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImMsgHtml)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImMsgHtml)
  return false;
#undef DO_
}

void XmsgImMsgHtml::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImMsgHtml)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string html = 1;
  if (this->html().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->html().data(), static_cast<int>(this->html().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImMsgHtml.html");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->html(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImMsgHtml)
}

::google::protobuf::uint8* XmsgImMsgHtml::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImMsgHtml)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string html = 1;
  if (this->html().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->html().data(), static_cast<int>(this->html().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImMsgHtml.html");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->html(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImMsgHtml)
  return target;
}

size_t XmsgImMsgHtml::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImMsgHtml)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string html = 1;
  if (this->html().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->html());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImMsgHtml::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImMsgHtml)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImMsgHtml* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImMsgHtml>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImMsgHtml)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImMsgHtml)
    MergeFrom(*source);
  }
}

void XmsgImMsgHtml::MergeFrom(const XmsgImMsgHtml& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImMsgHtml)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.html().size() > 0) {

    html_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.html_);
  }
}

void XmsgImMsgHtml::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImMsgHtml)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImMsgHtml::CopyFrom(const XmsgImMsgHtml& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImMsgHtml)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImMsgHtml::IsInitialized() const {
  return true;
}

void XmsgImMsgHtml::Swap(XmsgImMsgHtml* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImMsgHtml::InternalSwap(XmsgImMsgHtml* other) {
  using std::swap;
  html_.Swap(&other->html_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImMsgHtml::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImMsgImage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImMsgImage::kUriFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImMsgImage::XmsgImMsgImage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImMsgImage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImMsgImage)
}
XmsgImMsgImage::XmsgImMsgImage(const XmsgImMsgImage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uri().size() > 0) {
    uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri_);
  }
  // @@protoc_insertion_point(copy_constructor:XmsgImMsgImage)
}

void XmsgImMsgImage::SharedCtor() {
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

XmsgImMsgImage::~XmsgImMsgImage() {
  // @@protoc_insertion_point(destructor:XmsgImMsgImage)
  SharedDtor();
}

void XmsgImMsgImage::SharedDtor() {
  uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgImMsgImage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImMsgImage::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImMsgImage& XmsgImMsgImage::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImMsgImage();
  return *internal_default_instance();
}

XmsgImMsgImage* XmsgImMsgImage::New(::google::protobuf::Arena* arena) const {
  XmsgImMsgImage* n = new XmsgImMsgImage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImMsgImage::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImMsgImage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool XmsgImMsgImage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImMsgImage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string uri = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uri().data(), static_cast<int>(this->uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImMsgImage.uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImMsgImage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImMsgImage)
  return false;
#undef DO_
}

void XmsgImMsgImage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImMsgImage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uri = 1;
  if (this->uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImMsgImage.uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uri(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImMsgImage)
}

::google::protobuf::uint8* XmsgImMsgImage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImMsgImage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uri = 1;
  if (this->uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImMsgImage.uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uri(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImMsgImage)
  return target;
}

size_t XmsgImMsgImage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImMsgImage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string uri = 1;
  if (this->uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uri());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImMsgImage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImMsgImage)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImMsgImage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImMsgImage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImMsgImage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImMsgImage)
    MergeFrom(*source);
  }
}

void XmsgImMsgImage::MergeFrom(const XmsgImMsgImage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImMsgImage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uri().size() > 0) {

    uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri_);
  }
}

void XmsgImMsgImage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImMsgImage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImMsgImage::CopyFrom(const XmsgImMsgImage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImMsgImage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImMsgImage::IsInitialized() const {
  return true;
}

void XmsgImMsgImage::Swap(XmsgImMsgImage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImMsgImage::InternalSwap(XmsgImMsgImage* other) {
  using std::swap;
  uri_.Swap(&other->uri_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImMsgImage::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImMsgVoice::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImMsgVoice::kUriFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImMsgVoice::XmsgImMsgVoice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImMsgVoice();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImMsgVoice)
}
XmsgImMsgVoice::XmsgImMsgVoice(const XmsgImMsgVoice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uri().size() > 0) {
    uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri_);
  }
  // @@protoc_insertion_point(copy_constructor:XmsgImMsgVoice)
}

void XmsgImMsgVoice::SharedCtor() {
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

XmsgImMsgVoice::~XmsgImMsgVoice() {
  // @@protoc_insertion_point(destructor:XmsgImMsgVoice)
  SharedDtor();
}

void XmsgImMsgVoice::SharedDtor() {
  uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgImMsgVoice::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImMsgVoice::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImMsgVoice& XmsgImMsgVoice::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImMsgVoice();
  return *internal_default_instance();
}

XmsgImMsgVoice* XmsgImMsgVoice::New(::google::protobuf::Arena* arena) const {
  XmsgImMsgVoice* n = new XmsgImMsgVoice;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImMsgVoice::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImMsgVoice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool XmsgImMsgVoice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImMsgVoice)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string uri = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uri().data(), static_cast<int>(this->uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImMsgVoice.uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImMsgVoice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImMsgVoice)
  return false;
#undef DO_
}

void XmsgImMsgVoice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImMsgVoice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uri = 1;
  if (this->uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImMsgVoice.uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uri(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImMsgVoice)
}

::google::protobuf::uint8* XmsgImMsgVoice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImMsgVoice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uri = 1;
  if (this->uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImMsgVoice.uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uri(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImMsgVoice)
  return target;
}

size_t XmsgImMsgVoice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImMsgVoice)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string uri = 1;
  if (this->uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uri());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImMsgVoice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImMsgVoice)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImMsgVoice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImMsgVoice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImMsgVoice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImMsgVoice)
    MergeFrom(*source);
  }
}

void XmsgImMsgVoice::MergeFrom(const XmsgImMsgVoice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImMsgVoice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uri().size() > 0) {

    uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri_);
  }
}

void XmsgImMsgVoice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImMsgVoice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImMsgVoice::CopyFrom(const XmsgImMsgVoice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImMsgVoice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImMsgVoice::IsInitialized() const {
  return true;
}

void XmsgImMsgVoice::Swap(XmsgImMsgVoice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImMsgVoice::InternalSwap(XmsgImMsgVoice* other) {
  using std::swap;
  uri_.Swap(&other->uri_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImMsgVoice::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImMsgVideo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImMsgVideo::kUriFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImMsgVideo::XmsgImMsgVideo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImMsgVideo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImMsgVideo)
}
XmsgImMsgVideo::XmsgImMsgVideo(const XmsgImMsgVideo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uri().size() > 0) {
    uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri_);
  }
  // @@protoc_insertion_point(copy_constructor:XmsgImMsgVideo)
}

void XmsgImMsgVideo::SharedCtor() {
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

XmsgImMsgVideo::~XmsgImMsgVideo() {
  // @@protoc_insertion_point(destructor:XmsgImMsgVideo)
  SharedDtor();
}

void XmsgImMsgVideo::SharedDtor() {
  uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgImMsgVideo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImMsgVideo::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImMsgVideo& XmsgImMsgVideo::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImMsgVideo();
  return *internal_default_instance();
}

XmsgImMsgVideo* XmsgImMsgVideo::New(::google::protobuf::Arena* arena) const {
  XmsgImMsgVideo* n = new XmsgImMsgVideo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImMsgVideo::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImMsgVideo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool XmsgImMsgVideo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImMsgVideo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string uri = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uri().data(), static_cast<int>(this->uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImMsgVideo.uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImMsgVideo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImMsgVideo)
  return false;
#undef DO_
}

void XmsgImMsgVideo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImMsgVideo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uri = 1;
  if (this->uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImMsgVideo.uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uri(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImMsgVideo)
}

::google::protobuf::uint8* XmsgImMsgVideo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImMsgVideo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uri = 1;
  if (this->uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImMsgVideo.uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uri(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImMsgVideo)
  return target;
}

size_t XmsgImMsgVideo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImMsgVideo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string uri = 1;
  if (this->uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uri());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImMsgVideo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImMsgVideo)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImMsgVideo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImMsgVideo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImMsgVideo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImMsgVideo)
    MergeFrom(*source);
  }
}

void XmsgImMsgVideo::MergeFrom(const XmsgImMsgVideo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImMsgVideo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uri().size() > 0) {

    uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri_);
  }
}

void XmsgImMsgVideo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImMsgVideo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImMsgVideo::CopyFrom(const XmsgImMsgVideo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImMsgVideo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImMsgVideo::IsInitialized() const {
  return true;
}

void XmsgImMsgVideo::Swap(XmsgImMsgVideo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImMsgVideo::InternalSwap(XmsgImMsgVideo* other) {
  using std::swap;
  uri_.Swap(&other->uri_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImMsgVideo::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImMsgFile::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImMsgFile::kFromFieldNumber;
const int XmsgImMsgFile::kFidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImMsgFile::XmsgImMsgFile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImMsgFile();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImMsgFile)
}
XmsgImMsgFile::XmsgImMsgFile(const XmsgImMsgFile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from().size() > 0) {
    from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_);
  }
  fid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.fid().size() > 0) {
    fid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fid_);
  }
  // @@protoc_insertion_point(copy_constructor:XmsgImMsgFile)
}

void XmsgImMsgFile::SharedCtor() {
  from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

XmsgImMsgFile::~XmsgImMsgFile() {
  // @@protoc_insertion_point(destructor:XmsgImMsgFile)
  SharedDtor();
}

void XmsgImMsgFile::SharedDtor() {
  from_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgImMsgFile::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImMsgFile::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImMsgFile& XmsgImMsgFile::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImMsgFile();
  return *internal_default_instance();
}

XmsgImMsgFile* XmsgImMsgFile::New(::google::protobuf::Arena* arena) const {
  XmsgImMsgFile* n = new XmsgImMsgFile;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImMsgFile::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImMsgFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  from_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool XmsgImMsgFile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImMsgFile)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string from = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from().data(), static_cast<int>(this->from().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImMsgFile.from"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string fid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fid().data(), static_cast<int>(this->fid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImMsgFile.fid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImMsgFile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImMsgFile)
  return false;
#undef DO_
}

void XmsgImMsgFile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImMsgFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string from = 1;
  if (this->from().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from().data(), static_cast<int>(this->from().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImMsgFile.from");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->from(), output);
  }

  // string fid = 2;
  if (this->fid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fid().data(), static_cast<int>(this->fid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImMsgFile.fid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->fid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImMsgFile)
}

::google::protobuf::uint8* XmsgImMsgFile::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImMsgFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string from = 1;
  if (this->from().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from().data(), static_cast<int>(this->from().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImMsgFile.from");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->from(), target);
  }

  // string fid = 2;
  if (this->fid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fid().data(), static_cast<int>(this->fid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImMsgFile.fid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->fid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImMsgFile)
  return target;
}

size_t XmsgImMsgFile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImMsgFile)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string from = 1;
  if (this->from().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from());
  }

  // string fid = 2;
  if (this->fid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImMsgFile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImMsgFile)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImMsgFile* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImMsgFile>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImMsgFile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImMsgFile)
    MergeFrom(*source);
  }
}

void XmsgImMsgFile::MergeFrom(const XmsgImMsgFile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImMsgFile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.from().size() > 0) {

    from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_);
  }
  if (from.fid().size() > 0) {

    fid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fid_);
  }
}

void XmsgImMsgFile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImMsgFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImMsgFile::CopyFrom(const XmsgImMsgFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImMsgFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImMsgFile::IsInitialized() const {
  return true;
}

void XmsgImMsgFile::Swap(XmsgImMsgFile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImMsgFile::InternalSwap(XmsgImMsgFile* other) {
  using std::swap;
  from_.Swap(&other->from_);
  fid_.Swap(&other->fid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImMsgFile::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImMsgMerge::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImMsgMerge::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImMsgMerge::XmsgImMsgMerge()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImMsg();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImMsgMerge)
}
XmsgImMsgMerge::XmsgImMsgMerge(const XmsgImMsgMerge& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      msg_(from.msg_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:XmsgImMsgMerge)
}

void XmsgImMsgMerge::SharedCtor() {
  _cached_size_ = 0;
}

XmsgImMsgMerge::~XmsgImMsgMerge() {
  // @@protoc_insertion_point(destructor:XmsgImMsgMerge)
  SharedDtor();
}

void XmsgImMsgMerge::SharedDtor() {
}

void XmsgImMsgMerge::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImMsgMerge::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImMsgMerge& XmsgImMsgMerge::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImMsg();
  return *internal_default_instance();
}

XmsgImMsgMerge* XmsgImMsgMerge::New(::google::protobuf::Arena* arena) const {
  XmsgImMsgMerge* n = new XmsgImMsgMerge;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImMsgMerge::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImMsgMerge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.Clear();
  _internal_metadata_.Clear();
}

bool XmsgImMsgMerge::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImMsgMerge)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .XmsgImMsg msg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImMsgMerge)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImMsgMerge)
  return false;
#undef DO_
}

void XmsgImMsgMerge::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImMsgMerge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .XmsgImMsg msg = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->msg_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->msg(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImMsgMerge)
}

::google::protobuf::uint8* XmsgImMsgMerge::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImMsgMerge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .XmsgImMsg msg = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->msg_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->msg(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImMsgMerge)
  return target;
}

size_t XmsgImMsgMerge::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImMsgMerge)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .XmsgImMsg msg = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->msg_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->msg(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImMsgMerge::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImMsgMerge)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImMsgMerge* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImMsgMerge>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImMsgMerge)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImMsgMerge)
    MergeFrom(*source);
  }
}

void XmsgImMsgMerge::MergeFrom(const XmsgImMsgMerge& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImMsgMerge)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  msg_.MergeFrom(from.msg_);
}

void XmsgImMsgMerge::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImMsgMerge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImMsgMerge::CopyFrom(const XmsgImMsgMerge& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImMsgMerge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImMsgMerge::IsInitialized() const {
  return true;
}

void XmsgImMsgMerge::Swap(XmsgImMsgMerge* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImMsgMerge::InternalSwap(XmsgImMsgMerge* other) {
  using std::swap;
  msg_.InternalSwap(&other->msg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImMsgMerge::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImMsgAt::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImMsgAt::kCgtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImMsgAt::XmsgImMsgAt()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImMsgAt();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImMsgAt)
}
XmsgImMsgAt::XmsgImMsgAt(const XmsgImMsgAt& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      cgt_(from.cgt_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:XmsgImMsgAt)
}

void XmsgImMsgAt::SharedCtor() {
  _cached_size_ = 0;
}

XmsgImMsgAt::~XmsgImMsgAt() {
  // @@protoc_insertion_point(destructor:XmsgImMsgAt)
  SharedDtor();
}

void XmsgImMsgAt::SharedDtor() {
}

void XmsgImMsgAt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImMsgAt::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImMsgAt& XmsgImMsgAt::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImMsgAt();
  return *internal_default_instance();
}

XmsgImMsgAt* XmsgImMsgAt::New(::google::protobuf::Arena* arena) const {
  XmsgImMsgAt* n = new XmsgImMsgAt;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImMsgAt::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImMsgAt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cgt_.Clear();
  _internal_metadata_.Clear();
}

bool XmsgImMsgAt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImMsgAt)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string cgt = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_cgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cgt(this->cgt_size() - 1).data(),
            static_cast<int>(this->cgt(this->cgt_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImMsgAt.cgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImMsgAt)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImMsgAt)
  return false;
#undef DO_
}

void XmsgImMsgAt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImMsgAt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string cgt = 2;
  for (int i = 0, n = this->cgt_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt(i).data(), static_cast<int>(this->cgt(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImMsgAt.cgt");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->cgt(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImMsgAt)
}

::google::protobuf::uint8* XmsgImMsgAt::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImMsgAt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string cgt = 2;
  for (int i = 0, n = this->cgt_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt(i).data(), static_cast<int>(this->cgt(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImMsgAt.cgt");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->cgt(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImMsgAt)
  return target;
}

size_t XmsgImMsgAt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImMsgAt)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string cgt = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->cgt_size());
  for (int i = 0, n = this->cgt_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->cgt(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImMsgAt::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImMsgAt)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImMsgAt* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImMsgAt>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImMsgAt)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImMsgAt)
    MergeFrom(*source);
  }
}

void XmsgImMsgAt::MergeFrom(const XmsgImMsgAt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImMsgAt)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cgt_.MergeFrom(from.cgt_);
}

void XmsgImMsgAt::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImMsgAt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImMsgAt::CopyFrom(const XmsgImMsgAt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImMsgAt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImMsgAt::IsInitialized() const {
  return true;
}

void XmsgImMsgAt::Swap(XmsgImMsgAt* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImMsgAt::InternalSwap(XmsgImMsgAt* other) {
  using std::swap;
  cgt_.InternalSwap(&other->cgt_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImMsgAt::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgImGroupMsgNotice_ExtEntry_DoNotUse::XmsgImGroupMsgNotice_ExtEntry_DoNotUse() {}
XmsgImGroupMsgNotice_ExtEntry_DoNotUse::XmsgImGroupMsgNotice_ExtEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImGroupMsgNotice_ExtEntry_DoNotUse::MergeFrom(const XmsgImGroupMsgNotice_ExtEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImGroupMsgNotice_ExtEntry_DoNotUse::GetMetadata() const {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::file_level_metadata[13];
}
void XmsgImGroupMsgNotice_ExtEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImGroupMsgNotice::InitAsDefaultInstance() {
  ::_XmsgImGroupMsgNotice_default_instance_._instance.get_mutable()->msg_ = const_cast< ::XmsgImMsg*>(
      ::XmsgImMsg::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImGroupMsgNotice::kGcgtFieldNumber;
const int XmsgImGroupMsgNotice::kScgtFieldNumber;
const int XmsgImGroupMsgNotice::kMsgIdFieldNumber;
const int XmsgImGroupMsgNotice::kMsgFieldNumber;
const int XmsgImGroupMsgNotice::kGtsFieldNumber;
const int XmsgImGroupMsgNotice::kExtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImGroupMsgNotice::XmsgImGroupMsgNotice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImGroupMsgNotice();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImGroupMsgNotice)
}
XmsgImGroupMsgNotice::XmsgImGroupMsgNotice(const XmsgImGroupMsgNotice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ext_.MergeFrom(from.ext_);
  gcgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.gcgt().size() > 0) {
    gcgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gcgt_);
  }
  scgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.scgt().size() > 0) {
    scgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scgt_);
  }
  if (from.has_msg()) {
    msg_ = new ::XmsgImMsg(*from.msg_);
  } else {
    msg_ = NULL;
  }
  ::memcpy(&msgid_, &from.msgid_,
    static_cast<size_t>(reinterpret_cast<char*>(&gts_) -
    reinterpret_cast<char*>(&msgid_)) + sizeof(gts_));
  // @@protoc_insertion_point(copy_constructor:XmsgImGroupMsgNotice)
}

void XmsgImGroupMsgNotice::SharedCtor() {
  gcgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gts_) -
      reinterpret_cast<char*>(&msg_)) + sizeof(gts_));
  _cached_size_ = 0;
}

XmsgImGroupMsgNotice::~XmsgImGroupMsgNotice() {
  // @@protoc_insertion_point(destructor:XmsgImGroupMsgNotice)
  SharedDtor();
}

void XmsgImGroupMsgNotice::SharedDtor() {
  gcgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete msg_;
}

void XmsgImGroupMsgNotice::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImGroupMsgNotice::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImGroupMsgNotice& XmsgImGroupMsgNotice::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImGroupMsgNotice();
  return *internal_default_instance();
}

XmsgImGroupMsgNotice* XmsgImGroupMsgNotice::New(::google::protobuf::Arena* arena) const {
  XmsgImGroupMsgNotice* n = new XmsgImGroupMsgNotice;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImGroupMsgNotice::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImGroupMsgNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ext_.Clear();
  gcgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && msg_ != NULL) {
    delete msg_;
  }
  msg_ = NULL;
  ::memset(&msgid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gts_) -
      reinterpret_cast<char*>(&msgid_)) + sizeof(gts_));
  _internal_metadata_.Clear();
}

bool XmsgImGroupMsgNotice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImGroupMsgNotice)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string gcgt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gcgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gcgt().data(), static_cast<int>(this->gcgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupMsgNotice.gcgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string scgt = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scgt().data(), static_cast<int>(this->scgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupMsgNotice.scgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .XmsgImMsg msg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 gts = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> ext = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          XmsgImGroupMsgNotice_ExtEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImGroupMsgNotice_ExtEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&ext_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupMsgNotice.ExtEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupMsgNotice.ExtEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImGroupMsgNotice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImGroupMsgNotice)
  return false;
#undef DO_
}

void XmsgImGroupMsgNotice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImGroupMsgNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string gcgt = 1;
  if (this->gcgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gcgt().data(), static_cast<int>(this->gcgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupMsgNotice.gcgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->gcgt(), output);
  }

  // string scgt = 2;
  if (this->scgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scgt().data(), static_cast<int>(this->scgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupMsgNotice.scgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->scgt(), output);
  }

  // uint64 msgId = 3;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->msgid(), output);
  }

  // .XmsgImMsg msg = 4;
  if (this->has_msg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->msg_, output);
  }

  // uint64 gts = 5;
  if (this->gts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->gts(), output);
  }

  // map<string, string> ext = 6;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupMsgNotice.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupMsgNotice.ExtEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImGroupMsgNotice_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImGroupMsgNotice_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImGroupMsgNotice)
}

::google::protobuf::uint8* XmsgImGroupMsgNotice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImGroupMsgNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string gcgt = 1;
  if (this->gcgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gcgt().data(), static_cast<int>(this->gcgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupMsgNotice.gcgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->gcgt(), target);
  }

  // string scgt = 2;
  if (this->scgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scgt().data(), static_cast<int>(this->scgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupMsgNotice.scgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->scgt(), target);
  }

  // uint64 msgId = 3;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->msgid(), target);
  }

  // .XmsgImMsg msg = 4;
  if (this->has_msg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->msg_, deterministic, target);
  }

  // uint64 gts = 5;
  if (this->gts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->gts(), target);
  }

  // map<string, string> ext = 6;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupMsgNotice.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupMsgNotice.ExtEntry.value");
      }
    };

    if (deterministic &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImGroupMsgNotice_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImGroupMsgNotice_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImGroupMsgNotice)
  return target;
}

size_t XmsgImGroupMsgNotice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImGroupMsgNotice)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> ext = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ext_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImGroupMsgNotice_ExtEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->ext().begin();
        it != this->ext().end(); ++it) {
      entry.reset(ext_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string gcgt = 1;
  if (this->gcgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gcgt());
  }

  // string scgt = 2;
  if (this->scgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->scgt());
  }

  // .XmsgImMsg msg = 4;
  if (this->has_msg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->msg_);
  }

  // uint64 msgId = 3;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgid());
  }

  // uint64 gts = 5;
  if (this->gts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gts());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImGroupMsgNotice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImGroupMsgNotice)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImGroupMsgNotice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImGroupMsgNotice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImGroupMsgNotice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImGroupMsgNotice)
    MergeFrom(*source);
  }
}

void XmsgImGroupMsgNotice::MergeFrom(const XmsgImGroupMsgNotice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImGroupMsgNotice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ext_.MergeFrom(from.ext_);
  if (from.gcgt().size() > 0) {

    gcgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gcgt_);
  }
  if (from.scgt().size() > 0) {

    scgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scgt_);
  }
  if (from.has_msg()) {
    mutable_msg()->::XmsgImMsg::MergeFrom(from.msg());
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
  if (from.gts() != 0) {
    set_gts(from.gts());
  }
}

void XmsgImGroupMsgNotice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImGroupMsgNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImGroupMsgNotice::CopyFrom(const XmsgImGroupMsgNotice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImGroupMsgNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImGroupMsgNotice::IsInitialized() const {
  return true;
}

void XmsgImGroupMsgNotice::Swap(XmsgImGroupMsgNotice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImGroupMsgNotice::InternalSwap(XmsgImGroupMsgNotice* other) {
  using std::swap;
  ext_.Swap(&other->ext_);
  gcgt_.Swap(&other->gcgt_);
  scgt_.Swap(&other->scgt_);
  swap(msg_, other->msg_);
  swap(msgid_, other->msgid_);
  swap(gts_, other->gts_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImGroupMsgNotice::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImGroupMsgSyncReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImGroupMsgSyncReq::kCgtFieldNumber;
const int XmsgImGroupMsgSyncReq::kMsgIdFieldNumber;
const int XmsgImGroupMsgSyncReq::kLatestFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImGroupMsgSyncReq::XmsgImGroupMsgSyncReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImGroupMsgSyncReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImGroupMsgSyncReq)
}
XmsgImGroupMsgSyncReq::XmsgImGroupMsgSyncReq(const XmsgImGroupMsgSyncReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cgt().size() > 0) {
    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  ::memcpy(&msgid_, &from.msgid_,
    static_cast<size_t>(reinterpret_cast<char*>(&latest_) -
    reinterpret_cast<char*>(&msgid_)) + sizeof(latest_));
  // @@protoc_insertion_point(copy_constructor:XmsgImGroupMsgSyncReq)
}

void XmsgImGroupMsgSyncReq::SharedCtor() {
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&latest_) -
      reinterpret_cast<char*>(&msgid_)) + sizeof(latest_));
  _cached_size_ = 0;
}

XmsgImGroupMsgSyncReq::~XmsgImGroupMsgSyncReq() {
  // @@protoc_insertion_point(destructor:XmsgImGroupMsgSyncReq)
  SharedDtor();
}

void XmsgImGroupMsgSyncReq::SharedDtor() {
  cgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgImGroupMsgSyncReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImGroupMsgSyncReq::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImGroupMsgSyncReq& XmsgImGroupMsgSyncReq::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImGroupMsgSyncReq();
  return *internal_default_instance();
}

XmsgImGroupMsgSyncReq* XmsgImGroupMsgSyncReq::New(::google::protobuf::Arena* arena) const {
  XmsgImGroupMsgSyncReq* n = new XmsgImGroupMsgSyncReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImGroupMsgSyncReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImGroupMsgSyncReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&latest_) -
      reinterpret_cast<char*>(&msgid_)) + sizeof(latest_));
  _internal_metadata_.Clear();
}

bool XmsgImGroupMsgSyncReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImGroupMsgSyncReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cgt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cgt().data(), static_cast<int>(this->cgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupMsgSyncReq.cgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 latest = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &latest_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImGroupMsgSyncReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImGroupMsgSyncReq)
  return false;
#undef DO_
}

void XmsgImGroupMsgSyncReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImGroupMsgSyncReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupMsgSyncReq.cgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cgt(), output);
  }

  // uint64 msgId = 2;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->msgid(), output);
  }

  // uint32 latest = 3;
  if (this->latest() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->latest(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImGroupMsgSyncReq)
}

::google::protobuf::uint8* XmsgImGroupMsgSyncReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImGroupMsgSyncReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupMsgSyncReq.cgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cgt(), target);
  }

  // uint64 msgId = 2;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->msgid(), target);
  }

  // uint32 latest = 3;
  if (this->latest() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->latest(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImGroupMsgSyncReq)
  return target;
}

size_t XmsgImGroupMsgSyncReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImGroupMsgSyncReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string cgt = 1;
  if (this->cgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cgt());
  }

  // uint64 msgId = 2;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgid());
  }

  // uint32 latest = 3;
  if (this->latest() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->latest());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImGroupMsgSyncReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImGroupMsgSyncReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImGroupMsgSyncReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImGroupMsgSyncReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImGroupMsgSyncReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImGroupMsgSyncReq)
    MergeFrom(*source);
  }
}

void XmsgImGroupMsgSyncReq::MergeFrom(const XmsgImGroupMsgSyncReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImGroupMsgSyncReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cgt().size() > 0) {

    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
  if (from.latest() != 0) {
    set_latest(from.latest());
  }
}

void XmsgImGroupMsgSyncReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImGroupMsgSyncReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImGroupMsgSyncReq::CopyFrom(const XmsgImGroupMsgSyncReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImGroupMsgSyncReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImGroupMsgSyncReq::IsInitialized() const {
  return true;
}

void XmsgImGroupMsgSyncReq::Swap(XmsgImGroupMsgSyncReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImGroupMsgSyncReq::InternalSwap(XmsgImGroupMsgSyncReq* other) {
  using std::swap;
  cgt_.Swap(&other->cgt_);
  swap(msgid_, other->msgid_);
  swap(latest_, other->latest_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImGroupMsgSyncReq::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImGroupMsgSyncRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImGroupMsgSyncRsp::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImGroupMsgSyncRsp::XmsgImGroupMsgSyncRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImGroupMsgSyncRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImGroupMsgSyncRsp)
}
XmsgImGroupMsgSyncRsp::XmsgImGroupMsgSyncRsp(const XmsgImGroupMsgSyncRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      msg_(from.msg_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:XmsgImGroupMsgSyncRsp)
}

void XmsgImGroupMsgSyncRsp::SharedCtor() {
  _cached_size_ = 0;
}

XmsgImGroupMsgSyncRsp::~XmsgImGroupMsgSyncRsp() {
  // @@protoc_insertion_point(destructor:XmsgImGroupMsgSyncRsp)
  SharedDtor();
}

void XmsgImGroupMsgSyncRsp::SharedDtor() {
}

void XmsgImGroupMsgSyncRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImGroupMsgSyncRsp::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImGroupMsgSyncRsp& XmsgImGroupMsgSyncRsp::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImGroupMsgSyncRsp();
  return *internal_default_instance();
}

XmsgImGroupMsgSyncRsp* XmsgImGroupMsgSyncRsp::New(::google::protobuf::Arena* arena) const {
  XmsgImGroupMsgSyncRsp* n = new XmsgImGroupMsgSyncRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImGroupMsgSyncRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImGroupMsgSyncRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.Clear();
  _internal_metadata_.Clear();
}

bool XmsgImGroupMsgSyncRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImGroupMsgSyncRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .XmsgImGroupMsgHistory msg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImGroupMsgSyncRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImGroupMsgSyncRsp)
  return false;
#undef DO_
}

void XmsgImGroupMsgSyncRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImGroupMsgSyncRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .XmsgImGroupMsgHistory msg = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->msg_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->msg(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImGroupMsgSyncRsp)
}

::google::protobuf::uint8* XmsgImGroupMsgSyncRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImGroupMsgSyncRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .XmsgImGroupMsgHistory msg = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->msg_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->msg(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImGroupMsgSyncRsp)
  return target;
}

size_t XmsgImGroupMsgSyncRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImGroupMsgSyncRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .XmsgImGroupMsgHistory msg = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->msg_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->msg(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImGroupMsgSyncRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImGroupMsgSyncRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImGroupMsgSyncRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImGroupMsgSyncRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImGroupMsgSyncRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImGroupMsgSyncRsp)
    MergeFrom(*source);
  }
}

void XmsgImGroupMsgSyncRsp::MergeFrom(const XmsgImGroupMsgSyncRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImGroupMsgSyncRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  msg_.MergeFrom(from.msg_);
}

void XmsgImGroupMsgSyncRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImGroupMsgSyncRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImGroupMsgSyncRsp::CopyFrom(const XmsgImGroupMsgSyncRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImGroupMsgSyncRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImGroupMsgSyncRsp::IsInitialized() const {
  return true;
}

void XmsgImGroupMsgSyncRsp::Swap(XmsgImGroupMsgSyncRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImGroupMsgSyncRsp::InternalSwap(XmsgImGroupMsgSyncRsp* other) {
  using std::swap;
  msg_.InternalSwap(&other->msg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImGroupMsgSyncRsp::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImGroupMsgHistory::InitAsDefaultInstance() {
  ::_XmsgImGroupMsgHistory_default_instance_._instance.get_mutable()->msg_ = const_cast< ::XmsgImMsg*>(
      ::XmsgImMsg::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImGroupMsgHistory::kScgtFieldNumber;
const int XmsgImGroupMsgHistory::kMsgIdFieldNumber;
const int XmsgImGroupMsgHistory::kMsgFieldNumber;
const int XmsgImGroupMsgHistory::kGtsFieldNumber;
const int XmsgImGroupMsgHistory::kIsReadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImGroupMsgHistory::XmsgImGroupMsgHistory()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImGroupMsgHistory();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImGroupMsgHistory)
}
XmsgImGroupMsgHistory::XmsgImGroupMsgHistory(const XmsgImGroupMsgHistory& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  scgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.scgt().size() > 0) {
    scgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scgt_);
  }
  if (from.has_msg()) {
    msg_ = new ::XmsgImMsg(*from.msg_);
  } else {
    msg_ = NULL;
  }
  ::memcpy(&msgid_, &from.msgid_,
    static_cast<size_t>(reinterpret_cast<char*>(&isread_) -
    reinterpret_cast<char*>(&msgid_)) + sizeof(isread_));
  // @@protoc_insertion_point(copy_constructor:XmsgImGroupMsgHistory)
}

void XmsgImGroupMsgHistory::SharedCtor() {
  scgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isread_) -
      reinterpret_cast<char*>(&msg_)) + sizeof(isread_));
  _cached_size_ = 0;
}

XmsgImGroupMsgHistory::~XmsgImGroupMsgHistory() {
  // @@protoc_insertion_point(destructor:XmsgImGroupMsgHistory)
  SharedDtor();
}

void XmsgImGroupMsgHistory::SharedDtor() {
  scgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete msg_;
}

void XmsgImGroupMsgHistory::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImGroupMsgHistory::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImGroupMsgHistory& XmsgImGroupMsgHistory::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImGroupMsgHistory();
  return *internal_default_instance();
}

XmsgImGroupMsgHistory* XmsgImGroupMsgHistory::New(::google::protobuf::Arena* arena) const {
  XmsgImGroupMsgHistory* n = new XmsgImGroupMsgHistory;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImGroupMsgHistory::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImGroupMsgHistory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  scgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && msg_ != NULL) {
    delete msg_;
  }
  msg_ = NULL;
  ::memset(&msgid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isread_) -
      reinterpret_cast<char*>(&msgid_)) + sizeof(isread_));
  _internal_metadata_.Clear();
}

bool XmsgImGroupMsgHistory::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImGroupMsgHistory)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string scgt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scgt().data(), static_cast<int>(this->scgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupMsgHistory.scgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .XmsgImMsg msg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 gts = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isRead = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isread_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImGroupMsgHistory)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImGroupMsgHistory)
  return false;
#undef DO_
}

void XmsgImGroupMsgHistory::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImGroupMsgHistory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string scgt = 1;
  if (this->scgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scgt().data(), static_cast<int>(this->scgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupMsgHistory.scgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->scgt(), output);
  }

  // uint64 msgId = 2;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->msgid(), output);
  }

  // .XmsgImMsg msg = 3;
  if (this->has_msg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->msg_, output);
  }

  // uint64 gts = 4;
  if (this->gts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->gts(), output);
  }

  // bool isRead = 5;
  if (this->isread() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->isread(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImGroupMsgHistory)
}

::google::protobuf::uint8* XmsgImGroupMsgHistory::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImGroupMsgHistory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string scgt = 1;
  if (this->scgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scgt().data(), static_cast<int>(this->scgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupMsgHistory.scgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->scgt(), target);
  }

  // uint64 msgId = 2;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->msgid(), target);
  }

  // .XmsgImMsg msg = 3;
  if (this->has_msg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->msg_, deterministic, target);
  }

  // uint64 gts = 4;
  if (this->gts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->gts(), target);
  }

  // bool isRead = 5;
  if (this->isread() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->isread(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImGroupMsgHistory)
  return target;
}

size_t XmsgImGroupMsgHistory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImGroupMsgHistory)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string scgt = 1;
  if (this->scgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->scgt());
  }

  // .XmsgImMsg msg = 3;
  if (this->has_msg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->msg_);
  }

  // uint64 msgId = 2;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgid());
  }

  // uint64 gts = 4;
  if (this->gts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gts());
  }

  // bool isRead = 5;
  if (this->isread() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImGroupMsgHistory::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImGroupMsgHistory)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImGroupMsgHistory* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImGroupMsgHistory>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImGroupMsgHistory)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImGroupMsgHistory)
    MergeFrom(*source);
  }
}

void XmsgImGroupMsgHistory::MergeFrom(const XmsgImGroupMsgHistory& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImGroupMsgHistory)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.scgt().size() > 0) {

    scgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scgt_);
  }
  if (from.has_msg()) {
    mutable_msg()->::XmsgImMsg::MergeFrom(from.msg());
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
  if (from.gts() != 0) {
    set_gts(from.gts());
  }
  if (from.isread() != 0) {
    set_isread(from.isread());
  }
}

void XmsgImGroupMsgHistory::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImGroupMsgHistory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImGroupMsgHistory::CopyFrom(const XmsgImGroupMsgHistory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImGroupMsgHistory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImGroupMsgHistory::IsInitialized() const {
  return true;
}

void XmsgImGroupMsgHistory::Swap(XmsgImGroupMsgHistory* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImGroupMsgHistory::InternalSwap(XmsgImGroupMsgHistory* other) {
  using std::swap;
  scgt_.Swap(&other->scgt_);
  swap(msg_, other->msg_);
  swap(msgid_, other->msgid_);
  swap(gts_, other->gts_);
  swap(isread_, other->isread_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImGroupMsgHistory::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImGroupMsgQueryReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImGroupMsgQueryReq::kCgtFieldNumber;
const int XmsgImGroupMsgQueryReq::kMsgIdFieldNumber;
const int XmsgImGroupMsgQueryReq::kBeforeFieldNumber;
const int XmsgImGroupMsgQueryReq::kPageSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImGroupMsgQueryReq::XmsgImGroupMsgQueryReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImGroupMsgQueryReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImGroupMsgQueryReq)
}
XmsgImGroupMsgQueryReq::XmsgImGroupMsgQueryReq(const XmsgImGroupMsgQueryReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cgt().size() > 0) {
    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  ::memcpy(&msgid_, &from.msgid_,
    static_cast<size_t>(reinterpret_cast<char*>(&pagesize_) -
    reinterpret_cast<char*>(&msgid_)) + sizeof(pagesize_));
  // @@protoc_insertion_point(copy_constructor:XmsgImGroupMsgQueryReq)
}

void XmsgImGroupMsgQueryReq::SharedCtor() {
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pagesize_) -
      reinterpret_cast<char*>(&msgid_)) + sizeof(pagesize_));
  _cached_size_ = 0;
}

XmsgImGroupMsgQueryReq::~XmsgImGroupMsgQueryReq() {
  // @@protoc_insertion_point(destructor:XmsgImGroupMsgQueryReq)
  SharedDtor();
}

void XmsgImGroupMsgQueryReq::SharedDtor() {
  cgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgImGroupMsgQueryReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImGroupMsgQueryReq::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImGroupMsgQueryReq& XmsgImGroupMsgQueryReq::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImGroupMsgQueryReq();
  return *internal_default_instance();
}

XmsgImGroupMsgQueryReq* XmsgImGroupMsgQueryReq::New(::google::protobuf::Arena* arena) const {
  XmsgImGroupMsgQueryReq* n = new XmsgImGroupMsgQueryReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImGroupMsgQueryReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImGroupMsgQueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pagesize_) -
      reinterpret_cast<char*>(&msgid_)) + sizeof(pagesize_));
  _internal_metadata_.Clear();
}

bool XmsgImGroupMsgQueryReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImGroupMsgQueryReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cgt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cgt().data(), static_cast<int>(this->cgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupMsgQueryReq.cgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool before = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &before_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 pageSize = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pagesize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImGroupMsgQueryReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImGroupMsgQueryReq)
  return false;
#undef DO_
}

void XmsgImGroupMsgQueryReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImGroupMsgQueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupMsgQueryReq.cgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cgt(), output);
  }

  // uint64 msgId = 2;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->msgid(), output);
  }

  // bool before = 3;
  if (this->before() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->before(), output);
  }

  // uint32 pageSize = 4;
  if (this->pagesize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->pagesize(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImGroupMsgQueryReq)
}

::google::protobuf::uint8* XmsgImGroupMsgQueryReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImGroupMsgQueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupMsgQueryReq.cgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cgt(), target);
  }

  // uint64 msgId = 2;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->msgid(), target);
  }

  // bool before = 3;
  if (this->before() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->before(), target);
  }

  // uint32 pageSize = 4;
  if (this->pagesize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->pagesize(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImGroupMsgQueryReq)
  return target;
}

size_t XmsgImGroupMsgQueryReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImGroupMsgQueryReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string cgt = 1;
  if (this->cgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cgt());
  }

  // uint64 msgId = 2;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgid());
  }

  // bool before = 3;
  if (this->before() != 0) {
    total_size += 1 + 1;
  }

  // uint32 pageSize = 4;
  if (this->pagesize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pagesize());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImGroupMsgQueryReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImGroupMsgQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImGroupMsgQueryReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImGroupMsgQueryReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImGroupMsgQueryReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImGroupMsgQueryReq)
    MergeFrom(*source);
  }
}

void XmsgImGroupMsgQueryReq::MergeFrom(const XmsgImGroupMsgQueryReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImGroupMsgQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cgt().size() > 0) {

    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
  if (from.before() != 0) {
    set_before(from.before());
  }
  if (from.pagesize() != 0) {
    set_pagesize(from.pagesize());
  }
}

void XmsgImGroupMsgQueryReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImGroupMsgQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImGroupMsgQueryReq::CopyFrom(const XmsgImGroupMsgQueryReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImGroupMsgQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImGroupMsgQueryReq::IsInitialized() const {
  return true;
}

void XmsgImGroupMsgQueryReq::Swap(XmsgImGroupMsgQueryReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImGroupMsgQueryReq::InternalSwap(XmsgImGroupMsgQueryReq* other) {
  using std::swap;
  cgt_.Swap(&other->cgt_);
  swap(msgid_, other->msgid_);
  swap(before_, other->before_);
  swap(pagesize_, other->pagesize_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImGroupMsgQueryReq::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem::InitAsDefaultInstance() {
  ::_XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem_default_instance_._instance.get_mutable()->msg_ = const_cast< ::XmsgImMsg*>(
      ::XmsgImMsg::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem::kScgtFieldNumber;
const int XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem::kMsgIdFieldNumber;
const int XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem::kMsgFieldNumber;
const int XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem::kGtsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem::XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImGroupMsgQueryRsp.XmsgImGroupMsgQueryRspItem)
}
XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem::XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem(const XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  scgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.scgt().size() > 0) {
    scgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scgt_);
  }
  if (from.has_msg()) {
    msg_ = new ::XmsgImMsg(*from.msg_);
  } else {
    msg_ = NULL;
  }
  ::memcpy(&msgid_, &from.msgid_,
    static_cast<size_t>(reinterpret_cast<char*>(&gts_) -
    reinterpret_cast<char*>(&msgid_)) + sizeof(gts_));
  // @@protoc_insertion_point(copy_constructor:XmsgImGroupMsgQueryRsp.XmsgImGroupMsgQueryRspItem)
}

void XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem::SharedCtor() {
  scgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gts_) -
      reinterpret_cast<char*>(&msg_)) + sizeof(gts_));
  _cached_size_ = 0;
}

XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem::~XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem() {
  // @@protoc_insertion_point(destructor:XmsgImGroupMsgQueryRsp.XmsgImGroupMsgQueryRspItem)
  SharedDtor();
}

void XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem::SharedDtor() {
  scgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete msg_;
}

void XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem& XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem();
  return *internal_default_instance();
}

XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem* XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem::New(::google::protobuf::Arena* arena) const {
  XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem* n = new XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImGroupMsgQueryRsp.XmsgImGroupMsgQueryRspItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  scgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && msg_ != NULL) {
    delete msg_;
  }
  msg_ = NULL;
  ::memset(&msgid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gts_) -
      reinterpret_cast<char*>(&msgid_)) + sizeof(gts_));
  _internal_metadata_.Clear();
}

bool XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImGroupMsgQueryRsp.XmsgImGroupMsgQueryRspItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string scgt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scgt().data(), static_cast<int>(this->scgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupMsgQueryRsp.XmsgImGroupMsgQueryRspItem.scgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .XmsgImMsg msg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 gts = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImGroupMsgQueryRsp.XmsgImGroupMsgQueryRspItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImGroupMsgQueryRsp.XmsgImGroupMsgQueryRspItem)
  return false;
#undef DO_
}

void XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImGroupMsgQueryRsp.XmsgImGroupMsgQueryRspItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string scgt = 1;
  if (this->scgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scgt().data(), static_cast<int>(this->scgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupMsgQueryRsp.XmsgImGroupMsgQueryRspItem.scgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->scgt(), output);
  }

  // uint64 msgId = 2;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->msgid(), output);
  }

  // .XmsgImMsg msg = 3;
  if (this->has_msg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->msg_, output);
  }

  // uint64 gts = 4;
  if (this->gts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->gts(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImGroupMsgQueryRsp.XmsgImGroupMsgQueryRspItem)
}

::google::protobuf::uint8* XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImGroupMsgQueryRsp.XmsgImGroupMsgQueryRspItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string scgt = 1;
  if (this->scgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scgt().data(), static_cast<int>(this->scgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupMsgQueryRsp.XmsgImGroupMsgQueryRspItem.scgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->scgt(), target);
  }

  // uint64 msgId = 2;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->msgid(), target);
  }

  // .XmsgImMsg msg = 3;
  if (this->has_msg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->msg_, deterministic, target);
  }

  // uint64 gts = 4;
  if (this->gts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->gts(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImGroupMsgQueryRsp.XmsgImGroupMsgQueryRspItem)
  return target;
}

size_t XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImGroupMsgQueryRsp.XmsgImGroupMsgQueryRspItem)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string scgt = 1;
  if (this->scgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->scgt());
  }

  // .XmsgImMsg msg = 3;
  if (this->has_msg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->msg_);
  }

  // uint64 msgId = 2;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgid());
  }

  // uint64 gts = 4;
  if (this->gts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gts());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImGroupMsgQueryRsp.XmsgImGroupMsgQueryRspItem)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImGroupMsgQueryRsp.XmsgImGroupMsgQueryRspItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImGroupMsgQueryRsp.XmsgImGroupMsgQueryRspItem)
    MergeFrom(*source);
  }
}

void XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem::MergeFrom(const XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImGroupMsgQueryRsp.XmsgImGroupMsgQueryRspItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.scgt().size() > 0) {

    scgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scgt_);
  }
  if (from.has_msg()) {
    mutable_msg()->::XmsgImMsg::MergeFrom(from.msg());
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
  if (from.gts() != 0) {
    set_gts(from.gts());
  }
}

void XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImGroupMsgQueryRsp.XmsgImGroupMsgQueryRspItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem::CopyFrom(const XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImGroupMsgQueryRsp.XmsgImGroupMsgQueryRspItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem::IsInitialized() const {
  return true;
}

void XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem::Swap(XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem::InternalSwap(XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem* other) {
  using std::swap;
  scgt_.Swap(&other->scgt_);
  swap(msg_, other->msg_);
  swap(msgid_, other->msgid_);
  swap(gts_, other->gts_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImGroupMsgQueryRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImGroupMsgQueryRsp::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImGroupMsgQueryRsp::XmsgImGroupMsgQueryRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImGroupMsgQueryRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImGroupMsgQueryRsp)
}
XmsgImGroupMsgQueryRsp::XmsgImGroupMsgQueryRsp(const XmsgImGroupMsgQueryRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      msg_(from.msg_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:XmsgImGroupMsgQueryRsp)
}

void XmsgImGroupMsgQueryRsp::SharedCtor() {
  _cached_size_ = 0;
}

XmsgImGroupMsgQueryRsp::~XmsgImGroupMsgQueryRsp() {
  // @@protoc_insertion_point(destructor:XmsgImGroupMsgQueryRsp)
  SharedDtor();
}

void XmsgImGroupMsgQueryRsp::SharedDtor() {
}

void XmsgImGroupMsgQueryRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImGroupMsgQueryRsp::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImGroupMsgQueryRsp& XmsgImGroupMsgQueryRsp::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImGroupMsgQueryRsp();
  return *internal_default_instance();
}

XmsgImGroupMsgQueryRsp* XmsgImGroupMsgQueryRsp::New(::google::protobuf::Arena* arena) const {
  XmsgImGroupMsgQueryRsp* n = new XmsgImGroupMsgQueryRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImGroupMsgQueryRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImGroupMsgQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.Clear();
  _internal_metadata_.Clear();
}

bool XmsgImGroupMsgQueryRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImGroupMsgQueryRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .XmsgImGroupMsgQueryRsp.XmsgImGroupMsgQueryRspItem msg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImGroupMsgQueryRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImGroupMsgQueryRsp)
  return false;
#undef DO_
}

void XmsgImGroupMsgQueryRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImGroupMsgQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .XmsgImGroupMsgQueryRsp.XmsgImGroupMsgQueryRspItem msg = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->msg_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->msg(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImGroupMsgQueryRsp)
}

::google::protobuf::uint8* XmsgImGroupMsgQueryRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImGroupMsgQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .XmsgImGroupMsgQueryRsp.XmsgImGroupMsgQueryRspItem msg = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->msg_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->msg(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImGroupMsgQueryRsp)
  return target;
}

size_t XmsgImGroupMsgQueryRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImGroupMsgQueryRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .XmsgImGroupMsgQueryRsp.XmsgImGroupMsgQueryRspItem msg = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->msg_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->msg(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImGroupMsgQueryRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImGroupMsgQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImGroupMsgQueryRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImGroupMsgQueryRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImGroupMsgQueryRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImGroupMsgQueryRsp)
    MergeFrom(*source);
  }
}

void XmsgImGroupMsgQueryRsp::MergeFrom(const XmsgImGroupMsgQueryRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImGroupMsgQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  msg_.MergeFrom(from.msg_);
}

void XmsgImGroupMsgQueryRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImGroupMsgQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImGroupMsgQueryRsp::CopyFrom(const XmsgImGroupMsgQueryRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImGroupMsgQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImGroupMsgQueryRsp::IsInitialized() const {
  return true;
}

void XmsgImGroupMsgQueryRsp::Swap(XmsgImGroupMsgQueryRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImGroupMsgQueryRsp::InternalSwap(XmsgImGroupMsgQueryRsp* other) {
  using std::swap;
  msg_.InternalSwap(&other->msg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImGroupMsgQueryRsp::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImGroupMsgReadReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImGroupMsgReadReq::kCgtFieldNumber;
const int XmsgImGroupMsgReadReq::kMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImGroupMsgReadReq::XmsgImGroupMsgReadReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImGroupMsgReadReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImGroupMsgReadReq)
}
XmsgImGroupMsgReadReq::XmsgImGroupMsgReadReq(const XmsgImGroupMsgReadReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cgt().size() > 0) {
    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  msgid_ = from.msgid_;
  // @@protoc_insertion_point(copy_constructor:XmsgImGroupMsgReadReq)
}

void XmsgImGroupMsgReadReq::SharedCtor() {
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgid_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

XmsgImGroupMsgReadReq::~XmsgImGroupMsgReadReq() {
  // @@protoc_insertion_point(destructor:XmsgImGroupMsgReadReq)
  SharedDtor();
}

void XmsgImGroupMsgReadReq::SharedDtor() {
  cgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgImGroupMsgReadReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImGroupMsgReadReq::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImGroupMsgReadReq& XmsgImGroupMsgReadReq::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImGroupMsgReadReq();
  return *internal_default_instance();
}

XmsgImGroupMsgReadReq* XmsgImGroupMsgReadReq::New(::google::protobuf::Arena* arena) const {
  XmsgImGroupMsgReadReq* n = new XmsgImGroupMsgReadReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImGroupMsgReadReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImGroupMsgReadReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool XmsgImGroupMsgReadReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImGroupMsgReadReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cgt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cgt().data(), static_cast<int>(this->cgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupMsgReadReq.cgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImGroupMsgReadReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImGroupMsgReadReq)
  return false;
#undef DO_
}

void XmsgImGroupMsgReadReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImGroupMsgReadReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupMsgReadReq.cgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cgt(), output);
  }

  // uint64 msgId = 2;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->msgid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImGroupMsgReadReq)
}

::google::protobuf::uint8* XmsgImGroupMsgReadReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImGroupMsgReadReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupMsgReadReq.cgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cgt(), target);
  }

  // uint64 msgId = 2;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->msgid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImGroupMsgReadReq)
  return target;
}

size_t XmsgImGroupMsgReadReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImGroupMsgReadReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string cgt = 1;
  if (this->cgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cgt());
  }

  // uint64 msgId = 2;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImGroupMsgReadReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImGroupMsgReadReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImGroupMsgReadReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImGroupMsgReadReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImGroupMsgReadReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImGroupMsgReadReq)
    MergeFrom(*source);
  }
}

void XmsgImGroupMsgReadReq::MergeFrom(const XmsgImGroupMsgReadReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImGroupMsgReadReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cgt().size() > 0) {

    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
}

void XmsgImGroupMsgReadReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImGroupMsgReadReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImGroupMsgReadReq::CopyFrom(const XmsgImGroupMsgReadReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImGroupMsgReadReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImGroupMsgReadReq::IsInitialized() const {
  return true;
}

void XmsgImGroupMsgReadReq::Swap(XmsgImGroupMsgReadReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImGroupMsgReadReq::InternalSwap(XmsgImGroupMsgReadReq* other) {
  using std::swap;
  cgt_.Swap(&other->cgt_);
  swap(msgid_, other->msgid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImGroupMsgReadReq::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgImGroupMsgReadRsp_ExtEntry_DoNotUse::XmsgImGroupMsgReadRsp_ExtEntry_DoNotUse() {}
XmsgImGroupMsgReadRsp_ExtEntry_DoNotUse::XmsgImGroupMsgReadRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImGroupMsgReadRsp_ExtEntry_DoNotUse::MergeFrom(const XmsgImGroupMsgReadRsp_ExtEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImGroupMsgReadRsp_ExtEntry_DoNotUse::GetMetadata() const {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::file_level_metadata[22];
}
void XmsgImGroupMsgReadRsp_ExtEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImGroupMsgReadRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImGroupMsgReadRsp::kExtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImGroupMsgReadRsp::XmsgImGroupMsgReadRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImGroupMsgReadRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImGroupMsgReadRsp)
}
XmsgImGroupMsgReadRsp::XmsgImGroupMsgReadRsp(const XmsgImGroupMsgReadRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ext_.MergeFrom(from.ext_);
  // @@protoc_insertion_point(copy_constructor:XmsgImGroupMsgReadRsp)
}

void XmsgImGroupMsgReadRsp::SharedCtor() {
  _cached_size_ = 0;
}

XmsgImGroupMsgReadRsp::~XmsgImGroupMsgReadRsp() {
  // @@protoc_insertion_point(destructor:XmsgImGroupMsgReadRsp)
  SharedDtor();
}

void XmsgImGroupMsgReadRsp::SharedDtor() {
}

void XmsgImGroupMsgReadRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImGroupMsgReadRsp::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImGroupMsgReadRsp& XmsgImGroupMsgReadRsp::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImGroupMsgReadRsp();
  return *internal_default_instance();
}

XmsgImGroupMsgReadRsp* XmsgImGroupMsgReadRsp::New(::google::protobuf::Arena* arena) const {
  XmsgImGroupMsgReadRsp* n = new XmsgImGroupMsgReadRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImGroupMsgReadRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImGroupMsgReadRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ext_.Clear();
  _internal_metadata_.Clear();
}

bool XmsgImGroupMsgReadRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImGroupMsgReadRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, string> ext = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          XmsgImGroupMsgReadRsp_ExtEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImGroupMsgReadRsp_ExtEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&ext_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupMsgReadRsp.ExtEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupMsgReadRsp.ExtEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImGroupMsgReadRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImGroupMsgReadRsp)
  return false;
#undef DO_
}

void XmsgImGroupMsgReadRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImGroupMsgReadRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ext = 1;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupMsgReadRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupMsgReadRsp.ExtEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImGroupMsgReadRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImGroupMsgReadRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImGroupMsgReadRsp)
}

::google::protobuf::uint8* XmsgImGroupMsgReadRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImGroupMsgReadRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ext = 1;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupMsgReadRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupMsgReadRsp.ExtEntry.value");
      }
    };

    if (deterministic &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImGroupMsgReadRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImGroupMsgReadRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImGroupMsgReadRsp)
  return target;
}

size_t XmsgImGroupMsgReadRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImGroupMsgReadRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> ext = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ext_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImGroupMsgReadRsp_ExtEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->ext().begin();
        it != this->ext().end(); ++it) {
      entry.reset(ext_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImGroupMsgReadRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImGroupMsgReadRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImGroupMsgReadRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImGroupMsgReadRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImGroupMsgReadRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImGroupMsgReadRsp)
    MergeFrom(*source);
  }
}

void XmsgImGroupMsgReadRsp::MergeFrom(const XmsgImGroupMsgReadRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImGroupMsgReadRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ext_.MergeFrom(from.ext_);
}

void XmsgImGroupMsgReadRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImGroupMsgReadRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImGroupMsgReadRsp::CopyFrom(const XmsgImGroupMsgReadRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImGroupMsgReadRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImGroupMsgReadRsp::IsInitialized() const {
  return true;
}

void XmsgImGroupMsgReadRsp::Swap(XmsgImGroupMsgReadRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImGroupMsgReadRsp::InternalSwap(XmsgImGroupMsgReadRsp* other) {
  using std::swap;
  ext_.Swap(&other->ext_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImGroupMsgReadRsp::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImGroupMsgReadNotice::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImGroupMsgReadNotice::kCgtFieldNumber;
const int XmsgImGroupMsgReadNotice::kMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImGroupMsgReadNotice::XmsgImGroupMsgReadNotice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImGroupMsgReadNotice();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImGroupMsgReadNotice)
}
XmsgImGroupMsgReadNotice::XmsgImGroupMsgReadNotice(const XmsgImGroupMsgReadNotice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cgt().size() > 0) {
    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  msgid_ = from.msgid_;
  // @@protoc_insertion_point(copy_constructor:XmsgImGroupMsgReadNotice)
}

void XmsgImGroupMsgReadNotice::SharedCtor() {
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgid_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

XmsgImGroupMsgReadNotice::~XmsgImGroupMsgReadNotice() {
  // @@protoc_insertion_point(destructor:XmsgImGroupMsgReadNotice)
  SharedDtor();
}

void XmsgImGroupMsgReadNotice::SharedDtor() {
  cgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgImGroupMsgReadNotice::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImGroupMsgReadNotice::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImGroupMsgReadNotice& XmsgImGroupMsgReadNotice::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImGroupMsgReadNotice();
  return *internal_default_instance();
}

XmsgImGroupMsgReadNotice* XmsgImGroupMsgReadNotice::New(::google::protobuf::Arena* arena) const {
  XmsgImGroupMsgReadNotice* n = new XmsgImGroupMsgReadNotice;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImGroupMsgReadNotice::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImGroupMsgReadNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool XmsgImGroupMsgReadNotice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImGroupMsgReadNotice)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cgt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cgt().data(), static_cast<int>(this->cgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupMsgReadNotice.cgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 msgId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImGroupMsgReadNotice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImGroupMsgReadNotice)
  return false;
#undef DO_
}

void XmsgImGroupMsgReadNotice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImGroupMsgReadNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupMsgReadNotice.cgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cgt(), output);
  }

  // uint64 msgId = 2;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->msgid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImGroupMsgReadNotice)
}

::google::protobuf::uint8* XmsgImGroupMsgReadNotice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImGroupMsgReadNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupMsgReadNotice.cgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cgt(), target);
  }

  // uint64 msgId = 2;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->msgid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImGroupMsgReadNotice)
  return target;
}

size_t XmsgImGroupMsgReadNotice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImGroupMsgReadNotice)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string cgt = 1;
  if (this->cgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cgt());
  }

  // uint64 msgId = 2;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msgid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImGroupMsgReadNotice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImGroupMsgReadNotice)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImGroupMsgReadNotice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImGroupMsgReadNotice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImGroupMsgReadNotice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImGroupMsgReadNotice)
    MergeFrom(*source);
  }
}

void XmsgImGroupMsgReadNotice::MergeFrom(const XmsgImGroupMsgReadNotice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImGroupMsgReadNotice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cgt().size() > 0) {

    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
}

void XmsgImGroupMsgReadNotice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImGroupMsgReadNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImGroupMsgReadNotice::CopyFrom(const XmsgImGroupMsgReadNotice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImGroupMsgReadNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImGroupMsgReadNotice::IsInitialized() const {
  return true;
}

void XmsgImGroupMsgReadNotice::Swap(XmsgImGroupMsgReadNotice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImGroupMsgReadNotice::InternalSwap(XmsgImGroupMsgReadNotice* other) {
  using std::swap;
  cgt_.Swap(&other->cgt_);
  swap(msgid_, other->msgid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImGroupMsgReadNotice::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

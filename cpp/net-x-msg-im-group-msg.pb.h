// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net-x-msg-im-group-msg.proto

#ifndef PROTOBUF_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto__INCLUDED
#define PROTOBUF_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[25];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsXmsgImGroupSendMsgReq_ExtEntry_DoNotUseImpl();
void InitDefaultsXmsgImGroupSendMsgReq_ExtEntry_DoNotUse();
void InitDefaultsXmsgImGroupSendMsgReqImpl();
void InitDefaultsXmsgImGroupSendMsgReq();
void InitDefaultsXmsgImGroupSendMsgRsp_ExtEntry_DoNotUseImpl();
void InitDefaultsXmsgImGroupSendMsgRsp_ExtEntry_DoNotUse();
void InitDefaultsXmsgImGroupSendMsgRspImpl();
void InitDefaultsXmsgImGroupSendMsgRsp();
void InitDefaultsXmsgImMsgImpl();
void InitDefaultsXmsgImMsg();
void InitDefaultsXmsgImMsgTextImpl();
void InitDefaultsXmsgImMsgText();
void InitDefaultsXmsgImMsgHtmlImpl();
void InitDefaultsXmsgImMsgHtml();
void InitDefaultsXmsgImMsgImageImpl();
void InitDefaultsXmsgImMsgImage();
void InitDefaultsXmsgImMsgVoiceImpl();
void InitDefaultsXmsgImMsgVoice();
void InitDefaultsXmsgImMsgVideoImpl();
void InitDefaultsXmsgImMsgVideo();
void InitDefaultsXmsgImMsgFileImpl();
void InitDefaultsXmsgImMsgFile();
void InitDefaultsXmsgImMsgAtImpl();
void InitDefaultsXmsgImMsgAt();
void InitDefaultsXmsgImGroupMsgNotice_ExtEntry_DoNotUseImpl();
void InitDefaultsXmsgImGroupMsgNotice_ExtEntry_DoNotUse();
void InitDefaultsXmsgImGroupMsgNoticeImpl();
void InitDefaultsXmsgImGroupMsgNotice();
void InitDefaultsXmsgImGroupMsgSyncReqImpl();
void InitDefaultsXmsgImGroupMsgSyncReq();
void InitDefaultsXmsgImGroupMsgSyncRspImpl();
void InitDefaultsXmsgImGroupMsgSyncRsp();
void InitDefaultsXmsgImGroupMsgHistoryImpl();
void InitDefaultsXmsgImGroupMsgHistory();
void InitDefaultsXmsgImGroupMsgQueryReqImpl();
void InitDefaultsXmsgImGroupMsgQueryReq();
void InitDefaultsXmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItemImpl();
void InitDefaultsXmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem();
void InitDefaultsXmsgImGroupMsgQueryRspImpl();
void InitDefaultsXmsgImGroupMsgQueryRsp();
void InitDefaultsXmsgImGroupMsgReadReqImpl();
void InitDefaultsXmsgImGroupMsgReadReq();
void InitDefaultsXmsgImGroupMsgReadRsp_ExtEntry_DoNotUseImpl();
void InitDefaultsXmsgImGroupMsgReadRsp_ExtEntry_DoNotUse();
void InitDefaultsXmsgImGroupMsgReadRspImpl();
void InitDefaultsXmsgImGroupMsgReadRsp();
void InitDefaultsXmsgImGroupMsgReadNoticeImpl();
void InitDefaultsXmsgImGroupMsgReadNotice();
inline void InitDefaults() {
  InitDefaultsXmsgImGroupSendMsgReq_ExtEntry_DoNotUse();
  InitDefaultsXmsgImGroupSendMsgReq();
  InitDefaultsXmsgImGroupSendMsgRsp_ExtEntry_DoNotUse();
  InitDefaultsXmsgImGroupSendMsgRsp();
  InitDefaultsXmsgImMsg();
  InitDefaultsXmsgImMsgText();
  InitDefaultsXmsgImMsgHtml();
  InitDefaultsXmsgImMsgImage();
  InitDefaultsXmsgImMsgVoice();
  InitDefaultsXmsgImMsgVideo();
  InitDefaultsXmsgImMsgFile();
  InitDefaultsXmsgImMsgAt();
  InitDefaultsXmsgImGroupMsgNotice_ExtEntry_DoNotUse();
  InitDefaultsXmsgImGroupMsgNotice();
  InitDefaultsXmsgImGroupMsgSyncReq();
  InitDefaultsXmsgImGroupMsgSyncRsp();
  InitDefaultsXmsgImGroupMsgHistory();
  InitDefaultsXmsgImGroupMsgQueryReq();
  InitDefaultsXmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem();
  InitDefaultsXmsgImGroupMsgQueryRsp();
  InitDefaultsXmsgImGroupMsgReadReq();
  InitDefaultsXmsgImGroupMsgReadRsp_ExtEntry_DoNotUse();
  InitDefaultsXmsgImGroupMsgReadRsp();
  InitDefaultsXmsgImGroupMsgReadNotice();
}
}  // namespace protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto
class XmsgImGroupMsgHistory;
class XmsgImGroupMsgHistoryDefaultTypeInternal;
extern XmsgImGroupMsgHistoryDefaultTypeInternal _XmsgImGroupMsgHistory_default_instance_;
class XmsgImGroupMsgNotice;
class XmsgImGroupMsgNoticeDefaultTypeInternal;
extern XmsgImGroupMsgNoticeDefaultTypeInternal _XmsgImGroupMsgNotice_default_instance_;
class XmsgImGroupMsgNotice_ExtEntry_DoNotUse;
class XmsgImGroupMsgNotice_ExtEntry_DoNotUseDefaultTypeInternal;
extern XmsgImGroupMsgNotice_ExtEntry_DoNotUseDefaultTypeInternal _XmsgImGroupMsgNotice_ExtEntry_DoNotUse_default_instance_;
class XmsgImGroupMsgQueryReq;
class XmsgImGroupMsgQueryReqDefaultTypeInternal;
extern XmsgImGroupMsgQueryReqDefaultTypeInternal _XmsgImGroupMsgQueryReq_default_instance_;
class XmsgImGroupMsgQueryRsp;
class XmsgImGroupMsgQueryRspDefaultTypeInternal;
extern XmsgImGroupMsgQueryRspDefaultTypeInternal _XmsgImGroupMsgQueryRsp_default_instance_;
class XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem;
class XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItemDefaultTypeInternal;
extern XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItemDefaultTypeInternal _XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem_default_instance_;
class XmsgImGroupMsgReadNotice;
class XmsgImGroupMsgReadNoticeDefaultTypeInternal;
extern XmsgImGroupMsgReadNoticeDefaultTypeInternal _XmsgImGroupMsgReadNotice_default_instance_;
class XmsgImGroupMsgReadReq;
class XmsgImGroupMsgReadReqDefaultTypeInternal;
extern XmsgImGroupMsgReadReqDefaultTypeInternal _XmsgImGroupMsgReadReq_default_instance_;
class XmsgImGroupMsgReadRsp;
class XmsgImGroupMsgReadRspDefaultTypeInternal;
extern XmsgImGroupMsgReadRspDefaultTypeInternal _XmsgImGroupMsgReadRsp_default_instance_;
class XmsgImGroupMsgReadRsp_ExtEntry_DoNotUse;
class XmsgImGroupMsgReadRsp_ExtEntry_DoNotUseDefaultTypeInternal;
extern XmsgImGroupMsgReadRsp_ExtEntry_DoNotUseDefaultTypeInternal _XmsgImGroupMsgReadRsp_ExtEntry_DoNotUse_default_instance_;
class XmsgImGroupMsgSyncReq;
class XmsgImGroupMsgSyncReqDefaultTypeInternal;
extern XmsgImGroupMsgSyncReqDefaultTypeInternal _XmsgImGroupMsgSyncReq_default_instance_;
class XmsgImGroupMsgSyncRsp;
class XmsgImGroupMsgSyncRspDefaultTypeInternal;
extern XmsgImGroupMsgSyncRspDefaultTypeInternal _XmsgImGroupMsgSyncRsp_default_instance_;
class XmsgImGroupSendMsgReq;
class XmsgImGroupSendMsgReqDefaultTypeInternal;
extern XmsgImGroupSendMsgReqDefaultTypeInternal _XmsgImGroupSendMsgReq_default_instance_;
class XmsgImGroupSendMsgReq_ExtEntry_DoNotUse;
class XmsgImGroupSendMsgReq_ExtEntry_DoNotUseDefaultTypeInternal;
extern XmsgImGroupSendMsgReq_ExtEntry_DoNotUseDefaultTypeInternal _XmsgImGroupSendMsgReq_ExtEntry_DoNotUse_default_instance_;
class XmsgImGroupSendMsgRsp;
class XmsgImGroupSendMsgRspDefaultTypeInternal;
extern XmsgImGroupSendMsgRspDefaultTypeInternal _XmsgImGroupSendMsgRsp_default_instance_;
class XmsgImGroupSendMsgRsp_ExtEntry_DoNotUse;
class XmsgImGroupSendMsgRsp_ExtEntry_DoNotUseDefaultTypeInternal;
extern XmsgImGroupSendMsgRsp_ExtEntry_DoNotUseDefaultTypeInternal _XmsgImGroupSendMsgRsp_ExtEntry_DoNotUse_default_instance_;
class XmsgImMsg;
class XmsgImMsgDefaultTypeInternal;
extern XmsgImMsgDefaultTypeInternal _XmsgImMsg_default_instance_;
class XmsgImMsgAt;
class XmsgImMsgAtDefaultTypeInternal;
extern XmsgImMsgAtDefaultTypeInternal _XmsgImMsgAt_default_instance_;
class XmsgImMsgFile;
class XmsgImMsgFileDefaultTypeInternal;
extern XmsgImMsgFileDefaultTypeInternal _XmsgImMsgFile_default_instance_;
class XmsgImMsgHtml;
class XmsgImMsgHtmlDefaultTypeInternal;
extern XmsgImMsgHtmlDefaultTypeInternal _XmsgImMsgHtml_default_instance_;
class XmsgImMsgImage;
class XmsgImMsgImageDefaultTypeInternal;
extern XmsgImMsgImageDefaultTypeInternal _XmsgImMsgImage_default_instance_;
class XmsgImMsgMerge;
class XmsgImMsgMergeDefaultTypeInternal;
extern XmsgImMsgMergeDefaultTypeInternal _XmsgImMsgMerge_default_instance_;
class XmsgImMsgText;
class XmsgImMsgTextDefaultTypeInternal;
extern XmsgImMsgTextDefaultTypeInternal _XmsgImMsgText_default_instance_;
class XmsgImMsgVideo;
class XmsgImMsgVideoDefaultTypeInternal;
extern XmsgImMsgVideoDefaultTypeInternal _XmsgImMsgVideo_default_instance_;
class XmsgImMsgVoice;
class XmsgImMsgVoiceDefaultTypeInternal;
extern XmsgImMsgVoiceDefaultTypeInternal _XmsgImMsgVoice_default_instance_;

// ===================================================================

class XmsgImGroupSendMsgReq_ExtEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgImGroupSendMsgReq_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgImGroupSendMsgReq_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgImGroupSendMsgReq_ExtEntry_DoNotUse();
  XmsgImGroupSendMsgReq_ExtEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgImGroupSendMsgReq_ExtEntry_DoNotUse& other);
  static const XmsgImGroupSendMsgReq_ExtEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgImGroupSendMsgReq_ExtEntry_DoNotUse*>(&_XmsgImGroupSendMsgReq_ExtEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgImGroupSendMsgReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImGroupSendMsgReq) */ {
 public:
  XmsgImGroupSendMsgReq();
  virtual ~XmsgImGroupSendMsgReq();

  XmsgImGroupSendMsgReq(const XmsgImGroupSendMsgReq& from);

  inline XmsgImGroupSendMsgReq& operator=(const XmsgImGroupSendMsgReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImGroupSendMsgReq(XmsgImGroupSendMsgReq&& from) noexcept
    : XmsgImGroupSendMsgReq() {
    *this = ::std::move(from);
  }

  inline XmsgImGroupSendMsgReq& operator=(XmsgImGroupSendMsgReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImGroupSendMsgReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImGroupSendMsgReq* internal_default_instance() {
    return reinterpret_cast<const XmsgImGroupSendMsgReq*>(
               &_XmsgImGroupSendMsgReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(XmsgImGroupSendMsgReq* other);
  friend void swap(XmsgImGroupSendMsgReq& a, XmsgImGroupSendMsgReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImGroupSendMsgReq* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImGroupSendMsgReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImGroupSendMsgReq& from);
  void MergeFrom(const XmsgImGroupSendMsgReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImGroupSendMsgReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> ext = 4;
  int ext_size() const;
  void clear_ext();
  static const int kExtFieldNumber = 4;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      ext() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_ext();

  // string cgt = 1;
  void clear_cgt();
  static const int kCgtFieldNumber = 1;
  const ::std::string& cgt() const;
  void set_cgt(const ::std::string& value);
  #if LANG_CXX11
  void set_cgt(::std::string&& value);
  #endif
  void set_cgt(const char* value);
  void set_cgt(const char* value, size_t size);
  ::std::string* mutable_cgt();
  ::std::string* release_cgt();
  void set_allocated_cgt(::std::string* cgt);

  // .XmsgImMsg msg = 3;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 3;
  const ::XmsgImMsg& msg() const;
  ::XmsgImMsg* release_msg();
  ::XmsgImMsg* mutable_msg();
  void set_allocated_msg(::XmsgImMsg* msg);

  // uint64 localMsgId = 2;
  void clear_localmsgid();
  static const int kLocalMsgIdFieldNumber = 2;
  ::google::protobuf::uint64 localmsgid() const;
  void set_localmsgid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:XmsgImGroupSendMsgReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgImGroupSendMsgReq_ExtEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > ext_;
  ::google::protobuf::internal::ArenaStringPtr cgt_;
  ::XmsgImMsg* msg_;
  ::google::protobuf::uint64 localmsgid_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImGroupSendMsgReqImpl();
};
// -------------------------------------------------------------------

class XmsgImGroupSendMsgRsp_ExtEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgImGroupSendMsgRsp_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgImGroupSendMsgRsp_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgImGroupSendMsgRsp_ExtEntry_DoNotUse();
  XmsgImGroupSendMsgRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgImGroupSendMsgRsp_ExtEntry_DoNotUse& other);
  static const XmsgImGroupSendMsgRsp_ExtEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgImGroupSendMsgRsp_ExtEntry_DoNotUse*>(&_XmsgImGroupSendMsgRsp_ExtEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgImGroupSendMsgRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImGroupSendMsgRsp) */ {
 public:
  XmsgImGroupSendMsgRsp();
  virtual ~XmsgImGroupSendMsgRsp();

  XmsgImGroupSendMsgRsp(const XmsgImGroupSendMsgRsp& from);

  inline XmsgImGroupSendMsgRsp& operator=(const XmsgImGroupSendMsgRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImGroupSendMsgRsp(XmsgImGroupSendMsgRsp&& from) noexcept
    : XmsgImGroupSendMsgRsp() {
    *this = ::std::move(from);
  }

  inline XmsgImGroupSendMsgRsp& operator=(XmsgImGroupSendMsgRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImGroupSendMsgRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImGroupSendMsgRsp* internal_default_instance() {
    return reinterpret_cast<const XmsgImGroupSendMsgRsp*>(
               &_XmsgImGroupSendMsgRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(XmsgImGroupSendMsgRsp* other);
  friend void swap(XmsgImGroupSendMsgRsp& a, XmsgImGroupSendMsgRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImGroupSendMsgRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImGroupSendMsgRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImGroupSendMsgRsp& from);
  void MergeFrom(const XmsgImGroupSendMsgRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImGroupSendMsgRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> ext = 4;
  int ext_size() const;
  void clear_ext();
  static const int kExtFieldNumber = 4;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      ext() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_ext();

  // string gcgt = 2;
  void clear_gcgt();
  static const int kGcgtFieldNumber = 2;
  const ::std::string& gcgt() const;
  void set_gcgt(const ::std::string& value);
  #if LANG_CXX11
  void set_gcgt(::std::string&& value);
  #endif
  void set_gcgt(const char* value);
  void set_gcgt(const char* value, size_t size);
  ::std::string* mutable_gcgt();
  ::std::string* release_gcgt();
  void set_allocated_gcgt(::std::string* gcgt);

  // uint64 msgId = 1;
  void clear_msgid();
  static const int kMsgIdFieldNumber = 1;
  ::google::protobuf::uint64 msgid() const;
  void set_msgid(::google::protobuf::uint64 value);

  // uint64 gts = 3;
  void clear_gts();
  static const int kGtsFieldNumber = 3;
  ::google::protobuf::uint64 gts() const;
  void set_gts(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:XmsgImGroupSendMsgRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgImGroupSendMsgRsp_ExtEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > ext_;
  ::google::protobuf::internal::ArenaStringPtr gcgt_;
  ::google::protobuf::uint64 msgid_;
  ::google::protobuf::uint64 gts_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImGroupSendMsgRspImpl();
};
// -------------------------------------------------------------------

class XmsgImMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImMsg) */ {
 public:
  XmsgImMsg();
  virtual ~XmsgImMsg();

  XmsgImMsg(const XmsgImMsg& from);

  inline XmsgImMsg& operator=(const XmsgImMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImMsg(XmsgImMsg&& from) noexcept
    : XmsgImMsg() {
    *this = ::std::move(from);
  }

  inline XmsgImMsg& operator=(XmsgImMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImMsg* internal_default_instance() {
    return reinterpret_cast<const XmsgImMsg*>(
               &_XmsgImMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(XmsgImMsg* other);
  friend void swap(XmsgImMsg& a, XmsgImMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImMsg& from);
  void MergeFrom(const XmsgImMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // .XmsgImMsgText text = 2;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 2;
  const ::XmsgImMsgText& text() const;
  ::XmsgImMsgText* release_text();
  ::XmsgImMsgText* mutable_text();
  void set_allocated_text(::XmsgImMsgText* text);

  // .XmsgImMsgHtml html = 3;
  bool has_html() const;
  void clear_html();
  static const int kHtmlFieldNumber = 3;
  const ::XmsgImMsgHtml& html() const;
  ::XmsgImMsgHtml* release_html();
  ::XmsgImMsgHtml* mutable_html();
  void set_allocated_html(::XmsgImMsgHtml* html);

  // .XmsgImMsgImage image = 4;
  bool has_image() const;
  void clear_image();
  static const int kImageFieldNumber = 4;
  const ::XmsgImMsgImage& image() const;
  ::XmsgImMsgImage* release_image();
  ::XmsgImMsgImage* mutable_image();
  void set_allocated_image(::XmsgImMsgImage* image);

  // .XmsgImMsgVoice voice = 5;
  bool has_voice() const;
  void clear_voice();
  static const int kVoiceFieldNumber = 5;
  const ::XmsgImMsgVoice& voice() const;
  ::XmsgImMsgVoice* release_voice();
  ::XmsgImMsgVoice* mutable_voice();
  void set_allocated_voice(::XmsgImMsgVoice* voice);

  // .XmsgImMsgVideo video = 6;
  bool has_video() const;
  void clear_video();
  static const int kVideoFieldNumber = 6;
  const ::XmsgImMsgVideo& video() const;
  ::XmsgImMsgVideo* release_video();
  ::XmsgImMsgVideo* mutable_video();
  void set_allocated_video(::XmsgImMsgVideo* video);

  // .XmsgImMsgFile file = 7;
  bool has_file() const;
  void clear_file();
  static const int kFileFieldNumber = 7;
  const ::XmsgImMsgFile& file() const;
  ::XmsgImMsgFile* release_file();
  ::XmsgImMsgFile* mutable_file();
  void set_allocated_file(::XmsgImMsgFile* file);

  // .XmsgImMsgMerge merge = 8;
  bool has_merge() const;
  void clear_merge();
  static const int kMergeFieldNumber = 8;
  const ::XmsgImMsgMerge& merge() const;
  ::XmsgImMsgMerge* release_merge();
  ::XmsgImMsgMerge* mutable_merge();
  void set_allocated_merge(::XmsgImMsgMerge* merge);

  // .XmsgImMsgAt atx = 9;
  bool has_atx() const;
  void clear_atx();
  static const int kAtxFieldNumber = 9;
  const ::XmsgImMsgAt& atx() const;
  ::XmsgImMsgAt* release_atx();
  ::XmsgImMsgAt* mutable_atx();
  void set_allocated_atx(::XmsgImMsgAt* atx);

  // @@protoc_insertion_point(class_scope:XmsgImMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::XmsgImMsgText* text_;
  ::XmsgImMsgHtml* html_;
  ::XmsgImMsgImage* image_;
  ::XmsgImMsgVoice* voice_;
  ::XmsgImMsgVideo* video_;
  ::XmsgImMsgFile* file_;
  ::XmsgImMsgMerge* merge_;
  ::XmsgImMsgAt* atx_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImMsgImpl();
};
// -------------------------------------------------------------------

class XmsgImMsgText : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImMsgText) */ {
 public:
  XmsgImMsgText();
  virtual ~XmsgImMsgText();

  XmsgImMsgText(const XmsgImMsgText& from);

  inline XmsgImMsgText& operator=(const XmsgImMsgText& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImMsgText(XmsgImMsgText&& from) noexcept
    : XmsgImMsgText() {
    *this = ::std::move(from);
  }

  inline XmsgImMsgText& operator=(XmsgImMsgText&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImMsgText& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImMsgText* internal_default_instance() {
    return reinterpret_cast<const XmsgImMsgText*>(
               &_XmsgImMsgText_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(XmsgImMsgText* other);
  friend void swap(XmsgImMsgText& a, XmsgImMsgText& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImMsgText* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImMsgText* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImMsgText& from);
  void MergeFrom(const XmsgImMsgText& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImMsgText* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string text = 1;
  void clear_text();
  static const int kTextFieldNumber = 1;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // @@protoc_insertion_point(class_scope:XmsgImMsgText)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImMsgTextImpl();
};
// -------------------------------------------------------------------

class XmsgImMsgHtml : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImMsgHtml) */ {
 public:
  XmsgImMsgHtml();
  virtual ~XmsgImMsgHtml();

  XmsgImMsgHtml(const XmsgImMsgHtml& from);

  inline XmsgImMsgHtml& operator=(const XmsgImMsgHtml& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImMsgHtml(XmsgImMsgHtml&& from) noexcept
    : XmsgImMsgHtml() {
    *this = ::std::move(from);
  }

  inline XmsgImMsgHtml& operator=(XmsgImMsgHtml&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImMsgHtml& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImMsgHtml* internal_default_instance() {
    return reinterpret_cast<const XmsgImMsgHtml*>(
               &_XmsgImMsgHtml_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(XmsgImMsgHtml* other);
  friend void swap(XmsgImMsgHtml& a, XmsgImMsgHtml& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImMsgHtml* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImMsgHtml* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImMsgHtml& from);
  void MergeFrom(const XmsgImMsgHtml& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImMsgHtml* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string html = 1;
  void clear_html();
  static const int kHtmlFieldNumber = 1;
  const ::std::string& html() const;
  void set_html(const ::std::string& value);
  #if LANG_CXX11
  void set_html(::std::string&& value);
  #endif
  void set_html(const char* value);
  void set_html(const char* value, size_t size);
  ::std::string* mutable_html();
  ::std::string* release_html();
  void set_allocated_html(::std::string* html);

  // @@protoc_insertion_point(class_scope:XmsgImMsgHtml)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr html_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImMsgHtmlImpl();
};
// -------------------------------------------------------------------

class XmsgImMsgImage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImMsgImage) */ {
 public:
  XmsgImMsgImage();
  virtual ~XmsgImMsgImage();

  XmsgImMsgImage(const XmsgImMsgImage& from);

  inline XmsgImMsgImage& operator=(const XmsgImMsgImage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImMsgImage(XmsgImMsgImage&& from) noexcept
    : XmsgImMsgImage() {
    *this = ::std::move(from);
  }

  inline XmsgImMsgImage& operator=(XmsgImMsgImage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImMsgImage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImMsgImage* internal_default_instance() {
    return reinterpret_cast<const XmsgImMsgImage*>(
               &_XmsgImMsgImage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(XmsgImMsgImage* other);
  friend void swap(XmsgImMsgImage& a, XmsgImMsgImage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImMsgImage* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImMsgImage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImMsgImage& from);
  void MergeFrom(const XmsgImMsgImage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImMsgImage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uri = 1;
  void clear_uri();
  static const int kUriFieldNumber = 1;
  const ::std::string& uri() const;
  void set_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_uri(::std::string&& value);
  #endif
  void set_uri(const char* value);
  void set_uri(const char* value, size_t size);
  ::std::string* mutable_uri();
  ::std::string* release_uri();
  void set_allocated_uri(::std::string* uri);

  // @@protoc_insertion_point(class_scope:XmsgImMsgImage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uri_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImMsgImageImpl();
};
// -------------------------------------------------------------------

class XmsgImMsgVoice : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImMsgVoice) */ {
 public:
  XmsgImMsgVoice();
  virtual ~XmsgImMsgVoice();

  XmsgImMsgVoice(const XmsgImMsgVoice& from);

  inline XmsgImMsgVoice& operator=(const XmsgImMsgVoice& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImMsgVoice(XmsgImMsgVoice&& from) noexcept
    : XmsgImMsgVoice() {
    *this = ::std::move(from);
  }

  inline XmsgImMsgVoice& operator=(XmsgImMsgVoice&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImMsgVoice& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImMsgVoice* internal_default_instance() {
    return reinterpret_cast<const XmsgImMsgVoice*>(
               &_XmsgImMsgVoice_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(XmsgImMsgVoice* other);
  friend void swap(XmsgImMsgVoice& a, XmsgImMsgVoice& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImMsgVoice* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImMsgVoice* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImMsgVoice& from);
  void MergeFrom(const XmsgImMsgVoice& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImMsgVoice* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uri = 1;
  void clear_uri();
  static const int kUriFieldNumber = 1;
  const ::std::string& uri() const;
  void set_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_uri(::std::string&& value);
  #endif
  void set_uri(const char* value);
  void set_uri(const char* value, size_t size);
  ::std::string* mutable_uri();
  ::std::string* release_uri();
  void set_allocated_uri(::std::string* uri);

  // @@protoc_insertion_point(class_scope:XmsgImMsgVoice)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uri_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImMsgVoiceImpl();
};
// -------------------------------------------------------------------

class XmsgImMsgVideo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImMsgVideo) */ {
 public:
  XmsgImMsgVideo();
  virtual ~XmsgImMsgVideo();

  XmsgImMsgVideo(const XmsgImMsgVideo& from);

  inline XmsgImMsgVideo& operator=(const XmsgImMsgVideo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImMsgVideo(XmsgImMsgVideo&& from) noexcept
    : XmsgImMsgVideo() {
    *this = ::std::move(from);
  }

  inline XmsgImMsgVideo& operator=(XmsgImMsgVideo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImMsgVideo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImMsgVideo* internal_default_instance() {
    return reinterpret_cast<const XmsgImMsgVideo*>(
               &_XmsgImMsgVideo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(XmsgImMsgVideo* other);
  friend void swap(XmsgImMsgVideo& a, XmsgImMsgVideo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImMsgVideo* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImMsgVideo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImMsgVideo& from);
  void MergeFrom(const XmsgImMsgVideo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImMsgVideo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uri = 1;
  void clear_uri();
  static const int kUriFieldNumber = 1;
  const ::std::string& uri() const;
  void set_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_uri(::std::string&& value);
  #endif
  void set_uri(const char* value);
  void set_uri(const char* value, size_t size);
  ::std::string* mutable_uri();
  ::std::string* release_uri();
  void set_allocated_uri(::std::string* uri);

  // @@protoc_insertion_point(class_scope:XmsgImMsgVideo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uri_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImMsgVideoImpl();
};
// -------------------------------------------------------------------

class XmsgImMsgFile : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImMsgFile) */ {
 public:
  XmsgImMsgFile();
  virtual ~XmsgImMsgFile();

  XmsgImMsgFile(const XmsgImMsgFile& from);

  inline XmsgImMsgFile& operator=(const XmsgImMsgFile& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImMsgFile(XmsgImMsgFile&& from) noexcept
    : XmsgImMsgFile() {
    *this = ::std::move(from);
  }

  inline XmsgImMsgFile& operator=(XmsgImMsgFile&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImMsgFile& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImMsgFile* internal_default_instance() {
    return reinterpret_cast<const XmsgImMsgFile*>(
               &_XmsgImMsgFile_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(XmsgImMsgFile* other);
  friend void swap(XmsgImMsgFile& a, XmsgImMsgFile& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImMsgFile* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImMsgFile* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImMsgFile& from);
  void MergeFrom(const XmsgImMsgFile& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImMsgFile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string from = 1;
  void clear_from();
  static const int kFromFieldNumber = 1;
  const ::std::string& from() const;
  void set_from(const ::std::string& value);
  #if LANG_CXX11
  void set_from(::std::string&& value);
  #endif
  void set_from(const char* value);
  void set_from(const char* value, size_t size);
  ::std::string* mutable_from();
  ::std::string* release_from();
  void set_allocated_from(::std::string* from);

  // string fid = 2;
  void clear_fid();
  static const int kFidFieldNumber = 2;
  const ::std::string& fid() const;
  void set_fid(const ::std::string& value);
  #if LANG_CXX11
  void set_fid(::std::string&& value);
  #endif
  void set_fid(const char* value);
  void set_fid(const char* value, size_t size);
  ::std::string* mutable_fid();
  ::std::string* release_fid();
  void set_allocated_fid(::std::string* fid);

  // @@protoc_insertion_point(class_scope:XmsgImMsgFile)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr from_;
  ::google::protobuf::internal::ArenaStringPtr fid_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImMsgFileImpl();
};
// -------------------------------------------------------------------

class XmsgImMsgMerge : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImMsgMerge) */ {
 public:
  XmsgImMsgMerge();
  virtual ~XmsgImMsgMerge();

  XmsgImMsgMerge(const XmsgImMsgMerge& from);

  inline XmsgImMsgMerge& operator=(const XmsgImMsgMerge& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImMsgMerge(XmsgImMsgMerge&& from) noexcept
    : XmsgImMsgMerge() {
    *this = ::std::move(from);
  }

  inline XmsgImMsgMerge& operator=(XmsgImMsgMerge&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImMsgMerge& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImMsgMerge* internal_default_instance() {
    return reinterpret_cast<const XmsgImMsgMerge*>(
               &_XmsgImMsgMerge_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(XmsgImMsgMerge* other);
  friend void swap(XmsgImMsgMerge& a, XmsgImMsgMerge& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImMsgMerge* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImMsgMerge* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImMsgMerge& from);
  void MergeFrom(const XmsgImMsgMerge& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImMsgMerge* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .XmsgImMsg msg = 1;
  int msg_size() const;
  void clear_msg();
  static const int kMsgFieldNumber = 1;
  const ::XmsgImMsg& msg(int index) const;
  ::XmsgImMsg* mutable_msg(int index);
  ::XmsgImMsg* add_msg();
  ::google::protobuf::RepeatedPtrField< ::XmsgImMsg >*
      mutable_msg();
  const ::google::protobuf::RepeatedPtrField< ::XmsgImMsg >&
      msg() const;

  // @@protoc_insertion_point(class_scope:XmsgImMsgMerge)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::XmsgImMsg > msg_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImMsgImpl();
};
// -------------------------------------------------------------------

class XmsgImMsgAt : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImMsgAt) */ {
 public:
  XmsgImMsgAt();
  virtual ~XmsgImMsgAt();

  XmsgImMsgAt(const XmsgImMsgAt& from);

  inline XmsgImMsgAt& operator=(const XmsgImMsgAt& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImMsgAt(XmsgImMsgAt&& from) noexcept
    : XmsgImMsgAt() {
    *this = ::std::move(from);
  }

  inline XmsgImMsgAt& operator=(XmsgImMsgAt&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImMsgAt& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImMsgAt* internal_default_instance() {
    return reinterpret_cast<const XmsgImMsgAt*>(
               &_XmsgImMsgAt_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(XmsgImMsgAt* other);
  friend void swap(XmsgImMsgAt& a, XmsgImMsgAt& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImMsgAt* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImMsgAt* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImMsgAt& from);
  void MergeFrom(const XmsgImMsgAt& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImMsgAt* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string cgt = 2;
  int cgt_size() const;
  void clear_cgt();
  static const int kCgtFieldNumber = 2;
  const ::std::string& cgt(int index) const;
  ::std::string* mutable_cgt(int index);
  void set_cgt(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_cgt(int index, ::std::string&& value);
  #endif
  void set_cgt(int index, const char* value);
  void set_cgt(int index, const char* value, size_t size);
  ::std::string* add_cgt();
  void add_cgt(const ::std::string& value);
  #if LANG_CXX11
  void add_cgt(::std::string&& value);
  #endif
  void add_cgt(const char* value);
  void add_cgt(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& cgt() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_cgt();

  // @@protoc_insertion_point(class_scope:XmsgImMsgAt)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> cgt_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImMsgAtImpl();
};
// -------------------------------------------------------------------

class XmsgImGroupMsgNotice_ExtEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgImGroupMsgNotice_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgImGroupMsgNotice_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgImGroupMsgNotice_ExtEntry_DoNotUse();
  XmsgImGroupMsgNotice_ExtEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgImGroupMsgNotice_ExtEntry_DoNotUse& other);
  static const XmsgImGroupMsgNotice_ExtEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgImGroupMsgNotice_ExtEntry_DoNotUse*>(&_XmsgImGroupMsgNotice_ExtEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgImGroupMsgNotice : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImGroupMsgNotice) */ {
 public:
  XmsgImGroupMsgNotice();
  virtual ~XmsgImGroupMsgNotice();

  XmsgImGroupMsgNotice(const XmsgImGroupMsgNotice& from);

  inline XmsgImGroupMsgNotice& operator=(const XmsgImGroupMsgNotice& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImGroupMsgNotice(XmsgImGroupMsgNotice&& from) noexcept
    : XmsgImGroupMsgNotice() {
    *this = ::std::move(from);
  }

  inline XmsgImGroupMsgNotice& operator=(XmsgImGroupMsgNotice&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImGroupMsgNotice& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImGroupMsgNotice* internal_default_instance() {
    return reinterpret_cast<const XmsgImGroupMsgNotice*>(
               &_XmsgImGroupMsgNotice_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(XmsgImGroupMsgNotice* other);
  friend void swap(XmsgImGroupMsgNotice& a, XmsgImGroupMsgNotice& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImGroupMsgNotice* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImGroupMsgNotice* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImGroupMsgNotice& from);
  void MergeFrom(const XmsgImGroupMsgNotice& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImGroupMsgNotice* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> ext = 6;
  int ext_size() const;
  void clear_ext();
  static const int kExtFieldNumber = 6;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      ext() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_ext();

  // string gcgt = 1;
  void clear_gcgt();
  static const int kGcgtFieldNumber = 1;
  const ::std::string& gcgt() const;
  void set_gcgt(const ::std::string& value);
  #if LANG_CXX11
  void set_gcgt(::std::string&& value);
  #endif
  void set_gcgt(const char* value);
  void set_gcgt(const char* value, size_t size);
  ::std::string* mutable_gcgt();
  ::std::string* release_gcgt();
  void set_allocated_gcgt(::std::string* gcgt);

  // string scgt = 2;
  void clear_scgt();
  static const int kScgtFieldNumber = 2;
  const ::std::string& scgt() const;
  void set_scgt(const ::std::string& value);
  #if LANG_CXX11
  void set_scgt(::std::string&& value);
  #endif
  void set_scgt(const char* value);
  void set_scgt(const char* value, size_t size);
  ::std::string* mutable_scgt();
  ::std::string* release_scgt();
  void set_allocated_scgt(::std::string* scgt);

  // .XmsgImMsg msg = 4;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 4;
  const ::XmsgImMsg& msg() const;
  ::XmsgImMsg* release_msg();
  ::XmsgImMsg* mutable_msg();
  void set_allocated_msg(::XmsgImMsg* msg);

  // uint64 msgId = 3;
  void clear_msgid();
  static const int kMsgIdFieldNumber = 3;
  ::google::protobuf::uint64 msgid() const;
  void set_msgid(::google::protobuf::uint64 value);

  // uint64 gts = 5;
  void clear_gts();
  static const int kGtsFieldNumber = 5;
  ::google::protobuf::uint64 gts() const;
  void set_gts(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:XmsgImGroupMsgNotice)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgImGroupMsgNotice_ExtEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > ext_;
  ::google::protobuf::internal::ArenaStringPtr gcgt_;
  ::google::protobuf::internal::ArenaStringPtr scgt_;
  ::XmsgImMsg* msg_;
  ::google::protobuf::uint64 msgid_;
  ::google::protobuf::uint64 gts_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImGroupMsgNoticeImpl();
};
// -------------------------------------------------------------------

class XmsgImGroupMsgSyncReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImGroupMsgSyncReq) */ {
 public:
  XmsgImGroupMsgSyncReq();
  virtual ~XmsgImGroupMsgSyncReq();

  XmsgImGroupMsgSyncReq(const XmsgImGroupMsgSyncReq& from);

  inline XmsgImGroupMsgSyncReq& operator=(const XmsgImGroupMsgSyncReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImGroupMsgSyncReq(XmsgImGroupMsgSyncReq&& from) noexcept
    : XmsgImGroupMsgSyncReq() {
    *this = ::std::move(from);
  }

  inline XmsgImGroupMsgSyncReq& operator=(XmsgImGroupMsgSyncReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImGroupMsgSyncReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImGroupMsgSyncReq* internal_default_instance() {
    return reinterpret_cast<const XmsgImGroupMsgSyncReq*>(
               &_XmsgImGroupMsgSyncReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(XmsgImGroupMsgSyncReq* other);
  friend void swap(XmsgImGroupMsgSyncReq& a, XmsgImGroupMsgSyncReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImGroupMsgSyncReq* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImGroupMsgSyncReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImGroupMsgSyncReq& from);
  void MergeFrom(const XmsgImGroupMsgSyncReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImGroupMsgSyncReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cgt = 1;
  void clear_cgt();
  static const int kCgtFieldNumber = 1;
  const ::std::string& cgt() const;
  void set_cgt(const ::std::string& value);
  #if LANG_CXX11
  void set_cgt(::std::string&& value);
  #endif
  void set_cgt(const char* value);
  void set_cgt(const char* value, size_t size);
  ::std::string* mutable_cgt();
  ::std::string* release_cgt();
  void set_allocated_cgt(::std::string* cgt);

  // uint64 msgId = 2;
  void clear_msgid();
  static const int kMsgIdFieldNumber = 2;
  ::google::protobuf::uint64 msgid() const;
  void set_msgid(::google::protobuf::uint64 value);

  // uint32 latest = 3;
  void clear_latest();
  static const int kLatestFieldNumber = 3;
  ::google::protobuf::uint32 latest() const;
  void set_latest(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:XmsgImGroupMsgSyncReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cgt_;
  ::google::protobuf::uint64 msgid_;
  ::google::protobuf::uint32 latest_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImGroupMsgSyncReqImpl();
};
// -------------------------------------------------------------------

class XmsgImGroupMsgSyncRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImGroupMsgSyncRsp) */ {
 public:
  XmsgImGroupMsgSyncRsp();
  virtual ~XmsgImGroupMsgSyncRsp();

  XmsgImGroupMsgSyncRsp(const XmsgImGroupMsgSyncRsp& from);

  inline XmsgImGroupMsgSyncRsp& operator=(const XmsgImGroupMsgSyncRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImGroupMsgSyncRsp(XmsgImGroupMsgSyncRsp&& from) noexcept
    : XmsgImGroupMsgSyncRsp() {
    *this = ::std::move(from);
  }

  inline XmsgImGroupMsgSyncRsp& operator=(XmsgImGroupMsgSyncRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImGroupMsgSyncRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImGroupMsgSyncRsp* internal_default_instance() {
    return reinterpret_cast<const XmsgImGroupMsgSyncRsp*>(
               &_XmsgImGroupMsgSyncRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(XmsgImGroupMsgSyncRsp* other);
  friend void swap(XmsgImGroupMsgSyncRsp& a, XmsgImGroupMsgSyncRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImGroupMsgSyncRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImGroupMsgSyncRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImGroupMsgSyncRsp& from);
  void MergeFrom(const XmsgImGroupMsgSyncRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImGroupMsgSyncRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .XmsgImGroupMsgHistory msg = 1;
  int msg_size() const;
  void clear_msg();
  static const int kMsgFieldNumber = 1;
  const ::XmsgImGroupMsgHistory& msg(int index) const;
  ::XmsgImGroupMsgHistory* mutable_msg(int index);
  ::XmsgImGroupMsgHistory* add_msg();
  ::google::protobuf::RepeatedPtrField< ::XmsgImGroupMsgHistory >*
      mutable_msg();
  const ::google::protobuf::RepeatedPtrField< ::XmsgImGroupMsgHistory >&
      msg() const;

  // @@protoc_insertion_point(class_scope:XmsgImGroupMsgSyncRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::XmsgImGroupMsgHistory > msg_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImGroupMsgSyncRspImpl();
};
// -------------------------------------------------------------------

class XmsgImGroupMsgHistory : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImGroupMsgHistory) */ {
 public:
  XmsgImGroupMsgHistory();
  virtual ~XmsgImGroupMsgHistory();

  XmsgImGroupMsgHistory(const XmsgImGroupMsgHistory& from);

  inline XmsgImGroupMsgHistory& operator=(const XmsgImGroupMsgHistory& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImGroupMsgHistory(XmsgImGroupMsgHistory&& from) noexcept
    : XmsgImGroupMsgHistory() {
    *this = ::std::move(from);
  }

  inline XmsgImGroupMsgHistory& operator=(XmsgImGroupMsgHistory&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImGroupMsgHistory& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImGroupMsgHistory* internal_default_instance() {
    return reinterpret_cast<const XmsgImGroupMsgHistory*>(
               &_XmsgImGroupMsgHistory_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(XmsgImGroupMsgHistory* other);
  friend void swap(XmsgImGroupMsgHistory& a, XmsgImGroupMsgHistory& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImGroupMsgHistory* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImGroupMsgHistory* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImGroupMsgHistory& from);
  void MergeFrom(const XmsgImGroupMsgHistory& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImGroupMsgHistory* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string scgt = 1;
  void clear_scgt();
  static const int kScgtFieldNumber = 1;
  const ::std::string& scgt() const;
  void set_scgt(const ::std::string& value);
  #if LANG_CXX11
  void set_scgt(::std::string&& value);
  #endif
  void set_scgt(const char* value);
  void set_scgt(const char* value, size_t size);
  ::std::string* mutable_scgt();
  ::std::string* release_scgt();
  void set_allocated_scgt(::std::string* scgt);

  // .XmsgImMsg msg = 3;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 3;
  const ::XmsgImMsg& msg() const;
  ::XmsgImMsg* release_msg();
  ::XmsgImMsg* mutable_msg();
  void set_allocated_msg(::XmsgImMsg* msg);

  // uint64 msgId = 2;
  void clear_msgid();
  static const int kMsgIdFieldNumber = 2;
  ::google::protobuf::uint64 msgid() const;
  void set_msgid(::google::protobuf::uint64 value);

  // uint64 gts = 4;
  void clear_gts();
  static const int kGtsFieldNumber = 4;
  ::google::protobuf::uint64 gts() const;
  void set_gts(::google::protobuf::uint64 value);

  // bool isRead = 5;
  void clear_isread();
  static const int kIsReadFieldNumber = 5;
  bool isread() const;
  void set_isread(bool value);

  // @@protoc_insertion_point(class_scope:XmsgImGroupMsgHistory)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr scgt_;
  ::XmsgImMsg* msg_;
  ::google::protobuf::uint64 msgid_;
  ::google::protobuf::uint64 gts_;
  bool isread_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImGroupMsgHistoryImpl();
};
// -------------------------------------------------------------------

class XmsgImGroupMsgQueryReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImGroupMsgQueryReq) */ {
 public:
  XmsgImGroupMsgQueryReq();
  virtual ~XmsgImGroupMsgQueryReq();

  XmsgImGroupMsgQueryReq(const XmsgImGroupMsgQueryReq& from);

  inline XmsgImGroupMsgQueryReq& operator=(const XmsgImGroupMsgQueryReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImGroupMsgQueryReq(XmsgImGroupMsgQueryReq&& from) noexcept
    : XmsgImGroupMsgQueryReq() {
    *this = ::std::move(from);
  }

  inline XmsgImGroupMsgQueryReq& operator=(XmsgImGroupMsgQueryReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImGroupMsgQueryReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImGroupMsgQueryReq* internal_default_instance() {
    return reinterpret_cast<const XmsgImGroupMsgQueryReq*>(
               &_XmsgImGroupMsgQueryReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(XmsgImGroupMsgQueryReq* other);
  friend void swap(XmsgImGroupMsgQueryReq& a, XmsgImGroupMsgQueryReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImGroupMsgQueryReq* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImGroupMsgQueryReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImGroupMsgQueryReq& from);
  void MergeFrom(const XmsgImGroupMsgQueryReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImGroupMsgQueryReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cgt = 1;
  void clear_cgt();
  static const int kCgtFieldNumber = 1;
  const ::std::string& cgt() const;
  void set_cgt(const ::std::string& value);
  #if LANG_CXX11
  void set_cgt(::std::string&& value);
  #endif
  void set_cgt(const char* value);
  void set_cgt(const char* value, size_t size);
  ::std::string* mutable_cgt();
  ::std::string* release_cgt();
  void set_allocated_cgt(::std::string* cgt);

  // uint64 msgId = 2;
  void clear_msgid();
  static const int kMsgIdFieldNumber = 2;
  ::google::protobuf::uint64 msgid() const;
  void set_msgid(::google::protobuf::uint64 value);

  // bool before = 3;
  void clear_before();
  static const int kBeforeFieldNumber = 3;
  bool before() const;
  void set_before(bool value);

  // uint32 pageSize = 4;
  void clear_pagesize();
  static const int kPageSizeFieldNumber = 4;
  ::google::protobuf::uint32 pagesize() const;
  void set_pagesize(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:XmsgImGroupMsgQueryReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cgt_;
  ::google::protobuf::uint64 msgid_;
  bool before_;
  ::google::protobuf::uint32 pagesize_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImGroupMsgQueryReqImpl();
};
// -------------------------------------------------------------------

class XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImGroupMsgQueryRsp.XmsgImGroupMsgQueryRspItem) */ {
 public:
  XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem();
  virtual ~XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem();

  XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem(const XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem& from);

  inline XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem& operator=(const XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem(XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem&& from) noexcept
    : XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem() {
    *this = ::std::move(from);
  }

  inline XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem& operator=(XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem* internal_default_instance() {
    return reinterpret_cast<const XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem*>(
               &_XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem* other);
  friend void swap(XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem& a, XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem& from);
  void MergeFrom(const XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string scgt = 1;
  void clear_scgt();
  static const int kScgtFieldNumber = 1;
  const ::std::string& scgt() const;
  void set_scgt(const ::std::string& value);
  #if LANG_CXX11
  void set_scgt(::std::string&& value);
  #endif
  void set_scgt(const char* value);
  void set_scgt(const char* value, size_t size);
  ::std::string* mutable_scgt();
  ::std::string* release_scgt();
  void set_allocated_scgt(::std::string* scgt);

  // .XmsgImMsg msg = 3;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 3;
  const ::XmsgImMsg& msg() const;
  ::XmsgImMsg* release_msg();
  ::XmsgImMsg* mutable_msg();
  void set_allocated_msg(::XmsgImMsg* msg);

  // uint64 msgId = 2;
  void clear_msgid();
  static const int kMsgIdFieldNumber = 2;
  ::google::protobuf::uint64 msgid() const;
  void set_msgid(::google::protobuf::uint64 value);

  // uint64 gts = 4;
  void clear_gts();
  static const int kGtsFieldNumber = 4;
  ::google::protobuf::uint64 gts() const;
  void set_gts(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:XmsgImGroupMsgQueryRsp.XmsgImGroupMsgQueryRspItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr scgt_;
  ::XmsgImMsg* msg_;
  ::google::protobuf::uint64 msgid_;
  ::google::protobuf::uint64 gts_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItemImpl();
};
// -------------------------------------------------------------------

class XmsgImGroupMsgQueryRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImGroupMsgQueryRsp) */ {
 public:
  XmsgImGroupMsgQueryRsp();
  virtual ~XmsgImGroupMsgQueryRsp();

  XmsgImGroupMsgQueryRsp(const XmsgImGroupMsgQueryRsp& from);

  inline XmsgImGroupMsgQueryRsp& operator=(const XmsgImGroupMsgQueryRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImGroupMsgQueryRsp(XmsgImGroupMsgQueryRsp&& from) noexcept
    : XmsgImGroupMsgQueryRsp() {
    *this = ::std::move(from);
  }

  inline XmsgImGroupMsgQueryRsp& operator=(XmsgImGroupMsgQueryRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImGroupMsgQueryRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImGroupMsgQueryRsp* internal_default_instance() {
    return reinterpret_cast<const XmsgImGroupMsgQueryRsp*>(
               &_XmsgImGroupMsgQueryRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(XmsgImGroupMsgQueryRsp* other);
  friend void swap(XmsgImGroupMsgQueryRsp& a, XmsgImGroupMsgQueryRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImGroupMsgQueryRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImGroupMsgQueryRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImGroupMsgQueryRsp& from);
  void MergeFrom(const XmsgImGroupMsgQueryRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImGroupMsgQueryRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem XmsgImGroupMsgQueryRspItem;

  // accessors -------------------------------------------------------

  // repeated .XmsgImGroupMsgQueryRsp.XmsgImGroupMsgQueryRspItem msg = 1;
  int msg_size() const;
  void clear_msg();
  static const int kMsgFieldNumber = 1;
  const ::XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem& msg(int index) const;
  ::XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem* mutable_msg(int index);
  ::XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem* add_msg();
  ::google::protobuf::RepeatedPtrField< ::XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem >*
      mutable_msg();
  const ::google::protobuf::RepeatedPtrField< ::XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem >&
      msg() const;

  // @@protoc_insertion_point(class_scope:XmsgImGroupMsgQueryRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem > msg_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImGroupMsgQueryRspImpl();
};
// -------------------------------------------------------------------

class XmsgImGroupMsgReadReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImGroupMsgReadReq) */ {
 public:
  XmsgImGroupMsgReadReq();
  virtual ~XmsgImGroupMsgReadReq();

  XmsgImGroupMsgReadReq(const XmsgImGroupMsgReadReq& from);

  inline XmsgImGroupMsgReadReq& operator=(const XmsgImGroupMsgReadReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImGroupMsgReadReq(XmsgImGroupMsgReadReq&& from) noexcept
    : XmsgImGroupMsgReadReq() {
    *this = ::std::move(from);
  }

  inline XmsgImGroupMsgReadReq& operator=(XmsgImGroupMsgReadReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImGroupMsgReadReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImGroupMsgReadReq* internal_default_instance() {
    return reinterpret_cast<const XmsgImGroupMsgReadReq*>(
               &_XmsgImGroupMsgReadReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(XmsgImGroupMsgReadReq* other);
  friend void swap(XmsgImGroupMsgReadReq& a, XmsgImGroupMsgReadReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImGroupMsgReadReq* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImGroupMsgReadReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImGroupMsgReadReq& from);
  void MergeFrom(const XmsgImGroupMsgReadReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImGroupMsgReadReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cgt = 1;
  void clear_cgt();
  static const int kCgtFieldNumber = 1;
  const ::std::string& cgt() const;
  void set_cgt(const ::std::string& value);
  #if LANG_CXX11
  void set_cgt(::std::string&& value);
  #endif
  void set_cgt(const char* value);
  void set_cgt(const char* value, size_t size);
  ::std::string* mutable_cgt();
  ::std::string* release_cgt();
  void set_allocated_cgt(::std::string* cgt);

  // uint64 msgId = 2;
  void clear_msgid();
  static const int kMsgIdFieldNumber = 2;
  ::google::protobuf::uint64 msgid() const;
  void set_msgid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:XmsgImGroupMsgReadReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cgt_;
  ::google::protobuf::uint64 msgid_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImGroupMsgReadReqImpl();
};
// -------------------------------------------------------------------

class XmsgImGroupMsgReadRsp_ExtEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgImGroupMsgReadRsp_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgImGroupMsgReadRsp_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgImGroupMsgReadRsp_ExtEntry_DoNotUse();
  XmsgImGroupMsgReadRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgImGroupMsgReadRsp_ExtEntry_DoNotUse& other);
  static const XmsgImGroupMsgReadRsp_ExtEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgImGroupMsgReadRsp_ExtEntry_DoNotUse*>(&_XmsgImGroupMsgReadRsp_ExtEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgImGroupMsgReadRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImGroupMsgReadRsp) */ {
 public:
  XmsgImGroupMsgReadRsp();
  virtual ~XmsgImGroupMsgReadRsp();

  XmsgImGroupMsgReadRsp(const XmsgImGroupMsgReadRsp& from);

  inline XmsgImGroupMsgReadRsp& operator=(const XmsgImGroupMsgReadRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImGroupMsgReadRsp(XmsgImGroupMsgReadRsp&& from) noexcept
    : XmsgImGroupMsgReadRsp() {
    *this = ::std::move(from);
  }

  inline XmsgImGroupMsgReadRsp& operator=(XmsgImGroupMsgReadRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImGroupMsgReadRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImGroupMsgReadRsp* internal_default_instance() {
    return reinterpret_cast<const XmsgImGroupMsgReadRsp*>(
               &_XmsgImGroupMsgReadRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(XmsgImGroupMsgReadRsp* other);
  friend void swap(XmsgImGroupMsgReadRsp& a, XmsgImGroupMsgReadRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImGroupMsgReadRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImGroupMsgReadRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImGroupMsgReadRsp& from);
  void MergeFrom(const XmsgImGroupMsgReadRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImGroupMsgReadRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> ext = 1;
  int ext_size() const;
  void clear_ext();
  static const int kExtFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      ext() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_ext();

  // @@protoc_insertion_point(class_scope:XmsgImGroupMsgReadRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgImGroupMsgReadRsp_ExtEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > ext_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImGroupMsgReadRspImpl();
};
// -------------------------------------------------------------------

class XmsgImGroupMsgReadNotice : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImGroupMsgReadNotice) */ {
 public:
  XmsgImGroupMsgReadNotice();
  virtual ~XmsgImGroupMsgReadNotice();

  XmsgImGroupMsgReadNotice(const XmsgImGroupMsgReadNotice& from);

  inline XmsgImGroupMsgReadNotice& operator=(const XmsgImGroupMsgReadNotice& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImGroupMsgReadNotice(XmsgImGroupMsgReadNotice&& from) noexcept
    : XmsgImGroupMsgReadNotice() {
    *this = ::std::move(from);
  }

  inline XmsgImGroupMsgReadNotice& operator=(XmsgImGroupMsgReadNotice&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImGroupMsgReadNotice& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImGroupMsgReadNotice* internal_default_instance() {
    return reinterpret_cast<const XmsgImGroupMsgReadNotice*>(
               &_XmsgImGroupMsgReadNotice_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(XmsgImGroupMsgReadNotice* other);
  friend void swap(XmsgImGroupMsgReadNotice& a, XmsgImGroupMsgReadNotice& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImGroupMsgReadNotice* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImGroupMsgReadNotice* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImGroupMsgReadNotice& from);
  void MergeFrom(const XmsgImGroupMsgReadNotice& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImGroupMsgReadNotice* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cgt = 1;
  void clear_cgt();
  static const int kCgtFieldNumber = 1;
  const ::std::string& cgt() const;
  void set_cgt(const ::std::string& value);
  #if LANG_CXX11
  void set_cgt(::std::string&& value);
  #endif
  void set_cgt(const char* value);
  void set_cgt(const char* value, size_t size);
  ::std::string* mutable_cgt();
  ::std::string* release_cgt();
  void set_allocated_cgt(::std::string* cgt);

  // uint64 msgId = 2;
  void clear_msgid();
  static const int kMsgIdFieldNumber = 2;
  ::google::protobuf::uint64 msgid() const;
  void set_msgid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:XmsgImGroupMsgReadNotice)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cgt_;
  ::google::protobuf::uint64 msgid_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto::InitDefaultsXmsgImGroupMsgReadNoticeImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// XmsgImGroupSendMsgReq

// string cgt = 1;
inline void XmsgImGroupSendMsgReq::clear_cgt() {
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImGroupSendMsgReq::cgt() const {
  // @@protoc_insertion_point(field_get:XmsgImGroupSendMsgReq.cgt)
  return cgt_.GetNoArena();
}
inline void XmsgImGroupSendMsgReq::set_cgt(const ::std::string& value) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImGroupSendMsgReq.cgt)
}
#if LANG_CXX11
inline void XmsgImGroupSendMsgReq::set_cgt(::std::string&& value) {
  
  cgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImGroupSendMsgReq.cgt)
}
#endif
inline void XmsgImGroupSendMsgReq::set_cgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImGroupSendMsgReq.cgt)
}
inline void XmsgImGroupSendMsgReq::set_cgt(const char* value, size_t size) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImGroupSendMsgReq.cgt)
}
inline ::std::string* XmsgImGroupSendMsgReq::mutable_cgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImGroupSendMsgReq.cgt)
  return cgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImGroupSendMsgReq::release_cgt() {
  // @@protoc_insertion_point(field_release:XmsgImGroupSendMsgReq.cgt)
  
  return cgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImGroupSendMsgReq::set_allocated_cgt(::std::string* cgt) {
  if (cgt != NULL) {
    
  } else {
    
  }
  cgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgImGroupSendMsgReq.cgt)
}

// uint64 localMsgId = 2;
inline void XmsgImGroupSendMsgReq::clear_localmsgid() {
  localmsgid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImGroupSendMsgReq::localmsgid() const {
  // @@protoc_insertion_point(field_get:XmsgImGroupSendMsgReq.localMsgId)
  return localmsgid_;
}
inline void XmsgImGroupSendMsgReq::set_localmsgid(::google::protobuf::uint64 value) {
  
  localmsgid_ = value;
  // @@protoc_insertion_point(field_set:XmsgImGroupSendMsgReq.localMsgId)
}

// .XmsgImMsg msg = 3;
inline bool XmsgImGroupSendMsgReq::has_msg() const {
  return this != internal_default_instance() && msg_ != NULL;
}
inline void XmsgImGroupSendMsgReq::clear_msg() {
  if (GetArenaNoVirtual() == NULL && msg_ != NULL) {
    delete msg_;
  }
  msg_ = NULL;
}
inline const ::XmsgImMsg& XmsgImGroupSendMsgReq::msg() const {
  const ::XmsgImMsg* p = msg_;
  // @@protoc_insertion_point(field_get:XmsgImGroupSendMsgReq.msg)
  return p != NULL ? *p : *reinterpret_cast<const ::XmsgImMsg*>(
      &::_XmsgImMsg_default_instance_);
}
inline ::XmsgImMsg* XmsgImGroupSendMsgReq::release_msg() {
  // @@protoc_insertion_point(field_release:XmsgImGroupSendMsgReq.msg)
  
  ::XmsgImMsg* temp = msg_;
  msg_ = NULL;
  return temp;
}
inline ::XmsgImMsg* XmsgImGroupSendMsgReq::mutable_msg() {
  
  if (msg_ == NULL) {
    msg_ = new ::XmsgImMsg;
  }
  // @@protoc_insertion_point(field_mutable:XmsgImGroupSendMsgReq.msg)
  return msg_;
}
inline void XmsgImGroupSendMsgReq::set_allocated_msg(::XmsgImMsg* msg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete msg_;
  }
  if (msg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      msg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, msg, submessage_arena);
    }
    
  } else {
    
  }
  msg_ = msg;
  // @@protoc_insertion_point(field_set_allocated:XmsgImGroupSendMsgReq.msg)
}

// map<string, string> ext = 4;
inline int XmsgImGroupSendMsgReq::ext_size() const {
  return ext_.size();
}
inline void XmsgImGroupSendMsgReq::clear_ext() {
  ext_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgImGroupSendMsgReq::ext() const {
  // @@protoc_insertion_point(field_map:XmsgImGroupSendMsgReq.ext)
  return ext_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgImGroupSendMsgReq::mutable_ext() {
  // @@protoc_insertion_point(field_mutable_map:XmsgImGroupSendMsgReq.ext)
  return ext_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// XmsgImGroupSendMsgRsp

// uint64 msgId = 1;
inline void XmsgImGroupSendMsgRsp::clear_msgid() {
  msgid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImGroupSendMsgRsp::msgid() const {
  // @@protoc_insertion_point(field_get:XmsgImGroupSendMsgRsp.msgId)
  return msgid_;
}
inline void XmsgImGroupSendMsgRsp::set_msgid(::google::protobuf::uint64 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:XmsgImGroupSendMsgRsp.msgId)
}

// string gcgt = 2;
inline void XmsgImGroupSendMsgRsp::clear_gcgt() {
  gcgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImGroupSendMsgRsp::gcgt() const {
  // @@protoc_insertion_point(field_get:XmsgImGroupSendMsgRsp.gcgt)
  return gcgt_.GetNoArena();
}
inline void XmsgImGroupSendMsgRsp::set_gcgt(const ::std::string& value) {
  
  gcgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImGroupSendMsgRsp.gcgt)
}
#if LANG_CXX11
inline void XmsgImGroupSendMsgRsp::set_gcgt(::std::string&& value) {
  
  gcgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImGroupSendMsgRsp.gcgt)
}
#endif
inline void XmsgImGroupSendMsgRsp::set_gcgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  gcgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImGroupSendMsgRsp.gcgt)
}
inline void XmsgImGroupSendMsgRsp::set_gcgt(const char* value, size_t size) {
  
  gcgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImGroupSendMsgRsp.gcgt)
}
inline ::std::string* XmsgImGroupSendMsgRsp::mutable_gcgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImGroupSendMsgRsp.gcgt)
  return gcgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImGroupSendMsgRsp::release_gcgt() {
  // @@protoc_insertion_point(field_release:XmsgImGroupSendMsgRsp.gcgt)
  
  return gcgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImGroupSendMsgRsp::set_allocated_gcgt(::std::string* gcgt) {
  if (gcgt != NULL) {
    
  } else {
    
  }
  gcgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gcgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgImGroupSendMsgRsp.gcgt)
}

// uint64 gts = 3;
inline void XmsgImGroupSendMsgRsp::clear_gts() {
  gts_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImGroupSendMsgRsp::gts() const {
  // @@protoc_insertion_point(field_get:XmsgImGroupSendMsgRsp.gts)
  return gts_;
}
inline void XmsgImGroupSendMsgRsp::set_gts(::google::protobuf::uint64 value) {
  
  gts_ = value;
  // @@protoc_insertion_point(field_set:XmsgImGroupSendMsgRsp.gts)
}

// map<string, string> ext = 4;
inline int XmsgImGroupSendMsgRsp::ext_size() const {
  return ext_.size();
}
inline void XmsgImGroupSendMsgRsp::clear_ext() {
  ext_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgImGroupSendMsgRsp::ext() const {
  // @@protoc_insertion_point(field_map:XmsgImGroupSendMsgRsp.ext)
  return ext_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgImGroupSendMsgRsp::mutable_ext() {
  // @@protoc_insertion_point(field_mutable_map:XmsgImGroupSendMsgRsp.ext)
  return ext_.MutableMap();
}

// -------------------------------------------------------------------

// XmsgImMsg

// string type = 1;
inline void XmsgImMsg::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImMsg::type() const {
  // @@protoc_insertion_point(field_get:XmsgImMsg.type)
  return type_.GetNoArena();
}
inline void XmsgImMsg::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImMsg.type)
}
#if LANG_CXX11
inline void XmsgImMsg::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImMsg.type)
}
#endif
inline void XmsgImMsg::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImMsg.type)
}
inline void XmsgImMsg::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImMsg.type)
}
inline ::std::string* XmsgImMsg::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImMsg.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImMsg::release_type() {
  // @@protoc_insertion_point(field_release:XmsgImMsg.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImMsg::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:XmsgImMsg.type)
}

// .XmsgImMsgText text = 2;
inline bool XmsgImMsg::has_text() const {
  return this != internal_default_instance() && text_ != NULL;
}
inline void XmsgImMsg::clear_text() {
  if (GetArenaNoVirtual() == NULL && text_ != NULL) {
    delete text_;
  }
  text_ = NULL;
}
inline const ::XmsgImMsgText& XmsgImMsg::text() const {
  const ::XmsgImMsgText* p = text_;
  // @@protoc_insertion_point(field_get:XmsgImMsg.text)
  return p != NULL ? *p : *reinterpret_cast<const ::XmsgImMsgText*>(
      &::_XmsgImMsgText_default_instance_);
}
inline ::XmsgImMsgText* XmsgImMsg::release_text() {
  // @@protoc_insertion_point(field_release:XmsgImMsg.text)
  
  ::XmsgImMsgText* temp = text_;
  text_ = NULL;
  return temp;
}
inline ::XmsgImMsgText* XmsgImMsg::mutable_text() {
  
  if (text_ == NULL) {
    text_ = new ::XmsgImMsgText;
  }
  // @@protoc_insertion_point(field_mutable:XmsgImMsg.text)
  return text_;
}
inline void XmsgImMsg::set_allocated_text(::XmsgImMsgText* text) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete text_;
  }
  if (text) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      text = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, text, submessage_arena);
    }
    
  } else {
    
  }
  text_ = text;
  // @@protoc_insertion_point(field_set_allocated:XmsgImMsg.text)
}

// .XmsgImMsgHtml html = 3;
inline bool XmsgImMsg::has_html() const {
  return this != internal_default_instance() && html_ != NULL;
}
inline void XmsgImMsg::clear_html() {
  if (GetArenaNoVirtual() == NULL && html_ != NULL) {
    delete html_;
  }
  html_ = NULL;
}
inline const ::XmsgImMsgHtml& XmsgImMsg::html() const {
  const ::XmsgImMsgHtml* p = html_;
  // @@protoc_insertion_point(field_get:XmsgImMsg.html)
  return p != NULL ? *p : *reinterpret_cast<const ::XmsgImMsgHtml*>(
      &::_XmsgImMsgHtml_default_instance_);
}
inline ::XmsgImMsgHtml* XmsgImMsg::release_html() {
  // @@protoc_insertion_point(field_release:XmsgImMsg.html)
  
  ::XmsgImMsgHtml* temp = html_;
  html_ = NULL;
  return temp;
}
inline ::XmsgImMsgHtml* XmsgImMsg::mutable_html() {
  
  if (html_ == NULL) {
    html_ = new ::XmsgImMsgHtml;
  }
  // @@protoc_insertion_point(field_mutable:XmsgImMsg.html)
  return html_;
}
inline void XmsgImMsg::set_allocated_html(::XmsgImMsgHtml* html) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete html_;
  }
  if (html) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      html = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, html, submessage_arena);
    }
    
  } else {
    
  }
  html_ = html;
  // @@protoc_insertion_point(field_set_allocated:XmsgImMsg.html)
}

// .XmsgImMsgImage image = 4;
inline bool XmsgImMsg::has_image() const {
  return this != internal_default_instance() && image_ != NULL;
}
inline void XmsgImMsg::clear_image() {
  if (GetArenaNoVirtual() == NULL && image_ != NULL) {
    delete image_;
  }
  image_ = NULL;
}
inline const ::XmsgImMsgImage& XmsgImMsg::image() const {
  const ::XmsgImMsgImage* p = image_;
  // @@protoc_insertion_point(field_get:XmsgImMsg.image)
  return p != NULL ? *p : *reinterpret_cast<const ::XmsgImMsgImage*>(
      &::_XmsgImMsgImage_default_instance_);
}
inline ::XmsgImMsgImage* XmsgImMsg::release_image() {
  // @@protoc_insertion_point(field_release:XmsgImMsg.image)
  
  ::XmsgImMsgImage* temp = image_;
  image_ = NULL;
  return temp;
}
inline ::XmsgImMsgImage* XmsgImMsg::mutable_image() {
  
  if (image_ == NULL) {
    image_ = new ::XmsgImMsgImage;
  }
  // @@protoc_insertion_point(field_mutable:XmsgImMsg.image)
  return image_;
}
inline void XmsgImMsg::set_allocated_image(::XmsgImMsgImage* image) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete image_;
  }
  if (image) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      image = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, image, submessage_arena);
    }
    
  } else {
    
  }
  image_ = image;
  // @@protoc_insertion_point(field_set_allocated:XmsgImMsg.image)
}

// .XmsgImMsgVoice voice = 5;
inline bool XmsgImMsg::has_voice() const {
  return this != internal_default_instance() && voice_ != NULL;
}
inline void XmsgImMsg::clear_voice() {
  if (GetArenaNoVirtual() == NULL && voice_ != NULL) {
    delete voice_;
  }
  voice_ = NULL;
}
inline const ::XmsgImMsgVoice& XmsgImMsg::voice() const {
  const ::XmsgImMsgVoice* p = voice_;
  // @@protoc_insertion_point(field_get:XmsgImMsg.voice)
  return p != NULL ? *p : *reinterpret_cast<const ::XmsgImMsgVoice*>(
      &::_XmsgImMsgVoice_default_instance_);
}
inline ::XmsgImMsgVoice* XmsgImMsg::release_voice() {
  // @@protoc_insertion_point(field_release:XmsgImMsg.voice)
  
  ::XmsgImMsgVoice* temp = voice_;
  voice_ = NULL;
  return temp;
}
inline ::XmsgImMsgVoice* XmsgImMsg::mutable_voice() {
  
  if (voice_ == NULL) {
    voice_ = new ::XmsgImMsgVoice;
  }
  // @@protoc_insertion_point(field_mutable:XmsgImMsg.voice)
  return voice_;
}
inline void XmsgImMsg::set_allocated_voice(::XmsgImMsgVoice* voice) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete voice_;
  }
  if (voice) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      voice = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, voice, submessage_arena);
    }
    
  } else {
    
  }
  voice_ = voice;
  // @@protoc_insertion_point(field_set_allocated:XmsgImMsg.voice)
}

// .XmsgImMsgVideo video = 6;
inline bool XmsgImMsg::has_video() const {
  return this != internal_default_instance() && video_ != NULL;
}
inline void XmsgImMsg::clear_video() {
  if (GetArenaNoVirtual() == NULL && video_ != NULL) {
    delete video_;
  }
  video_ = NULL;
}
inline const ::XmsgImMsgVideo& XmsgImMsg::video() const {
  const ::XmsgImMsgVideo* p = video_;
  // @@protoc_insertion_point(field_get:XmsgImMsg.video)
  return p != NULL ? *p : *reinterpret_cast<const ::XmsgImMsgVideo*>(
      &::_XmsgImMsgVideo_default_instance_);
}
inline ::XmsgImMsgVideo* XmsgImMsg::release_video() {
  // @@protoc_insertion_point(field_release:XmsgImMsg.video)
  
  ::XmsgImMsgVideo* temp = video_;
  video_ = NULL;
  return temp;
}
inline ::XmsgImMsgVideo* XmsgImMsg::mutable_video() {
  
  if (video_ == NULL) {
    video_ = new ::XmsgImMsgVideo;
  }
  // @@protoc_insertion_point(field_mutable:XmsgImMsg.video)
  return video_;
}
inline void XmsgImMsg::set_allocated_video(::XmsgImMsgVideo* video) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete video_;
  }
  if (video) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      video = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, video, submessage_arena);
    }
    
  } else {
    
  }
  video_ = video;
  // @@protoc_insertion_point(field_set_allocated:XmsgImMsg.video)
}

// .XmsgImMsgFile file = 7;
inline bool XmsgImMsg::has_file() const {
  return this != internal_default_instance() && file_ != NULL;
}
inline void XmsgImMsg::clear_file() {
  if (GetArenaNoVirtual() == NULL && file_ != NULL) {
    delete file_;
  }
  file_ = NULL;
}
inline const ::XmsgImMsgFile& XmsgImMsg::file() const {
  const ::XmsgImMsgFile* p = file_;
  // @@protoc_insertion_point(field_get:XmsgImMsg.file)
  return p != NULL ? *p : *reinterpret_cast<const ::XmsgImMsgFile*>(
      &::_XmsgImMsgFile_default_instance_);
}
inline ::XmsgImMsgFile* XmsgImMsg::release_file() {
  // @@protoc_insertion_point(field_release:XmsgImMsg.file)
  
  ::XmsgImMsgFile* temp = file_;
  file_ = NULL;
  return temp;
}
inline ::XmsgImMsgFile* XmsgImMsg::mutable_file() {
  
  if (file_ == NULL) {
    file_ = new ::XmsgImMsgFile;
  }
  // @@protoc_insertion_point(field_mutable:XmsgImMsg.file)
  return file_;
}
inline void XmsgImMsg::set_allocated_file(::XmsgImMsgFile* file) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete file_;
  }
  if (file) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      file = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, file, submessage_arena);
    }
    
  } else {
    
  }
  file_ = file;
  // @@protoc_insertion_point(field_set_allocated:XmsgImMsg.file)
}

// .XmsgImMsgMerge merge = 8;
inline bool XmsgImMsg::has_merge() const {
  return this != internal_default_instance() && merge_ != NULL;
}
inline void XmsgImMsg::clear_merge() {
  if (GetArenaNoVirtual() == NULL && merge_ != NULL) {
    delete merge_;
  }
  merge_ = NULL;
}
inline const ::XmsgImMsgMerge& XmsgImMsg::merge() const {
  const ::XmsgImMsgMerge* p = merge_;
  // @@protoc_insertion_point(field_get:XmsgImMsg.merge)
  return p != NULL ? *p : *reinterpret_cast<const ::XmsgImMsgMerge*>(
      &::_XmsgImMsgMerge_default_instance_);
}
inline ::XmsgImMsgMerge* XmsgImMsg::release_merge() {
  // @@protoc_insertion_point(field_release:XmsgImMsg.merge)
  
  ::XmsgImMsgMerge* temp = merge_;
  merge_ = NULL;
  return temp;
}
inline ::XmsgImMsgMerge* XmsgImMsg::mutable_merge() {
  
  if (merge_ == NULL) {
    merge_ = new ::XmsgImMsgMerge;
  }
  // @@protoc_insertion_point(field_mutable:XmsgImMsg.merge)
  return merge_;
}
inline void XmsgImMsg::set_allocated_merge(::XmsgImMsgMerge* merge) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete merge_;
  }
  if (merge) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      merge = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, merge, submessage_arena);
    }
    
  } else {
    
  }
  merge_ = merge;
  // @@protoc_insertion_point(field_set_allocated:XmsgImMsg.merge)
}

// .XmsgImMsgAt atx = 9;
inline bool XmsgImMsg::has_atx() const {
  return this != internal_default_instance() && atx_ != NULL;
}
inline void XmsgImMsg::clear_atx() {
  if (GetArenaNoVirtual() == NULL && atx_ != NULL) {
    delete atx_;
  }
  atx_ = NULL;
}
inline const ::XmsgImMsgAt& XmsgImMsg::atx() const {
  const ::XmsgImMsgAt* p = atx_;
  // @@protoc_insertion_point(field_get:XmsgImMsg.atx)
  return p != NULL ? *p : *reinterpret_cast<const ::XmsgImMsgAt*>(
      &::_XmsgImMsgAt_default_instance_);
}
inline ::XmsgImMsgAt* XmsgImMsg::release_atx() {
  // @@protoc_insertion_point(field_release:XmsgImMsg.atx)
  
  ::XmsgImMsgAt* temp = atx_;
  atx_ = NULL;
  return temp;
}
inline ::XmsgImMsgAt* XmsgImMsg::mutable_atx() {
  
  if (atx_ == NULL) {
    atx_ = new ::XmsgImMsgAt;
  }
  // @@protoc_insertion_point(field_mutable:XmsgImMsg.atx)
  return atx_;
}
inline void XmsgImMsg::set_allocated_atx(::XmsgImMsgAt* atx) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete atx_;
  }
  if (atx) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      atx = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, atx, submessage_arena);
    }
    
  } else {
    
  }
  atx_ = atx;
  // @@protoc_insertion_point(field_set_allocated:XmsgImMsg.atx)
}

// -------------------------------------------------------------------

// XmsgImMsgText

// string text = 1;
inline void XmsgImMsgText::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImMsgText::text() const {
  // @@protoc_insertion_point(field_get:XmsgImMsgText.text)
  return text_.GetNoArena();
}
inline void XmsgImMsgText::set_text(const ::std::string& value) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImMsgText.text)
}
#if LANG_CXX11
inline void XmsgImMsgText::set_text(::std::string&& value) {
  
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImMsgText.text)
}
#endif
inline void XmsgImMsgText::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImMsgText.text)
}
inline void XmsgImMsgText::set_text(const char* value, size_t size) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImMsgText.text)
}
inline ::std::string* XmsgImMsgText::mutable_text() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImMsgText.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImMsgText::release_text() {
  // @@protoc_insertion_point(field_release:XmsgImMsgText.text)
  
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImMsgText::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    
  } else {
    
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:XmsgImMsgText.text)
}

// -------------------------------------------------------------------

// XmsgImMsgHtml

// string html = 1;
inline void XmsgImMsgHtml::clear_html() {
  html_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImMsgHtml::html() const {
  // @@protoc_insertion_point(field_get:XmsgImMsgHtml.html)
  return html_.GetNoArena();
}
inline void XmsgImMsgHtml::set_html(const ::std::string& value) {
  
  html_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImMsgHtml.html)
}
#if LANG_CXX11
inline void XmsgImMsgHtml::set_html(::std::string&& value) {
  
  html_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImMsgHtml.html)
}
#endif
inline void XmsgImMsgHtml::set_html(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  html_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImMsgHtml.html)
}
inline void XmsgImMsgHtml::set_html(const char* value, size_t size) {
  
  html_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImMsgHtml.html)
}
inline ::std::string* XmsgImMsgHtml::mutable_html() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImMsgHtml.html)
  return html_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImMsgHtml::release_html() {
  // @@protoc_insertion_point(field_release:XmsgImMsgHtml.html)
  
  return html_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImMsgHtml::set_allocated_html(::std::string* html) {
  if (html != NULL) {
    
  } else {
    
  }
  html_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), html);
  // @@protoc_insertion_point(field_set_allocated:XmsgImMsgHtml.html)
}

// -------------------------------------------------------------------

// XmsgImMsgImage

// string uri = 1;
inline void XmsgImMsgImage::clear_uri() {
  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImMsgImage::uri() const {
  // @@protoc_insertion_point(field_get:XmsgImMsgImage.uri)
  return uri_.GetNoArena();
}
inline void XmsgImMsgImage::set_uri(const ::std::string& value) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImMsgImage.uri)
}
#if LANG_CXX11
inline void XmsgImMsgImage::set_uri(::std::string&& value) {
  
  uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImMsgImage.uri)
}
#endif
inline void XmsgImMsgImage::set_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImMsgImage.uri)
}
inline void XmsgImMsgImage::set_uri(const char* value, size_t size) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImMsgImage.uri)
}
inline ::std::string* XmsgImMsgImage::mutable_uri() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImMsgImage.uri)
  return uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImMsgImage::release_uri() {
  // @@protoc_insertion_point(field_release:XmsgImMsgImage.uri)
  
  return uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImMsgImage::set_allocated_uri(::std::string* uri) {
  if (uri != NULL) {
    
  } else {
    
  }
  uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uri);
  // @@protoc_insertion_point(field_set_allocated:XmsgImMsgImage.uri)
}

// -------------------------------------------------------------------

// XmsgImMsgVoice

// string uri = 1;
inline void XmsgImMsgVoice::clear_uri() {
  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImMsgVoice::uri() const {
  // @@protoc_insertion_point(field_get:XmsgImMsgVoice.uri)
  return uri_.GetNoArena();
}
inline void XmsgImMsgVoice::set_uri(const ::std::string& value) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImMsgVoice.uri)
}
#if LANG_CXX11
inline void XmsgImMsgVoice::set_uri(::std::string&& value) {
  
  uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImMsgVoice.uri)
}
#endif
inline void XmsgImMsgVoice::set_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImMsgVoice.uri)
}
inline void XmsgImMsgVoice::set_uri(const char* value, size_t size) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImMsgVoice.uri)
}
inline ::std::string* XmsgImMsgVoice::mutable_uri() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImMsgVoice.uri)
  return uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImMsgVoice::release_uri() {
  // @@protoc_insertion_point(field_release:XmsgImMsgVoice.uri)
  
  return uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImMsgVoice::set_allocated_uri(::std::string* uri) {
  if (uri != NULL) {
    
  } else {
    
  }
  uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uri);
  // @@protoc_insertion_point(field_set_allocated:XmsgImMsgVoice.uri)
}

// -------------------------------------------------------------------

// XmsgImMsgVideo

// string uri = 1;
inline void XmsgImMsgVideo::clear_uri() {
  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImMsgVideo::uri() const {
  // @@protoc_insertion_point(field_get:XmsgImMsgVideo.uri)
  return uri_.GetNoArena();
}
inline void XmsgImMsgVideo::set_uri(const ::std::string& value) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImMsgVideo.uri)
}
#if LANG_CXX11
inline void XmsgImMsgVideo::set_uri(::std::string&& value) {
  
  uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImMsgVideo.uri)
}
#endif
inline void XmsgImMsgVideo::set_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImMsgVideo.uri)
}
inline void XmsgImMsgVideo::set_uri(const char* value, size_t size) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImMsgVideo.uri)
}
inline ::std::string* XmsgImMsgVideo::mutable_uri() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImMsgVideo.uri)
  return uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImMsgVideo::release_uri() {
  // @@protoc_insertion_point(field_release:XmsgImMsgVideo.uri)
  
  return uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImMsgVideo::set_allocated_uri(::std::string* uri) {
  if (uri != NULL) {
    
  } else {
    
  }
  uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uri);
  // @@protoc_insertion_point(field_set_allocated:XmsgImMsgVideo.uri)
}

// -------------------------------------------------------------------

// XmsgImMsgFile

// string from = 1;
inline void XmsgImMsgFile::clear_from() {
  from_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImMsgFile::from() const {
  // @@protoc_insertion_point(field_get:XmsgImMsgFile.from)
  return from_.GetNoArena();
}
inline void XmsgImMsgFile::set_from(const ::std::string& value) {
  
  from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImMsgFile.from)
}
#if LANG_CXX11
inline void XmsgImMsgFile::set_from(::std::string&& value) {
  
  from_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImMsgFile.from)
}
#endif
inline void XmsgImMsgFile::set_from(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImMsgFile.from)
}
inline void XmsgImMsgFile::set_from(const char* value, size_t size) {
  
  from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImMsgFile.from)
}
inline ::std::string* XmsgImMsgFile::mutable_from() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImMsgFile.from)
  return from_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImMsgFile::release_from() {
  // @@protoc_insertion_point(field_release:XmsgImMsgFile.from)
  
  return from_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImMsgFile::set_allocated_from(::std::string* from) {
  if (from != NULL) {
    
  } else {
    
  }
  from_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from);
  // @@protoc_insertion_point(field_set_allocated:XmsgImMsgFile.from)
}

// string fid = 2;
inline void XmsgImMsgFile::clear_fid() {
  fid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImMsgFile::fid() const {
  // @@protoc_insertion_point(field_get:XmsgImMsgFile.fid)
  return fid_.GetNoArena();
}
inline void XmsgImMsgFile::set_fid(const ::std::string& value) {
  
  fid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImMsgFile.fid)
}
#if LANG_CXX11
inline void XmsgImMsgFile::set_fid(::std::string&& value) {
  
  fid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImMsgFile.fid)
}
#endif
inline void XmsgImMsgFile::set_fid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  fid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImMsgFile.fid)
}
inline void XmsgImMsgFile::set_fid(const char* value, size_t size) {
  
  fid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImMsgFile.fid)
}
inline ::std::string* XmsgImMsgFile::mutable_fid() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImMsgFile.fid)
  return fid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImMsgFile::release_fid() {
  // @@protoc_insertion_point(field_release:XmsgImMsgFile.fid)
  
  return fid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImMsgFile::set_allocated_fid(::std::string* fid) {
  if (fid != NULL) {
    
  } else {
    
  }
  fid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fid);
  // @@protoc_insertion_point(field_set_allocated:XmsgImMsgFile.fid)
}

// -------------------------------------------------------------------

// XmsgImMsgMerge

// repeated .XmsgImMsg msg = 1;
inline int XmsgImMsgMerge::msg_size() const {
  return msg_.size();
}
inline void XmsgImMsgMerge::clear_msg() {
  msg_.Clear();
}
inline const ::XmsgImMsg& XmsgImMsgMerge::msg(int index) const {
  // @@protoc_insertion_point(field_get:XmsgImMsgMerge.msg)
  return msg_.Get(index);
}
inline ::XmsgImMsg* XmsgImMsgMerge::mutable_msg(int index) {
  // @@protoc_insertion_point(field_mutable:XmsgImMsgMerge.msg)
  return msg_.Mutable(index);
}
inline ::XmsgImMsg* XmsgImMsgMerge::add_msg() {
  // @@protoc_insertion_point(field_add:XmsgImMsgMerge.msg)
  return msg_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::XmsgImMsg >*
XmsgImMsgMerge::mutable_msg() {
  // @@protoc_insertion_point(field_mutable_list:XmsgImMsgMerge.msg)
  return &msg_;
}
inline const ::google::protobuf::RepeatedPtrField< ::XmsgImMsg >&
XmsgImMsgMerge::msg() const {
  // @@protoc_insertion_point(field_list:XmsgImMsgMerge.msg)
  return msg_;
}

// -------------------------------------------------------------------

// XmsgImMsgAt

// repeated string cgt = 2;
inline int XmsgImMsgAt::cgt_size() const {
  return cgt_.size();
}
inline void XmsgImMsgAt::clear_cgt() {
  cgt_.Clear();
}
inline const ::std::string& XmsgImMsgAt::cgt(int index) const {
  // @@protoc_insertion_point(field_get:XmsgImMsgAt.cgt)
  return cgt_.Get(index);
}
inline ::std::string* XmsgImMsgAt::mutable_cgt(int index) {
  // @@protoc_insertion_point(field_mutable:XmsgImMsgAt.cgt)
  return cgt_.Mutable(index);
}
inline void XmsgImMsgAt::set_cgt(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:XmsgImMsgAt.cgt)
  cgt_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void XmsgImMsgAt::set_cgt(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:XmsgImMsgAt.cgt)
  cgt_.Mutable(index)->assign(std::move(value));
}
#endif
inline void XmsgImMsgAt::set_cgt(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  cgt_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:XmsgImMsgAt.cgt)
}
inline void XmsgImMsgAt::set_cgt(int index, const char* value, size_t size) {
  cgt_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:XmsgImMsgAt.cgt)
}
inline ::std::string* XmsgImMsgAt::add_cgt() {
  // @@protoc_insertion_point(field_add_mutable:XmsgImMsgAt.cgt)
  return cgt_.Add();
}
inline void XmsgImMsgAt::add_cgt(const ::std::string& value) {
  cgt_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:XmsgImMsgAt.cgt)
}
#if LANG_CXX11
inline void XmsgImMsgAt::add_cgt(::std::string&& value) {
  cgt_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:XmsgImMsgAt.cgt)
}
#endif
inline void XmsgImMsgAt::add_cgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  cgt_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:XmsgImMsgAt.cgt)
}
inline void XmsgImMsgAt::add_cgt(const char* value, size_t size) {
  cgt_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:XmsgImMsgAt.cgt)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
XmsgImMsgAt::cgt() const {
  // @@protoc_insertion_point(field_list:XmsgImMsgAt.cgt)
  return cgt_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
XmsgImMsgAt::mutable_cgt() {
  // @@protoc_insertion_point(field_mutable_list:XmsgImMsgAt.cgt)
  return &cgt_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// XmsgImGroupMsgNotice

// string gcgt = 1;
inline void XmsgImGroupMsgNotice::clear_gcgt() {
  gcgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImGroupMsgNotice::gcgt() const {
  // @@protoc_insertion_point(field_get:XmsgImGroupMsgNotice.gcgt)
  return gcgt_.GetNoArena();
}
inline void XmsgImGroupMsgNotice::set_gcgt(const ::std::string& value) {
  
  gcgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImGroupMsgNotice.gcgt)
}
#if LANG_CXX11
inline void XmsgImGroupMsgNotice::set_gcgt(::std::string&& value) {
  
  gcgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImGroupMsgNotice.gcgt)
}
#endif
inline void XmsgImGroupMsgNotice::set_gcgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  gcgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImGroupMsgNotice.gcgt)
}
inline void XmsgImGroupMsgNotice::set_gcgt(const char* value, size_t size) {
  
  gcgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImGroupMsgNotice.gcgt)
}
inline ::std::string* XmsgImGroupMsgNotice::mutable_gcgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImGroupMsgNotice.gcgt)
  return gcgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImGroupMsgNotice::release_gcgt() {
  // @@protoc_insertion_point(field_release:XmsgImGroupMsgNotice.gcgt)
  
  return gcgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImGroupMsgNotice::set_allocated_gcgt(::std::string* gcgt) {
  if (gcgt != NULL) {
    
  } else {
    
  }
  gcgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gcgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgImGroupMsgNotice.gcgt)
}

// string scgt = 2;
inline void XmsgImGroupMsgNotice::clear_scgt() {
  scgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImGroupMsgNotice::scgt() const {
  // @@protoc_insertion_point(field_get:XmsgImGroupMsgNotice.scgt)
  return scgt_.GetNoArena();
}
inline void XmsgImGroupMsgNotice::set_scgt(const ::std::string& value) {
  
  scgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImGroupMsgNotice.scgt)
}
#if LANG_CXX11
inline void XmsgImGroupMsgNotice::set_scgt(::std::string&& value) {
  
  scgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImGroupMsgNotice.scgt)
}
#endif
inline void XmsgImGroupMsgNotice::set_scgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  scgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImGroupMsgNotice.scgt)
}
inline void XmsgImGroupMsgNotice::set_scgt(const char* value, size_t size) {
  
  scgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImGroupMsgNotice.scgt)
}
inline ::std::string* XmsgImGroupMsgNotice::mutable_scgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImGroupMsgNotice.scgt)
  return scgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImGroupMsgNotice::release_scgt() {
  // @@protoc_insertion_point(field_release:XmsgImGroupMsgNotice.scgt)
  
  return scgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImGroupMsgNotice::set_allocated_scgt(::std::string* scgt) {
  if (scgt != NULL) {
    
  } else {
    
  }
  scgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), scgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgImGroupMsgNotice.scgt)
}

// uint64 msgId = 3;
inline void XmsgImGroupMsgNotice::clear_msgid() {
  msgid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImGroupMsgNotice::msgid() const {
  // @@protoc_insertion_point(field_get:XmsgImGroupMsgNotice.msgId)
  return msgid_;
}
inline void XmsgImGroupMsgNotice::set_msgid(::google::protobuf::uint64 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:XmsgImGroupMsgNotice.msgId)
}

// .XmsgImMsg msg = 4;
inline bool XmsgImGroupMsgNotice::has_msg() const {
  return this != internal_default_instance() && msg_ != NULL;
}
inline void XmsgImGroupMsgNotice::clear_msg() {
  if (GetArenaNoVirtual() == NULL && msg_ != NULL) {
    delete msg_;
  }
  msg_ = NULL;
}
inline const ::XmsgImMsg& XmsgImGroupMsgNotice::msg() const {
  const ::XmsgImMsg* p = msg_;
  // @@protoc_insertion_point(field_get:XmsgImGroupMsgNotice.msg)
  return p != NULL ? *p : *reinterpret_cast<const ::XmsgImMsg*>(
      &::_XmsgImMsg_default_instance_);
}
inline ::XmsgImMsg* XmsgImGroupMsgNotice::release_msg() {
  // @@protoc_insertion_point(field_release:XmsgImGroupMsgNotice.msg)
  
  ::XmsgImMsg* temp = msg_;
  msg_ = NULL;
  return temp;
}
inline ::XmsgImMsg* XmsgImGroupMsgNotice::mutable_msg() {
  
  if (msg_ == NULL) {
    msg_ = new ::XmsgImMsg;
  }
  // @@protoc_insertion_point(field_mutable:XmsgImGroupMsgNotice.msg)
  return msg_;
}
inline void XmsgImGroupMsgNotice::set_allocated_msg(::XmsgImMsg* msg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete msg_;
  }
  if (msg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      msg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, msg, submessage_arena);
    }
    
  } else {
    
  }
  msg_ = msg;
  // @@protoc_insertion_point(field_set_allocated:XmsgImGroupMsgNotice.msg)
}

// uint64 gts = 5;
inline void XmsgImGroupMsgNotice::clear_gts() {
  gts_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImGroupMsgNotice::gts() const {
  // @@protoc_insertion_point(field_get:XmsgImGroupMsgNotice.gts)
  return gts_;
}
inline void XmsgImGroupMsgNotice::set_gts(::google::protobuf::uint64 value) {
  
  gts_ = value;
  // @@protoc_insertion_point(field_set:XmsgImGroupMsgNotice.gts)
}

// map<string, string> ext = 6;
inline int XmsgImGroupMsgNotice::ext_size() const {
  return ext_.size();
}
inline void XmsgImGroupMsgNotice::clear_ext() {
  ext_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgImGroupMsgNotice::ext() const {
  // @@protoc_insertion_point(field_map:XmsgImGroupMsgNotice.ext)
  return ext_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgImGroupMsgNotice::mutable_ext() {
  // @@protoc_insertion_point(field_mutable_map:XmsgImGroupMsgNotice.ext)
  return ext_.MutableMap();
}

// -------------------------------------------------------------------

// XmsgImGroupMsgSyncReq

// string cgt = 1;
inline void XmsgImGroupMsgSyncReq::clear_cgt() {
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImGroupMsgSyncReq::cgt() const {
  // @@protoc_insertion_point(field_get:XmsgImGroupMsgSyncReq.cgt)
  return cgt_.GetNoArena();
}
inline void XmsgImGroupMsgSyncReq::set_cgt(const ::std::string& value) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImGroupMsgSyncReq.cgt)
}
#if LANG_CXX11
inline void XmsgImGroupMsgSyncReq::set_cgt(::std::string&& value) {
  
  cgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImGroupMsgSyncReq.cgt)
}
#endif
inline void XmsgImGroupMsgSyncReq::set_cgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImGroupMsgSyncReq.cgt)
}
inline void XmsgImGroupMsgSyncReq::set_cgt(const char* value, size_t size) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImGroupMsgSyncReq.cgt)
}
inline ::std::string* XmsgImGroupMsgSyncReq::mutable_cgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImGroupMsgSyncReq.cgt)
  return cgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImGroupMsgSyncReq::release_cgt() {
  // @@protoc_insertion_point(field_release:XmsgImGroupMsgSyncReq.cgt)
  
  return cgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImGroupMsgSyncReq::set_allocated_cgt(::std::string* cgt) {
  if (cgt != NULL) {
    
  } else {
    
  }
  cgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgImGroupMsgSyncReq.cgt)
}

// uint64 msgId = 2;
inline void XmsgImGroupMsgSyncReq::clear_msgid() {
  msgid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImGroupMsgSyncReq::msgid() const {
  // @@protoc_insertion_point(field_get:XmsgImGroupMsgSyncReq.msgId)
  return msgid_;
}
inline void XmsgImGroupMsgSyncReq::set_msgid(::google::protobuf::uint64 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:XmsgImGroupMsgSyncReq.msgId)
}

// uint32 latest = 3;
inline void XmsgImGroupMsgSyncReq::clear_latest() {
  latest_ = 0u;
}
inline ::google::protobuf::uint32 XmsgImGroupMsgSyncReq::latest() const {
  // @@protoc_insertion_point(field_get:XmsgImGroupMsgSyncReq.latest)
  return latest_;
}
inline void XmsgImGroupMsgSyncReq::set_latest(::google::protobuf::uint32 value) {
  
  latest_ = value;
  // @@protoc_insertion_point(field_set:XmsgImGroupMsgSyncReq.latest)
}

// -------------------------------------------------------------------

// XmsgImGroupMsgSyncRsp

// repeated .XmsgImGroupMsgHistory msg = 1;
inline int XmsgImGroupMsgSyncRsp::msg_size() const {
  return msg_.size();
}
inline void XmsgImGroupMsgSyncRsp::clear_msg() {
  msg_.Clear();
}
inline const ::XmsgImGroupMsgHistory& XmsgImGroupMsgSyncRsp::msg(int index) const {
  // @@protoc_insertion_point(field_get:XmsgImGroupMsgSyncRsp.msg)
  return msg_.Get(index);
}
inline ::XmsgImGroupMsgHistory* XmsgImGroupMsgSyncRsp::mutable_msg(int index) {
  // @@protoc_insertion_point(field_mutable:XmsgImGroupMsgSyncRsp.msg)
  return msg_.Mutable(index);
}
inline ::XmsgImGroupMsgHistory* XmsgImGroupMsgSyncRsp::add_msg() {
  // @@protoc_insertion_point(field_add:XmsgImGroupMsgSyncRsp.msg)
  return msg_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::XmsgImGroupMsgHistory >*
XmsgImGroupMsgSyncRsp::mutable_msg() {
  // @@protoc_insertion_point(field_mutable_list:XmsgImGroupMsgSyncRsp.msg)
  return &msg_;
}
inline const ::google::protobuf::RepeatedPtrField< ::XmsgImGroupMsgHistory >&
XmsgImGroupMsgSyncRsp::msg() const {
  // @@protoc_insertion_point(field_list:XmsgImGroupMsgSyncRsp.msg)
  return msg_;
}

// -------------------------------------------------------------------

// XmsgImGroupMsgHistory

// string scgt = 1;
inline void XmsgImGroupMsgHistory::clear_scgt() {
  scgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImGroupMsgHistory::scgt() const {
  // @@protoc_insertion_point(field_get:XmsgImGroupMsgHistory.scgt)
  return scgt_.GetNoArena();
}
inline void XmsgImGroupMsgHistory::set_scgt(const ::std::string& value) {
  
  scgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImGroupMsgHistory.scgt)
}
#if LANG_CXX11
inline void XmsgImGroupMsgHistory::set_scgt(::std::string&& value) {
  
  scgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImGroupMsgHistory.scgt)
}
#endif
inline void XmsgImGroupMsgHistory::set_scgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  scgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImGroupMsgHistory.scgt)
}
inline void XmsgImGroupMsgHistory::set_scgt(const char* value, size_t size) {
  
  scgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImGroupMsgHistory.scgt)
}
inline ::std::string* XmsgImGroupMsgHistory::mutable_scgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImGroupMsgHistory.scgt)
  return scgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImGroupMsgHistory::release_scgt() {
  // @@protoc_insertion_point(field_release:XmsgImGroupMsgHistory.scgt)
  
  return scgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImGroupMsgHistory::set_allocated_scgt(::std::string* scgt) {
  if (scgt != NULL) {
    
  } else {
    
  }
  scgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), scgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgImGroupMsgHistory.scgt)
}

// uint64 msgId = 2;
inline void XmsgImGroupMsgHistory::clear_msgid() {
  msgid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImGroupMsgHistory::msgid() const {
  // @@protoc_insertion_point(field_get:XmsgImGroupMsgHistory.msgId)
  return msgid_;
}
inline void XmsgImGroupMsgHistory::set_msgid(::google::protobuf::uint64 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:XmsgImGroupMsgHistory.msgId)
}

// .XmsgImMsg msg = 3;
inline bool XmsgImGroupMsgHistory::has_msg() const {
  return this != internal_default_instance() && msg_ != NULL;
}
inline void XmsgImGroupMsgHistory::clear_msg() {
  if (GetArenaNoVirtual() == NULL && msg_ != NULL) {
    delete msg_;
  }
  msg_ = NULL;
}
inline const ::XmsgImMsg& XmsgImGroupMsgHistory::msg() const {
  const ::XmsgImMsg* p = msg_;
  // @@protoc_insertion_point(field_get:XmsgImGroupMsgHistory.msg)
  return p != NULL ? *p : *reinterpret_cast<const ::XmsgImMsg*>(
      &::_XmsgImMsg_default_instance_);
}
inline ::XmsgImMsg* XmsgImGroupMsgHistory::release_msg() {
  // @@protoc_insertion_point(field_release:XmsgImGroupMsgHistory.msg)
  
  ::XmsgImMsg* temp = msg_;
  msg_ = NULL;
  return temp;
}
inline ::XmsgImMsg* XmsgImGroupMsgHistory::mutable_msg() {
  
  if (msg_ == NULL) {
    msg_ = new ::XmsgImMsg;
  }
  // @@protoc_insertion_point(field_mutable:XmsgImGroupMsgHistory.msg)
  return msg_;
}
inline void XmsgImGroupMsgHistory::set_allocated_msg(::XmsgImMsg* msg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete msg_;
  }
  if (msg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      msg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, msg, submessage_arena);
    }
    
  } else {
    
  }
  msg_ = msg;
  // @@protoc_insertion_point(field_set_allocated:XmsgImGroupMsgHistory.msg)
}

// uint64 gts = 4;
inline void XmsgImGroupMsgHistory::clear_gts() {
  gts_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImGroupMsgHistory::gts() const {
  // @@protoc_insertion_point(field_get:XmsgImGroupMsgHistory.gts)
  return gts_;
}
inline void XmsgImGroupMsgHistory::set_gts(::google::protobuf::uint64 value) {
  
  gts_ = value;
  // @@protoc_insertion_point(field_set:XmsgImGroupMsgHistory.gts)
}

// bool isRead = 5;
inline void XmsgImGroupMsgHistory::clear_isread() {
  isread_ = false;
}
inline bool XmsgImGroupMsgHistory::isread() const {
  // @@protoc_insertion_point(field_get:XmsgImGroupMsgHistory.isRead)
  return isread_;
}
inline void XmsgImGroupMsgHistory::set_isread(bool value) {
  
  isread_ = value;
  // @@protoc_insertion_point(field_set:XmsgImGroupMsgHistory.isRead)
}

// -------------------------------------------------------------------

// XmsgImGroupMsgQueryReq

// string cgt = 1;
inline void XmsgImGroupMsgQueryReq::clear_cgt() {
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImGroupMsgQueryReq::cgt() const {
  // @@protoc_insertion_point(field_get:XmsgImGroupMsgQueryReq.cgt)
  return cgt_.GetNoArena();
}
inline void XmsgImGroupMsgQueryReq::set_cgt(const ::std::string& value) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImGroupMsgQueryReq.cgt)
}
#if LANG_CXX11
inline void XmsgImGroupMsgQueryReq::set_cgt(::std::string&& value) {
  
  cgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImGroupMsgQueryReq.cgt)
}
#endif
inline void XmsgImGroupMsgQueryReq::set_cgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImGroupMsgQueryReq.cgt)
}
inline void XmsgImGroupMsgQueryReq::set_cgt(const char* value, size_t size) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImGroupMsgQueryReq.cgt)
}
inline ::std::string* XmsgImGroupMsgQueryReq::mutable_cgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImGroupMsgQueryReq.cgt)
  return cgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImGroupMsgQueryReq::release_cgt() {
  // @@protoc_insertion_point(field_release:XmsgImGroupMsgQueryReq.cgt)
  
  return cgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImGroupMsgQueryReq::set_allocated_cgt(::std::string* cgt) {
  if (cgt != NULL) {
    
  } else {
    
  }
  cgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgImGroupMsgQueryReq.cgt)
}

// uint64 msgId = 2;
inline void XmsgImGroupMsgQueryReq::clear_msgid() {
  msgid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImGroupMsgQueryReq::msgid() const {
  // @@protoc_insertion_point(field_get:XmsgImGroupMsgQueryReq.msgId)
  return msgid_;
}
inline void XmsgImGroupMsgQueryReq::set_msgid(::google::protobuf::uint64 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:XmsgImGroupMsgQueryReq.msgId)
}

// bool before = 3;
inline void XmsgImGroupMsgQueryReq::clear_before() {
  before_ = false;
}
inline bool XmsgImGroupMsgQueryReq::before() const {
  // @@protoc_insertion_point(field_get:XmsgImGroupMsgQueryReq.before)
  return before_;
}
inline void XmsgImGroupMsgQueryReq::set_before(bool value) {
  
  before_ = value;
  // @@protoc_insertion_point(field_set:XmsgImGroupMsgQueryReq.before)
}

// uint32 pageSize = 4;
inline void XmsgImGroupMsgQueryReq::clear_pagesize() {
  pagesize_ = 0u;
}
inline ::google::protobuf::uint32 XmsgImGroupMsgQueryReq::pagesize() const {
  // @@protoc_insertion_point(field_get:XmsgImGroupMsgQueryReq.pageSize)
  return pagesize_;
}
inline void XmsgImGroupMsgQueryReq::set_pagesize(::google::protobuf::uint32 value) {
  
  pagesize_ = value;
  // @@protoc_insertion_point(field_set:XmsgImGroupMsgQueryReq.pageSize)
}

// -------------------------------------------------------------------

// XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem

// string scgt = 1;
inline void XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem::clear_scgt() {
  scgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem::scgt() const {
  // @@protoc_insertion_point(field_get:XmsgImGroupMsgQueryRsp.XmsgImGroupMsgQueryRspItem.scgt)
  return scgt_.GetNoArena();
}
inline void XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem::set_scgt(const ::std::string& value) {
  
  scgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImGroupMsgQueryRsp.XmsgImGroupMsgQueryRspItem.scgt)
}
#if LANG_CXX11
inline void XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem::set_scgt(::std::string&& value) {
  
  scgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImGroupMsgQueryRsp.XmsgImGroupMsgQueryRspItem.scgt)
}
#endif
inline void XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem::set_scgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  scgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImGroupMsgQueryRsp.XmsgImGroupMsgQueryRspItem.scgt)
}
inline void XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem::set_scgt(const char* value, size_t size) {
  
  scgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImGroupMsgQueryRsp.XmsgImGroupMsgQueryRspItem.scgt)
}
inline ::std::string* XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem::mutable_scgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImGroupMsgQueryRsp.XmsgImGroupMsgQueryRspItem.scgt)
  return scgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem::release_scgt() {
  // @@protoc_insertion_point(field_release:XmsgImGroupMsgQueryRsp.XmsgImGroupMsgQueryRspItem.scgt)
  
  return scgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem::set_allocated_scgt(::std::string* scgt) {
  if (scgt != NULL) {
    
  } else {
    
  }
  scgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), scgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgImGroupMsgQueryRsp.XmsgImGroupMsgQueryRspItem.scgt)
}

// uint64 msgId = 2;
inline void XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem::clear_msgid() {
  msgid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem::msgid() const {
  // @@protoc_insertion_point(field_get:XmsgImGroupMsgQueryRsp.XmsgImGroupMsgQueryRspItem.msgId)
  return msgid_;
}
inline void XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem::set_msgid(::google::protobuf::uint64 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:XmsgImGroupMsgQueryRsp.XmsgImGroupMsgQueryRspItem.msgId)
}

// .XmsgImMsg msg = 3;
inline bool XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem::has_msg() const {
  return this != internal_default_instance() && msg_ != NULL;
}
inline void XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem::clear_msg() {
  if (GetArenaNoVirtual() == NULL && msg_ != NULL) {
    delete msg_;
  }
  msg_ = NULL;
}
inline const ::XmsgImMsg& XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem::msg() const {
  const ::XmsgImMsg* p = msg_;
  // @@protoc_insertion_point(field_get:XmsgImGroupMsgQueryRsp.XmsgImGroupMsgQueryRspItem.msg)
  return p != NULL ? *p : *reinterpret_cast<const ::XmsgImMsg*>(
      &::_XmsgImMsg_default_instance_);
}
inline ::XmsgImMsg* XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem::release_msg() {
  // @@protoc_insertion_point(field_release:XmsgImGroupMsgQueryRsp.XmsgImGroupMsgQueryRspItem.msg)
  
  ::XmsgImMsg* temp = msg_;
  msg_ = NULL;
  return temp;
}
inline ::XmsgImMsg* XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem::mutable_msg() {
  
  if (msg_ == NULL) {
    msg_ = new ::XmsgImMsg;
  }
  // @@protoc_insertion_point(field_mutable:XmsgImGroupMsgQueryRsp.XmsgImGroupMsgQueryRspItem.msg)
  return msg_;
}
inline void XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem::set_allocated_msg(::XmsgImMsg* msg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete msg_;
  }
  if (msg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      msg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, msg, submessage_arena);
    }
    
  } else {
    
  }
  msg_ = msg;
  // @@protoc_insertion_point(field_set_allocated:XmsgImGroupMsgQueryRsp.XmsgImGroupMsgQueryRspItem.msg)
}

// uint64 gts = 4;
inline void XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem::clear_gts() {
  gts_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem::gts() const {
  // @@protoc_insertion_point(field_get:XmsgImGroupMsgQueryRsp.XmsgImGroupMsgQueryRspItem.gts)
  return gts_;
}
inline void XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem::set_gts(::google::protobuf::uint64 value) {
  
  gts_ = value;
  // @@protoc_insertion_point(field_set:XmsgImGroupMsgQueryRsp.XmsgImGroupMsgQueryRspItem.gts)
}

// -------------------------------------------------------------------

// XmsgImGroupMsgQueryRsp

// repeated .XmsgImGroupMsgQueryRsp.XmsgImGroupMsgQueryRspItem msg = 1;
inline int XmsgImGroupMsgQueryRsp::msg_size() const {
  return msg_.size();
}
inline void XmsgImGroupMsgQueryRsp::clear_msg() {
  msg_.Clear();
}
inline const ::XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem& XmsgImGroupMsgQueryRsp::msg(int index) const {
  // @@protoc_insertion_point(field_get:XmsgImGroupMsgQueryRsp.msg)
  return msg_.Get(index);
}
inline ::XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem* XmsgImGroupMsgQueryRsp::mutable_msg(int index) {
  // @@protoc_insertion_point(field_mutable:XmsgImGroupMsgQueryRsp.msg)
  return msg_.Mutable(index);
}
inline ::XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem* XmsgImGroupMsgQueryRsp::add_msg() {
  // @@protoc_insertion_point(field_add:XmsgImGroupMsgQueryRsp.msg)
  return msg_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem >*
XmsgImGroupMsgQueryRsp::mutable_msg() {
  // @@protoc_insertion_point(field_mutable_list:XmsgImGroupMsgQueryRsp.msg)
  return &msg_;
}
inline const ::google::protobuf::RepeatedPtrField< ::XmsgImGroupMsgQueryRsp_XmsgImGroupMsgQueryRspItem >&
XmsgImGroupMsgQueryRsp::msg() const {
  // @@protoc_insertion_point(field_list:XmsgImGroupMsgQueryRsp.msg)
  return msg_;
}

// -------------------------------------------------------------------

// XmsgImGroupMsgReadReq

// string cgt = 1;
inline void XmsgImGroupMsgReadReq::clear_cgt() {
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImGroupMsgReadReq::cgt() const {
  // @@protoc_insertion_point(field_get:XmsgImGroupMsgReadReq.cgt)
  return cgt_.GetNoArena();
}
inline void XmsgImGroupMsgReadReq::set_cgt(const ::std::string& value) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImGroupMsgReadReq.cgt)
}
#if LANG_CXX11
inline void XmsgImGroupMsgReadReq::set_cgt(::std::string&& value) {
  
  cgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImGroupMsgReadReq.cgt)
}
#endif
inline void XmsgImGroupMsgReadReq::set_cgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImGroupMsgReadReq.cgt)
}
inline void XmsgImGroupMsgReadReq::set_cgt(const char* value, size_t size) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImGroupMsgReadReq.cgt)
}
inline ::std::string* XmsgImGroupMsgReadReq::mutable_cgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImGroupMsgReadReq.cgt)
  return cgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImGroupMsgReadReq::release_cgt() {
  // @@protoc_insertion_point(field_release:XmsgImGroupMsgReadReq.cgt)
  
  return cgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImGroupMsgReadReq::set_allocated_cgt(::std::string* cgt) {
  if (cgt != NULL) {
    
  } else {
    
  }
  cgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgImGroupMsgReadReq.cgt)
}

// uint64 msgId = 2;
inline void XmsgImGroupMsgReadReq::clear_msgid() {
  msgid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImGroupMsgReadReq::msgid() const {
  // @@protoc_insertion_point(field_get:XmsgImGroupMsgReadReq.msgId)
  return msgid_;
}
inline void XmsgImGroupMsgReadReq::set_msgid(::google::protobuf::uint64 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:XmsgImGroupMsgReadReq.msgId)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// XmsgImGroupMsgReadRsp

// map<string, string> ext = 1;
inline int XmsgImGroupMsgReadRsp::ext_size() const {
  return ext_.size();
}
inline void XmsgImGroupMsgReadRsp::clear_ext() {
  ext_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgImGroupMsgReadRsp::ext() const {
  // @@protoc_insertion_point(field_map:XmsgImGroupMsgReadRsp.ext)
  return ext_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgImGroupMsgReadRsp::mutable_ext() {
  // @@protoc_insertion_point(field_mutable_map:XmsgImGroupMsgReadRsp.ext)
  return ext_.MutableMap();
}

// -------------------------------------------------------------------

// XmsgImGroupMsgReadNotice

// string cgt = 1;
inline void XmsgImGroupMsgReadNotice::clear_cgt() {
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImGroupMsgReadNotice::cgt() const {
  // @@protoc_insertion_point(field_get:XmsgImGroupMsgReadNotice.cgt)
  return cgt_.GetNoArena();
}
inline void XmsgImGroupMsgReadNotice::set_cgt(const ::std::string& value) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImGroupMsgReadNotice.cgt)
}
#if LANG_CXX11
inline void XmsgImGroupMsgReadNotice::set_cgt(::std::string&& value) {
  
  cgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImGroupMsgReadNotice.cgt)
}
#endif
inline void XmsgImGroupMsgReadNotice::set_cgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImGroupMsgReadNotice.cgt)
}
inline void XmsgImGroupMsgReadNotice::set_cgt(const char* value, size_t size) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImGroupMsgReadNotice.cgt)
}
inline ::std::string* XmsgImGroupMsgReadNotice::mutable_cgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImGroupMsgReadNotice.cgt)
  return cgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImGroupMsgReadNotice::release_cgt() {
  // @@protoc_insertion_point(field_release:XmsgImGroupMsgReadNotice.cgt)
  
  return cgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImGroupMsgReadNotice::set_allocated_cgt(::std::string* cgt) {
  if (cgt != NULL) {
    
  } else {
    
  }
  cgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgImGroupMsgReadNotice.cgt)
}

// uint64 msgId = 2;
inline void XmsgImGroupMsgReadNotice::clear_msgid() {
  msgid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImGroupMsgReadNotice::msgid() const {
  // @@protoc_insertion_point(field_get:XmsgImGroupMsgReadNotice.msgId)
  return msgid_;
}
inline void XmsgImGroupMsgReadNotice::set_msgid(::google::protobuf::uint64 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:XmsgImGroupMsgReadNotice.msgId)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2dx_2dmsg_2dim_2dgroup_2dmsg_2eproto__INCLUDED

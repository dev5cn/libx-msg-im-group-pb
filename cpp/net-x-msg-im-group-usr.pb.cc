// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net-x-msg-im-group-usr.proto

#include "net-x-msg-im-group-usr.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class XmsgImGroupUsrGroupQueryReq_ExtEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupUsrGroupQueryReq_ExtEntry_DoNotUse>
      _instance;
} _XmsgImGroupUsrGroupQueryReq_ExtEntry_DoNotUse_default_instance_;
class XmsgImGroupUsrGroupQueryReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupUsrGroupQueryReq>
      _instance;
} _XmsgImGroupUsrGroupQueryReq_default_instance_;
class XmsgImGroupUsrGroupQueryRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupUsrGroupQueryRsp>
      _instance;
} _XmsgImGroupUsrGroupQueryRsp_default_instance_;
class XmsgImGroupUsrGroupInfo_InfoEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupUsrGroupInfo_InfoEntry_DoNotUse>
      _instance;
} _XmsgImGroupUsrGroupInfo_InfoEntry_DoNotUse_default_instance_;
class XmsgImGroupUsrGroupInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupUsrGroupInfo>
      _instance;
} _XmsgImGroupUsrGroupInfo_default_instance_;
class XmsgImGroupCreateReq_InfoEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupCreateReq_InfoEntry_DoNotUse>
      _instance;
} _XmsgImGroupCreateReq_InfoEntry_DoNotUse_default_instance_;
class XmsgImGroupCreateReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupCreateReq>
      _instance;
} _XmsgImGroupCreateReq_default_instance_;
class XmsgImGroupCreateRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupCreateRsp>
      _instance;
} _XmsgImGroupCreateRsp_default_instance_;
class XmsgImGroupAddMember_InfoEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupAddMember_InfoEntry_DoNotUse>
      _instance;
} _XmsgImGroupAddMember_InfoEntry_DoNotUse_default_instance_;
class XmsgImGroupAddMemberDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupAddMember>
      _instance;
} _XmsgImGroupAddMember_default_instance_;
class XmsgImGroupSyncReq_ExtEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupSyncReq_ExtEntry_DoNotUse>
      _instance;
} _XmsgImGroupSyncReq_ExtEntry_DoNotUse_default_instance_;
class XmsgImGroupSyncReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupSyncReq>
      _instance;
} _XmsgImGroupSyncReq_default_instance_;
class XmsgImGroupSyncRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupSyncRsp>
      _instance;
} _XmsgImGroupSyncRsp_default_instance_;
class XmsgImGroupSyncEvent_InfoEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupSyncEvent_InfoEntry_DoNotUse>
      _instance;
} _XmsgImGroupSyncEvent_InfoEntry_DoNotUse_default_instance_;
class XmsgImGroupSyncEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupSyncEvent>
      _instance;
} _XmsgImGroupSyncEvent_default_instance_;
class XmsgImGroupSyncNoticeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupSyncNotice>
      _instance;
} _XmsgImGroupSyncNotice_default_instance_;
class XmsgImGroupSyncGroupReq_ExtEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupSyncGroupReq_ExtEntry_DoNotUse>
      _instance;
} _XmsgImGroupSyncGroupReq_ExtEntry_DoNotUse_default_instance_;
class XmsgImGroupSyncGroupReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupSyncGroupReq>
      _instance;
} _XmsgImGroupSyncGroupReq_default_instance_;
class XmsgImGroupSyncGroupRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupSyncGroupRsp>
      _instance;
} _XmsgImGroupSyncGroupRsp_default_instance_;
class XmsgImGroupSyncGroupEventInfo_InfoEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupSyncGroupEventInfo_InfoEntry_DoNotUse>
      _instance;
} _XmsgImGroupSyncGroupEventInfo_InfoEntry_DoNotUse_default_instance_;
class XmsgImGroupSyncGroupEventInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupSyncGroupEventInfo>
      _instance;
} _XmsgImGroupSyncGroupEventInfo_default_instance_;
class XmsgImGroupSyncGroupEventMember_InfoEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupSyncGroupEventMember_InfoEntry_DoNotUse>
      _instance;
} _XmsgImGroupSyncGroupEventMember_InfoEntry_DoNotUse_default_instance_;
class XmsgImGroupSyncGroupEventMemberDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupSyncGroupEventMember>
      _instance;
} _XmsgImGroupSyncGroupEventMember_default_instance_;
class XmsgImGroupEventNoticeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupEventNotice>
      _instance;
} _XmsgImGroupEventNotice_default_instance_;
class XmsgImGroupInfoQueryReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupInfoQueryReq>
      _instance;
} _XmsgImGroupInfoQueryReq_default_instance_;
class XmsgImGroupInfoQueryRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupInfoQueryRsp>
      _instance;
} _XmsgImGroupInfoQueryRsp_default_instance_;
class XmsgImGroupInfoSelfInfo_InfoEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupInfoSelfInfo_InfoEntry_DoNotUse>
      _instance;
} _XmsgImGroupInfoSelfInfo_InfoEntry_DoNotUse_default_instance_;
class XmsgImGroupInfoSelfInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupInfoSelfInfo>
      _instance;
} _XmsgImGroupInfoSelfInfo_default_instance_;
class XmsgImGroupInfoMember_InfoEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupInfoMember_InfoEntry_DoNotUse>
      _instance;
} _XmsgImGroupInfoMember_InfoEntry_DoNotUse_default_instance_;
class XmsgImGroupInfoMemberDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupInfoMember>
      _instance;
} _XmsgImGroupInfoMember_default_instance_;
class XmsgImGroupInfoUpdateReq_UpsertEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupInfoUpdateReq_UpsertEntry_DoNotUse>
      _instance;
} _XmsgImGroupInfoUpdateReq_UpsertEntry_DoNotUse_default_instance_;
class XmsgImGroupInfoUpdateReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupInfoUpdateReq>
      _instance;
} _XmsgImGroupInfoUpdateReq_default_instance_;
class XmsgImGroupInfoUpdateRsp_ExtEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupInfoUpdateRsp_ExtEntry_DoNotUse>
      _instance;
} _XmsgImGroupInfoUpdateRsp_ExtEntry_DoNotUse_default_instance_;
class XmsgImGroupInfoUpdateRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupInfoUpdateRsp>
      _instance;
} _XmsgImGroupInfoUpdateRsp_default_instance_;
class XmsgImGroupMsgRecvCfgReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupMsgRecvCfgReq>
      _instance;
} _XmsgImGroupMsgRecvCfgReq_default_instance_;
class XmsgImGroupMsgRecvCfgRsp_ExtEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupMsgRecvCfgRsp_ExtEntry_DoNotUse>
      _instance;
} _XmsgImGroupMsgRecvCfgRsp_ExtEntry_DoNotUse_default_instance_;
class XmsgImGroupMsgRecvCfgRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupMsgRecvCfgRsp>
      _instance;
} _XmsgImGroupMsgRecvCfgRsp_default_instance_;
namespace protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto {
void InitDefaultsXmsgImGroupUsrGroupQueryReq_ExtEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImGroupUsrGroupQueryReq_ExtEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImGroupUsrGroupQueryReq_ExtEntry_DoNotUse();
  }
  ::XmsgImGroupUsrGroupQueryReq_ExtEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupUsrGroupQueryReq_ExtEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupUsrGroupQueryReq_ExtEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImGroupUsrGroupQueryReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupUsrGroupQueryReq_ExtEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImGroupUsrGroupQueryReq_default_instance_;
    new (ptr) ::XmsgImGroupUsrGroupQueryReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImGroupUsrGroupQueryReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupUsrGroupQueryReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupUsrGroupQueryReqImpl);
}

void InitDefaultsXmsgImGroupUsrGroupQueryRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupUsrGroupInfo();
  {
    void* ptr = &::_XmsgImGroupUsrGroupQueryRsp_default_instance_;
    new (ptr) ::XmsgImGroupUsrGroupQueryRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImGroupUsrGroupQueryRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupUsrGroupQueryRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupUsrGroupQueryRspImpl);
}

void InitDefaultsXmsgImGroupUsrGroupInfo_InfoEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImGroupUsrGroupInfo_InfoEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImGroupUsrGroupInfo_InfoEntry_DoNotUse();
  }
  ::XmsgImGroupUsrGroupInfo_InfoEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupUsrGroupInfo_InfoEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupUsrGroupInfo_InfoEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImGroupUsrGroupInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupUsrGroupInfo_InfoEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImGroupUsrGroupInfo_default_instance_;
    new (ptr) ::XmsgImGroupUsrGroupInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImGroupUsrGroupInfo::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupUsrGroupInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupUsrGroupInfoImpl);
}

void InitDefaultsXmsgImGroupCreateReq_InfoEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImGroupCreateReq_InfoEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImGroupCreateReq_InfoEntry_DoNotUse();
  }
  ::XmsgImGroupCreateReq_InfoEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupCreateReq_InfoEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupCreateReq_InfoEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImGroupCreateReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupCreateReq_InfoEntry_DoNotUse();
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupAddMember();
  {
    void* ptr = &::_XmsgImGroupCreateReq_default_instance_;
    new (ptr) ::XmsgImGroupCreateReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImGroupCreateReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupCreateReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupCreateReqImpl);
}

void InitDefaultsXmsgImGroupCreateRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImGroupCreateRsp_default_instance_;
    new (ptr) ::XmsgImGroupCreateRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImGroupCreateRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupCreateRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupCreateRspImpl);
}

void InitDefaultsXmsgImGroupAddMember_InfoEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImGroupAddMember_InfoEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImGroupAddMember_InfoEntry_DoNotUse();
  }
  ::XmsgImGroupAddMember_InfoEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupAddMember_InfoEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupAddMember_InfoEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImGroupAddMemberImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupAddMember_InfoEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImGroupAddMember_default_instance_;
    new (ptr) ::XmsgImGroupAddMember();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImGroupAddMember::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupAddMember() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupAddMemberImpl);
}

void InitDefaultsXmsgImGroupSyncReq_ExtEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImGroupSyncReq_ExtEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImGroupSyncReq_ExtEntry_DoNotUse();
  }
  ::XmsgImGroupSyncReq_ExtEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupSyncReq_ExtEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupSyncReq_ExtEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImGroupSyncReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupSyncReq_ExtEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImGroupSyncReq_default_instance_;
    new (ptr) ::XmsgImGroupSyncReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImGroupSyncReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupSyncReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupSyncReqImpl);
}

void InitDefaultsXmsgImGroupSyncRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupSyncEvent();
  {
    void* ptr = &::_XmsgImGroupSyncRsp_default_instance_;
    new (ptr) ::XmsgImGroupSyncRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImGroupSyncRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupSyncRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupSyncRspImpl);
}

void InitDefaultsXmsgImGroupSyncEvent_InfoEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImGroupSyncEvent_InfoEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImGroupSyncEvent_InfoEntry_DoNotUse();
  }
  ::XmsgImGroupSyncEvent_InfoEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupSyncEvent_InfoEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupSyncEvent_InfoEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImGroupSyncEventImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupSyncEvent_InfoEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImGroupSyncEvent_default_instance_;
    new (ptr) ::XmsgImGroupSyncEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImGroupSyncEvent::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupSyncEvent() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupSyncEventImpl);
}

void InitDefaultsXmsgImGroupSyncNoticeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupSyncEvent();
  {
    void* ptr = &::_XmsgImGroupSyncNotice_default_instance_;
    new (ptr) ::XmsgImGroupSyncNotice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImGroupSyncNotice::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupSyncNotice() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupSyncNoticeImpl);
}

void InitDefaultsXmsgImGroupSyncGroupReq_ExtEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImGroupSyncGroupReq_ExtEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImGroupSyncGroupReq_ExtEntry_DoNotUse();
  }
  ::XmsgImGroupSyncGroupReq_ExtEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupSyncGroupReq_ExtEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupSyncGroupReq_ExtEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImGroupSyncGroupReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupSyncGroupReq_ExtEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImGroupSyncGroupReq_default_instance_;
    new (ptr) ::XmsgImGroupSyncGroupReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImGroupSyncGroupReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupSyncGroupReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupSyncGroupReqImpl);
}

void InitDefaultsXmsgImGroupSyncGroupRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupSyncGroupEventInfo();
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupSyncGroupEventMember();
  {
    void* ptr = &::_XmsgImGroupSyncGroupRsp_default_instance_;
    new (ptr) ::XmsgImGroupSyncGroupRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImGroupSyncGroupRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupSyncGroupRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupSyncGroupRspImpl);
}

void InitDefaultsXmsgImGroupSyncGroupEventInfo_InfoEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImGroupSyncGroupEventInfo_InfoEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImGroupSyncGroupEventInfo_InfoEntry_DoNotUse();
  }
  ::XmsgImGroupSyncGroupEventInfo_InfoEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupSyncGroupEventInfo_InfoEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupSyncGroupEventInfo_InfoEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImGroupSyncGroupEventInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupSyncGroupEventInfo_InfoEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImGroupSyncGroupEventInfo_default_instance_;
    new (ptr) ::XmsgImGroupSyncGroupEventInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImGroupSyncGroupEventInfo::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupSyncGroupEventInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupSyncGroupEventInfoImpl);
}

void InitDefaultsXmsgImGroupSyncGroupEventMember_InfoEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImGroupSyncGroupEventMember_InfoEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImGroupSyncGroupEventMember_InfoEntry_DoNotUse();
  }
  ::XmsgImGroupSyncGroupEventMember_InfoEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupSyncGroupEventMember_InfoEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupSyncGroupEventMember_InfoEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImGroupSyncGroupEventMemberImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupSyncGroupEventMember_InfoEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImGroupSyncGroupEventMember_default_instance_;
    new (ptr) ::XmsgImGroupSyncGroupEventMember();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImGroupSyncGroupEventMember::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupSyncGroupEventMember() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupSyncGroupEventMemberImpl);
}

void InitDefaultsXmsgImGroupEventNoticeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupSyncGroupEventInfo();
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupSyncGroupEventMember();
  {
    void* ptr = &::_XmsgImGroupEventNotice_default_instance_;
    new (ptr) ::XmsgImGroupEventNotice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImGroupEventNotice::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupEventNotice() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupEventNoticeImpl);
}

void InitDefaultsXmsgImGroupInfoQueryReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImGroupInfoQueryReq_default_instance_;
    new (ptr) ::XmsgImGroupInfoQueryReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImGroupInfoQueryReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupInfoQueryReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupInfoQueryReqImpl);
}

void InitDefaultsXmsgImGroupInfoQueryRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupInfoSelfInfo();
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupInfoMember();
  {
    void* ptr = &::_XmsgImGroupInfoQueryRsp_default_instance_;
    new (ptr) ::XmsgImGroupInfoQueryRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImGroupInfoQueryRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupInfoQueryRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupInfoQueryRspImpl);
}

void InitDefaultsXmsgImGroupInfoSelfInfo_InfoEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImGroupInfoSelfInfo_InfoEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImGroupInfoSelfInfo_InfoEntry_DoNotUse();
  }
  ::XmsgImGroupInfoSelfInfo_InfoEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupInfoSelfInfo_InfoEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupInfoSelfInfo_InfoEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImGroupInfoSelfInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupInfoSelfInfo_InfoEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImGroupInfoSelfInfo_default_instance_;
    new (ptr) ::XmsgImGroupInfoSelfInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImGroupInfoSelfInfo::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupInfoSelfInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupInfoSelfInfoImpl);
}

void InitDefaultsXmsgImGroupInfoMember_InfoEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImGroupInfoMember_InfoEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImGroupInfoMember_InfoEntry_DoNotUse();
  }
  ::XmsgImGroupInfoMember_InfoEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupInfoMember_InfoEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupInfoMember_InfoEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImGroupInfoMemberImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupInfoMember_InfoEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImGroupInfoMember_default_instance_;
    new (ptr) ::XmsgImGroupInfoMember();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImGroupInfoMember::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupInfoMember() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupInfoMemberImpl);
}

void InitDefaultsXmsgImGroupInfoUpdateReq_UpsertEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImGroupInfoUpdateReq_UpsertEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImGroupInfoUpdateReq_UpsertEntry_DoNotUse();
  }
  ::XmsgImGroupInfoUpdateReq_UpsertEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupInfoUpdateReq_UpsertEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupInfoUpdateReq_UpsertEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImGroupInfoUpdateReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupInfoUpdateReq_UpsertEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImGroupInfoUpdateReq_default_instance_;
    new (ptr) ::XmsgImGroupInfoUpdateReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImGroupInfoUpdateReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupInfoUpdateReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupInfoUpdateReqImpl);
}

void InitDefaultsXmsgImGroupInfoUpdateRsp_ExtEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImGroupInfoUpdateRsp_ExtEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImGroupInfoUpdateRsp_ExtEntry_DoNotUse();
  }
  ::XmsgImGroupInfoUpdateRsp_ExtEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupInfoUpdateRsp_ExtEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupInfoUpdateRsp_ExtEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImGroupInfoUpdateRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupInfoUpdateRsp_ExtEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImGroupInfoUpdateRsp_default_instance_;
    new (ptr) ::XmsgImGroupInfoUpdateRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImGroupInfoUpdateRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupInfoUpdateRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupInfoUpdateRspImpl);
}

void InitDefaultsXmsgImGroupMsgRecvCfgReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImGroupMsgRecvCfgReq_default_instance_;
    new (ptr) ::XmsgImGroupMsgRecvCfgReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImGroupMsgRecvCfgReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupMsgRecvCfgReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupMsgRecvCfgReqImpl);
}

void InitDefaultsXmsgImGroupMsgRecvCfgRsp_ExtEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImGroupMsgRecvCfgRsp_ExtEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImGroupMsgRecvCfgRsp_ExtEntry_DoNotUse();
  }
  ::XmsgImGroupMsgRecvCfgRsp_ExtEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupMsgRecvCfgRsp_ExtEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupMsgRecvCfgRsp_ExtEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImGroupMsgRecvCfgRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupMsgRecvCfgRsp_ExtEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImGroupMsgRecvCfgRsp_default_instance_;
    new (ptr) ::XmsgImGroupMsgRecvCfgRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImGroupMsgRecvCfgRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupMsgRecvCfgRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupMsgRecvCfgRspImpl);
}

::google::protobuf::Metadata file_level_metadata[37];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupUsrGroupQueryReq_ExtEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupUsrGroupQueryReq_ExtEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupUsrGroupQueryReq_ExtEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupUsrGroupQueryReq_ExtEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupUsrGroupQueryReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupUsrGroupQueryReq, ext_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupUsrGroupQueryRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupUsrGroupQueryRsp, group_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupUsrGroupInfo_InfoEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupUsrGroupInfo_InfoEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupUsrGroupInfo_InfoEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupUsrGroupInfo_InfoEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupUsrGroupInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupUsrGroupInfo, cgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupUsrGroupInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupUsrGroupInfo, info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupUsrGroupInfo, ver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupUsrGroupInfo, gts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupUsrGroupInfo, uts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupUsrGroupInfo, usr2usr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupCreateReq_InfoEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupCreateReq_InfoEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupCreateReq_InfoEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupCreateReq_InfoEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupCreateReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupCreateReq, info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupCreateReq, member_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupCreateRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupCreateRsp, cgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupCreateRsp, gts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupAddMember_InfoEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupAddMember_InfoEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupAddMember_InfoEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupAddMember_InfoEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupAddMember, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupAddMember, cgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupAddMember, info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSyncReq_ExtEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSyncReq_ExtEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSyncReq_ExtEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSyncReq_ExtEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSyncReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSyncReq, ver4usr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSyncReq, ext_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSyncRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSyncRsp, event_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSyncEvent_InfoEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSyncEvent_InfoEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSyncEvent_InfoEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSyncEvent_InfoEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSyncEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSyncEvent, cgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSyncEvent, oper_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSyncEvent, info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSyncEvent, ver4usr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSyncEvent, gts4usr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSyncEvent, uts4usr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSyncEvent, gts4group_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSyncNotice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSyncNotice, event_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSyncGroupReq_ExtEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSyncGroupReq_ExtEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSyncGroupReq_ExtEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSyncGroupReq_ExtEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSyncGroupReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSyncGroupReq, cgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSyncGroupReq, ver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSyncGroupReq, ext_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSyncGroupRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSyncGroupRsp, info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSyncGroupRsp, member_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSyncGroupEventInfo_InfoEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSyncGroupEventInfo_InfoEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSyncGroupEventInfo_InfoEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSyncGroupEventInfo_InfoEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSyncGroupEventInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSyncGroupEventInfo, info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSyncGroupEventInfo, ver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSyncGroupEventInfo, gts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSyncGroupEventInfo, uts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSyncGroupEventMember_InfoEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSyncGroupEventMember_InfoEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSyncGroupEventMember_InfoEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSyncGroupEventMember_InfoEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSyncGroupEventMember, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSyncGroupEventMember, cgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSyncGroupEventMember, oper_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSyncGroupEventMember, info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSyncGroupEventMember, ver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSyncGroupEventMember, gts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupSyncGroupEventMember, uts_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupEventNotice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupEventNotice, info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupEventNotice, member_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupInfoQueryReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupInfoQueryReq, cgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupInfoQueryReq, member_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupInfoQueryRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupInfoQueryRsp, info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupInfoQueryRsp, member_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupInfoSelfInfo_InfoEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupInfoSelfInfo_InfoEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupInfoSelfInfo_InfoEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupInfoSelfInfo_InfoEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupInfoSelfInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupInfoSelfInfo, cgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupInfoSelfInfo, enable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupInfoSelfInfo, info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupInfoSelfInfo, ver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupInfoSelfInfo, gts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupInfoSelfInfo, uts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupInfoMember_InfoEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupInfoMember_InfoEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupInfoMember_InfoEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupInfoMember_InfoEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupInfoMember, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupInfoMember, cgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupInfoMember, enable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupInfoMember, info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupInfoMember, ver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupInfoMember, gts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupInfoMember, uts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupInfoUpdateReq_UpsertEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupInfoUpdateReq_UpsertEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupInfoUpdateReq_UpsertEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupInfoUpdateReq_UpsertEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupInfoUpdateReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupInfoUpdateReq, cgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupInfoUpdateReq, upsert_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupInfoUpdateReq, remove_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupInfoUpdateRsp_ExtEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupInfoUpdateRsp_ExtEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupInfoUpdateRsp_ExtEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupInfoUpdateRsp_ExtEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupInfoUpdateRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupInfoUpdateRsp, ext_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupMsgRecvCfgReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupMsgRecvCfgReq, cgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupMsgRecvCfgReq, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupMsgRecvCfgRsp_ExtEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupMsgRecvCfgRsp_ExtEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupMsgRecvCfgRsp_ExtEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupMsgRecvCfgRsp_ExtEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupMsgRecvCfgRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupMsgRecvCfgRsp, ext_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::XmsgImGroupUsrGroupQueryReq_ExtEntry_DoNotUse)},
  { 9, -1, sizeof(::XmsgImGroupUsrGroupQueryReq)},
  { 15, -1, sizeof(::XmsgImGroupUsrGroupQueryRsp)},
  { 21, 28, sizeof(::XmsgImGroupUsrGroupInfo_InfoEntry_DoNotUse)},
  { 30, -1, sizeof(::XmsgImGroupUsrGroupInfo)},
  { 42, 49, sizeof(::XmsgImGroupCreateReq_InfoEntry_DoNotUse)},
  { 51, -1, sizeof(::XmsgImGroupCreateReq)},
  { 58, -1, sizeof(::XmsgImGroupCreateRsp)},
  { 65, 72, sizeof(::XmsgImGroupAddMember_InfoEntry_DoNotUse)},
  { 74, -1, sizeof(::XmsgImGroupAddMember)},
  { 81, 88, sizeof(::XmsgImGroupSyncReq_ExtEntry_DoNotUse)},
  { 90, -1, sizeof(::XmsgImGroupSyncReq)},
  { 97, -1, sizeof(::XmsgImGroupSyncRsp)},
  { 103, 110, sizeof(::XmsgImGroupSyncEvent_InfoEntry_DoNotUse)},
  { 112, -1, sizeof(::XmsgImGroupSyncEvent)},
  { 124, -1, sizeof(::XmsgImGroupSyncNotice)},
  { 130, 137, sizeof(::XmsgImGroupSyncGroupReq_ExtEntry_DoNotUse)},
  { 139, -1, sizeof(::XmsgImGroupSyncGroupReq)},
  { 147, -1, sizeof(::XmsgImGroupSyncGroupRsp)},
  { 154, 161, sizeof(::XmsgImGroupSyncGroupEventInfo_InfoEntry_DoNotUse)},
  { 163, -1, sizeof(::XmsgImGroupSyncGroupEventInfo)},
  { 172, 179, sizeof(::XmsgImGroupSyncGroupEventMember_InfoEntry_DoNotUse)},
  { 181, -1, sizeof(::XmsgImGroupSyncGroupEventMember)},
  { 192, -1, sizeof(::XmsgImGroupEventNotice)},
  { 199, -1, sizeof(::XmsgImGroupInfoQueryReq)},
  { 206, -1, sizeof(::XmsgImGroupInfoQueryRsp)},
  { 213, 220, sizeof(::XmsgImGroupInfoSelfInfo_InfoEntry_DoNotUse)},
  { 222, -1, sizeof(::XmsgImGroupInfoSelfInfo)},
  { 233, 240, sizeof(::XmsgImGroupInfoMember_InfoEntry_DoNotUse)},
  { 242, -1, sizeof(::XmsgImGroupInfoMember)},
  { 253, 260, sizeof(::XmsgImGroupInfoUpdateReq_UpsertEntry_DoNotUse)},
  { 262, -1, sizeof(::XmsgImGroupInfoUpdateReq)},
  { 270, 277, sizeof(::XmsgImGroupInfoUpdateRsp_ExtEntry_DoNotUse)},
  { 279, -1, sizeof(::XmsgImGroupInfoUpdateRsp)},
  { 285, -1, sizeof(::XmsgImGroupMsgRecvCfgReq)},
  { 292, 299, sizeof(::XmsgImGroupMsgRecvCfgRsp_ExtEntry_DoNotUse)},
  { 301, -1, sizeof(::XmsgImGroupMsgRecvCfgRsp)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupUsrGroupQueryReq_ExtEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupUsrGroupQueryReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupUsrGroupQueryRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupUsrGroupInfo_InfoEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupUsrGroupInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupCreateReq_InfoEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupCreateReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupCreateRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupAddMember_InfoEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupAddMember_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupSyncReq_ExtEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupSyncReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupSyncRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupSyncEvent_InfoEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupSyncEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupSyncNotice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupSyncGroupReq_ExtEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupSyncGroupReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupSyncGroupRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupSyncGroupEventInfo_InfoEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupSyncGroupEventInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupSyncGroupEventMember_InfoEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupSyncGroupEventMember_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupEventNotice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupInfoQueryReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupInfoQueryRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupInfoSelfInfo_InfoEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupInfoSelfInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupInfoMember_InfoEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupInfoMember_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupInfoUpdateReq_UpsertEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupInfoUpdateReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupInfoUpdateRsp_ExtEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupInfoUpdateRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupMsgRecvCfgReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupMsgRecvCfgRsp_ExtEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupMsgRecvCfgRsp_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "net-x-msg-im-group-usr.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 37);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\034net-x-msg-im-group-usr.proto\"}\n\033XmsgIm"
      "GroupUsrGroupQueryReq\0222\n\003ext\030\001 \003(\0132%.Xms"
      "gImGroupUsrGroupQueryReq.ExtEntry\032*\n\010Ext"
      "Entry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"F\n"
      "\033XmsgImGroupUsrGroupQueryRsp\022\'\n\005group\030\001 "
      "\003(\0132\030.XmsgImGroupUsrGroupInfo\"\313\001\n\027XmsgIm"
      "GroupUsrGroupInfo\022\013\n\003cgt\030\001 \001(\t\022\014\n\004name\030\002"
      " \001(\t\0220\n\004info\030\003 \003(\0132\".XmsgImGroupUsrGroup"
      "Info.InfoEntry\022\013\n\003ver\030\004 \001(\004\022\013\n\003gts\030\005 \001(\004"
      "\022\013\n\003uts\030\006 \001(\004\022\017\n\007usr2usr\030\007 \001(\010\032+\n\tInfoEn"
      "try\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\231\001\n\024"
      "XmsgImGroupCreateReq\022-\n\004info\030\001 \003(\0132\037.Xms"
      "gImGroupCreateReq.InfoEntry\022%\n\006member\030\002 "
      "\003(\0132\025.XmsgImGroupAddMember\032+\n\tInfoEntry\022"
      "\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"0\n\024XmsgI"
      "mGroupCreateRsp\022\013\n\003cgt\030\001 \001(\t\022\013\n\003gts\030\002 \001("
      "\004\"\177\n\024XmsgImGroupAddMember\022\013\n\003cgt\030\001 \001(\t\022-"
      "\n\004info\030\002 \003(\0132\037.XmsgImGroupAddMember.Info"
      "Entry\032+\n\tInfoEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value"
      "\030\002 \001(\t:\0028\001\"|\n\022XmsgImGroupSyncReq\022\017\n\007ver4"
      "usr\030\001 \001(\004\022)\n\003ext\030\002 \003(\0132\034.XmsgImGroupSync"
      "Req.ExtEntry\032*\n\010ExtEntry\022\013\n\003key\030\001 \001(\t\022\r\n"
      "\005value\030\002 \001(\t:\0028\001\":\n\022XmsgImGroupSyncRsp\022$"
      "\n\005event\030\001 \003(\0132\025.XmsgImGroupSyncEvent\"\323\001\n"
      "\024XmsgImGroupSyncEvent\022\013\n\003cgt\030\001 \001(\t\022\014\n\004op"
      "er\030\002 \001(\t\022-\n\004info\030\003 \003(\0132\037.XmsgImGroupSync"
      "Event.InfoEntry\022\017\n\007ver4usr\030\004 \001(\004\022\017\n\007gts4"
      "usr\030\005 \001(\004\022\017\n\007uts4usr\030\006 \001(\004\022\021\n\tgts4group\030"
      "\007 \001(\004\032+\n\tInfoEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value"
      "\030\002 \001(\t:\0028\001\"=\n\025XmsgImGroupSyncNotice\022$\n\005e"
      "vent\030\001 \001(\0132\025.XmsgImGroupSyncEvent\"\217\001\n\027Xm"
      "sgImGroupSyncGroupReq\022\013\n\003cgt\030\001 \001(\t\022\013\n\003ve"
      "r\030\002 \001(\004\022.\n\003ext\030\003 \003(\0132!.XmsgImGroupSyncGr"
      "oupReq.ExtEntry\032*\n\010ExtEntry\022\013\n\003key\030\001 \001(\t"
      "\022\r\n\005value\030\002 \001(\t:\0028\001\"y\n\027XmsgImGroupSyncGr"
      "oupRsp\022,\n\004info\030\001 \001(\0132\036.XmsgImGroupSyncGr"
      "oupEventInfo\0220\n\006member\030\002 \003(\0132 .XmsgImGro"
      "upSyncGroupEventMember\"\253\001\n\035XmsgImGroupSy"
      "ncGroupEventInfo\0226\n\004info\030\001 \003(\0132(.XmsgImG"
      "roupSyncGroupEventInfo.InfoEntry\022\013\n\003ver\030"
      "\002 \001(\004\022\013\n\003gts\030\003 \001(\004\022\013\n\003uts\030\004 \001(\004\032+\n\tInfoE"
      "ntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\312\001\n"
      "\037XmsgImGroupSyncGroupEventMember\022\013\n\003cgt\030"
      "\001 \001(\t\022\014\n\004oper\030\002 \001(\t\0228\n\004info\030\003 \003(\0132*.Xmsg"
      "ImGroupSyncGroupEventMember.InfoEntry\022\013\n"
      "\003ver\030\004 \001(\004\022\013\n\003gts\030\005 \001(\004\022\013\n\003uts\030\006 \001(\004\032+\n\t"
      "InfoEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028"
      "\001\"x\n\026XmsgImGroupEventNotice\022,\n\004info\030\001 \001("
      "\0132\036.XmsgImGroupSyncGroupEventInfo\0220\n\006mem"
      "ber\030\002 \001(\0132 .XmsgImGroupSyncGroupEventMem"
      "ber\"6\n\027XmsgImGroupInfoQueryReq\022\013\n\003cgt\030\001 "
      "\001(\t\022\016\n\006member\030\002 \001(\010\"i\n\027XmsgImGroupInfoQu"
      "eryRsp\022&\n\004info\030\001 \001(\0132\030.XmsgImGroupInfoSe"
      "lfInfo\022&\n\006member\030\002 \003(\0132\026.XmsgImGroupInfo"
      "Member\"\274\001\n\027XmsgImGroupInfoSelfInfo\022\013\n\003cg"
      "t\030\001 \001(\t\022\016\n\006enable\030\002 \001(\010\0220\n\004info\030\003 \003(\0132\"."
      "XmsgImGroupInfoSelfInfo.InfoEntry\022\013\n\003ver"
      "\030\004 \001(\004\022\013\n\003gts\030\005 \001(\004\022\013\n\003uts\030\006 \001(\004\032+\n\tInfo"
      "Entry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\270\001"
      "\n\025XmsgImGroupInfoMember\022\013\n\003cgt\030\001 \001(\t\022\016\n\006"
      "enable\030\002 \001(\010\022.\n\004info\030\003 \003(\0132 .XmsgImGroup"
      "InfoMember.InfoEntry\022\013\n\003ver\030\004 \001(\004\022\013\n\003gts"
      "\030\005 \001(\004\022\013\n\003uts\030\006 \001(\004\032+\n\tInfoEntry\022\013\n\003key\030"
      "\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\235\001\n\030XmsgImGroup"
      "InfoUpdateReq\022\013\n\003cgt\030\001 \001(\t\0225\n\006upsert\030\002 \003"
      "(\0132%.XmsgImGroupInfoUpdateReq.UpsertEntr"
      "y\022\016\n\006remove\030\003 \003(\t\032-\n\013UpsertEntry\022\013\n\003key\030"
      "\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"w\n\030XmsgImGroupI"
      "nfoUpdateRsp\022/\n\003ext\030\001 \003(\0132\".XmsgImGroupI"
      "nfoUpdateRsp.ExtEntry\032*\n\010ExtEntry\022\013\n\003key"
      "\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"5\n\030XmsgImGroup"
      "MsgRecvCfgReq\022\013\n\003cgt\030\001 \001(\t\022\014\n\004type\030\002 \001(\t"
      "\"w\n\030XmsgImGroupMsgRecvCfgRsp\022/\n\003ext\030\001 \003("
      "\0132\".XmsgImGroupMsgRecvCfgRsp.ExtEntry\032*\n"
      "\010ExtEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028"
      "\001B\034\n\010x.msg.pbB\020XmsgImGroupUsrPbb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3039);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net-x-msg-im-group-usr.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto

// ===================================================================

XmsgImGroupUsrGroupQueryReq_ExtEntry_DoNotUse::XmsgImGroupUsrGroupQueryReq_ExtEntry_DoNotUse() {}
XmsgImGroupUsrGroupQueryReq_ExtEntry_DoNotUse::XmsgImGroupUsrGroupQueryReq_ExtEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImGroupUsrGroupQueryReq_ExtEntry_DoNotUse::MergeFrom(const XmsgImGroupUsrGroupQueryReq_ExtEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImGroupUsrGroupQueryReq_ExtEntry_DoNotUse::GetMetadata() const {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[0];
}
void XmsgImGroupUsrGroupQueryReq_ExtEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImGroupUsrGroupQueryReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImGroupUsrGroupQueryReq::kExtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImGroupUsrGroupQueryReq::XmsgImGroupUsrGroupQueryReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupUsrGroupQueryReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImGroupUsrGroupQueryReq)
}
XmsgImGroupUsrGroupQueryReq::XmsgImGroupUsrGroupQueryReq(const XmsgImGroupUsrGroupQueryReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ext_.MergeFrom(from.ext_);
  // @@protoc_insertion_point(copy_constructor:XmsgImGroupUsrGroupQueryReq)
}

void XmsgImGroupUsrGroupQueryReq::SharedCtor() {
  _cached_size_ = 0;
}

XmsgImGroupUsrGroupQueryReq::~XmsgImGroupUsrGroupQueryReq() {
  // @@protoc_insertion_point(destructor:XmsgImGroupUsrGroupQueryReq)
  SharedDtor();
}

void XmsgImGroupUsrGroupQueryReq::SharedDtor() {
}

void XmsgImGroupUsrGroupQueryReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImGroupUsrGroupQueryReq::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImGroupUsrGroupQueryReq& XmsgImGroupUsrGroupQueryReq::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupUsrGroupQueryReq();
  return *internal_default_instance();
}

XmsgImGroupUsrGroupQueryReq* XmsgImGroupUsrGroupQueryReq::New(::google::protobuf::Arena* arena) const {
  XmsgImGroupUsrGroupQueryReq* n = new XmsgImGroupUsrGroupQueryReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImGroupUsrGroupQueryReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImGroupUsrGroupQueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ext_.Clear();
  _internal_metadata_.Clear();
}

bool XmsgImGroupUsrGroupQueryReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImGroupUsrGroupQueryReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, string> ext = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          XmsgImGroupUsrGroupQueryReq_ExtEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImGroupUsrGroupQueryReq_ExtEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&ext_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupUsrGroupQueryReq.ExtEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupUsrGroupQueryReq.ExtEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImGroupUsrGroupQueryReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImGroupUsrGroupQueryReq)
  return false;
#undef DO_
}

void XmsgImGroupUsrGroupQueryReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImGroupUsrGroupQueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ext = 1;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupUsrGroupQueryReq.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupUsrGroupQueryReq.ExtEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImGroupUsrGroupQueryReq_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImGroupUsrGroupQueryReq_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImGroupUsrGroupQueryReq)
}

::google::protobuf::uint8* XmsgImGroupUsrGroupQueryReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImGroupUsrGroupQueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ext = 1;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupUsrGroupQueryReq.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupUsrGroupQueryReq.ExtEntry.value");
      }
    };

    if (deterministic &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImGroupUsrGroupQueryReq_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImGroupUsrGroupQueryReq_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImGroupUsrGroupQueryReq)
  return target;
}

size_t XmsgImGroupUsrGroupQueryReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImGroupUsrGroupQueryReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> ext = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ext_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImGroupUsrGroupQueryReq_ExtEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->ext().begin();
        it != this->ext().end(); ++it) {
      entry.reset(ext_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImGroupUsrGroupQueryReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImGroupUsrGroupQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImGroupUsrGroupQueryReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImGroupUsrGroupQueryReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImGroupUsrGroupQueryReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImGroupUsrGroupQueryReq)
    MergeFrom(*source);
  }
}

void XmsgImGroupUsrGroupQueryReq::MergeFrom(const XmsgImGroupUsrGroupQueryReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImGroupUsrGroupQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ext_.MergeFrom(from.ext_);
}

void XmsgImGroupUsrGroupQueryReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImGroupUsrGroupQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImGroupUsrGroupQueryReq::CopyFrom(const XmsgImGroupUsrGroupQueryReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImGroupUsrGroupQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImGroupUsrGroupQueryReq::IsInitialized() const {
  return true;
}

void XmsgImGroupUsrGroupQueryReq::Swap(XmsgImGroupUsrGroupQueryReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImGroupUsrGroupQueryReq::InternalSwap(XmsgImGroupUsrGroupQueryReq* other) {
  using std::swap;
  ext_.Swap(&other->ext_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImGroupUsrGroupQueryReq::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImGroupUsrGroupQueryRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImGroupUsrGroupQueryRsp::kGroupFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImGroupUsrGroupQueryRsp::XmsgImGroupUsrGroupQueryRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupUsrGroupQueryRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImGroupUsrGroupQueryRsp)
}
XmsgImGroupUsrGroupQueryRsp::XmsgImGroupUsrGroupQueryRsp(const XmsgImGroupUsrGroupQueryRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      group_(from.group_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:XmsgImGroupUsrGroupQueryRsp)
}

void XmsgImGroupUsrGroupQueryRsp::SharedCtor() {
  _cached_size_ = 0;
}

XmsgImGroupUsrGroupQueryRsp::~XmsgImGroupUsrGroupQueryRsp() {
  // @@protoc_insertion_point(destructor:XmsgImGroupUsrGroupQueryRsp)
  SharedDtor();
}

void XmsgImGroupUsrGroupQueryRsp::SharedDtor() {
}

void XmsgImGroupUsrGroupQueryRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImGroupUsrGroupQueryRsp::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImGroupUsrGroupQueryRsp& XmsgImGroupUsrGroupQueryRsp::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupUsrGroupQueryRsp();
  return *internal_default_instance();
}

XmsgImGroupUsrGroupQueryRsp* XmsgImGroupUsrGroupQueryRsp::New(::google::protobuf::Arena* arena) const {
  XmsgImGroupUsrGroupQueryRsp* n = new XmsgImGroupUsrGroupQueryRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImGroupUsrGroupQueryRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImGroupUsrGroupQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  group_.Clear();
  _internal_metadata_.Clear();
}

bool XmsgImGroupUsrGroupQueryRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImGroupUsrGroupQueryRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .XmsgImGroupUsrGroupInfo group = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_group()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImGroupUsrGroupQueryRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImGroupUsrGroupQueryRsp)
  return false;
#undef DO_
}

void XmsgImGroupUsrGroupQueryRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImGroupUsrGroupQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .XmsgImGroupUsrGroupInfo group = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->group_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->group(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImGroupUsrGroupQueryRsp)
}

::google::protobuf::uint8* XmsgImGroupUsrGroupQueryRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImGroupUsrGroupQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .XmsgImGroupUsrGroupInfo group = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->group_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->group(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImGroupUsrGroupQueryRsp)
  return target;
}

size_t XmsgImGroupUsrGroupQueryRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImGroupUsrGroupQueryRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .XmsgImGroupUsrGroupInfo group = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->group_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->group(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImGroupUsrGroupQueryRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImGroupUsrGroupQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImGroupUsrGroupQueryRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImGroupUsrGroupQueryRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImGroupUsrGroupQueryRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImGroupUsrGroupQueryRsp)
    MergeFrom(*source);
  }
}

void XmsgImGroupUsrGroupQueryRsp::MergeFrom(const XmsgImGroupUsrGroupQueryRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImGroupUsrGroupQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  group_.MergeFrom(from.group_);
}

void XmsgImGroupUsrGroupQueryRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImGroupUsrGroupQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImGroupUsrGroupQueryRsp::CopyFrom(const XmsgImGroupUsrGroupQueryRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImGroupUsrGroupQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImGroupUsrGroupQueryRsp::IsInitialized() const {
  return true;
}

void XmsgImGroupUsrGroupQueryRsp::Swap(XmsgImGroupUsrGroupQueryRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImGroupUsrGroupQueryRsp::InternalSwap(XmsgImGroupUsrGroupQueryRsp* other) {
  using std::swap;
  group_.InternalSwap(&other->group_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImGroupUsrGroupQueryRsp::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgImGroupUsrGroupInfo_InfoEntry_DoNotUse::XmsgImGroupUsrGroupInfo_InfoEntry_DoNotUse() {}
XmsgImGroupUsrGroupInfo_InfoEntry_DoNotUse::XmsgImGroupUsrGroupInfo_InfoEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImGroupUsrGroupInfo_InfoEntry_DoNotUse::MergeFrom(const XmsgImGroupUsrGroupInfo_InfoEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImGroupUsrGroupInfo_InfoEntry_DoNotUse::GetMetadata() const {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[3];
}
void XmsgImGroupUsrGroupInfo_InfoEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImGroupUsrGroupInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImGroupUsrGroupInfo::kCgtFieldNumber;
const int XmsgImGroupUsrGroupInfo::kNameFieldNumber;
const int XmsgImGroupUsrGroupInfo::kInfoFieldNumber;
const int XmsgImGroupUsrGroupInfo::kVerFieldNumber;
const int XmsgImGroupUsrGroupInfo::kGtsFieldNumber;
const int XmsgImGroupUsrGroupInfo::kUtsFieldNumber;
const int XmsgImGroupUsrGroupInfo::kUsr2UsrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImGroupUsrGroupInfo::XmsgImGroupUsrGroupInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupUsrGroupInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImGroupUsrGroupInfo)
}
XmsgImGroupUsrGroupInfo::XmsgImGroupUsrGroupInfo(const XmsgImGroupUsrGroupInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  info_.MergeFrom(from.info_);
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cgt().size() > 0) {
    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&ver_, &from.ver_,
    static_cast<size_t>(reinterpret_cast<char*>(&usr2usr_) -
    reinterpret_cast<char*>(&ver_)) + sizeof(usr2usr_));
  // @@protoc_insertion_point(copy_constructor:XmsgImGroupUsrGroupInfo)
}

void XmsgImGroupUsrGroupInfo::SharedCtor() {
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ver_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&usr2usr_) -
      reinterpret_cast<char*>(&ver_)) + sizeof(usr2usr_));
  _cached_size_ = 0;
}

XmsgImGroupUsrGroupInfo::~XmsgImGroupUsrGroupInfo() {
  // @@protoc_insertion_point(destructor:XmsgImGroupUsrGroupInfo)
  SharedDtor();
}

void XmsgImGroupUsrGroupInfo::SharedDtor() {
  cgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgImGroupUsrGroupInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImGroupUsrGroupInfo::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImGroupUsrGroupInfo& XmsgImGroupUsrGroupInfo::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupUsrGroupInfo();
  return *internal_default_instance();
}

XmsgImGroupUsrGroupInfo* XmsgImGroupUsrGroupInfo::New(::google::protobuf::Arena* arena) const {
  XmsgImGroupUsrGroupInfo* n = new XmsgImGroupUsrGroupInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImGroupUsrGroupInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImGroupUsrGroupInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  info_.Clear();
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ver_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&usr2usr_) -
      reinterpret_cast<char*>(&ver_)) + sizeof(usr2usr_));
  _internal_metadata_.Clear();
}

bool XmsgImGroupUsrGroupInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImGroupUsrGroupInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cgt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cgt().data(), static_cast<int>(this->cgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupUsrGroupInfo.cgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupUsrGroupInfo.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> info = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          XmsgImGroupUsrGroupInfo_InfoEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImGroupUsrGroupInfo_InfoEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&info_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupUsrGroupInfo.InfoEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupUsrGroupInfo.InfoEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 ver = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ver_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 gts = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 uts = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool usr2usr = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &usr2usr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImGroupUsrGroupInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImGroupUsrGroupInfo)
  return false;
#undef DO_
}

void XmsgImGroupUsrGroupInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImGroupUsrGroupInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupUsrGroupInfo.cgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cgt(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupUsrGroupInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // map<string, string> info = 3;
  if (!this->info().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupUsrGroupInfo.InfoEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupUsrGroupInfo.InfoEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->info().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->info().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImGroupUsrGroupInfo_InfoEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(info_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImGroupUsrGroupInfo_InfoEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it) {
        entry.reset(info_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // uint64 ver = 4;
  if (this->ver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->ver(), output);
  }

  // uint64 gts = 5;
  if (this->gts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->gts(), output);
  }

  // uint64 uts = 6;
  if (this->uts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->uts(), output);
  }

  // bool usr2usr = 7;
  if (this->usr2usr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->usr2usr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImGroupUsrGroupInfo)
}

::google::protobuf::uint8* XmsgImGroupUsrGroupInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImGroupUsrGroupInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupUsrGroupInfo.cgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cgt(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupUsrGroupInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // map<string, string> info = 3;
  if (!this->info().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupUsrGroupInfo.InfoEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupUsrGroupInfo.InfoEntry.value");
      }
    };

    if (deterministic &&
        this->info().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->info().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImGroupUsrGroupInfo_InfoEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(info_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImGroupUsrGroupInfo_InfoEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it) {
        entry.reset(info_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // uint64 ver = 4;
  if (this->ver() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->ver(), target);
  }

  // uint64 gts = 5;
  if (this->gts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->gts(), target);
  }

  // uint64 uts = 6;
  if (this->uts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->uts(), target);
  }

  // bool usr2usr = 7;
  if (this->usr2usr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->usr2usr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImGroupUsrGroupInfo)
  return target;
}

size_t XmsgImGroupUsrGroupInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImGroupUsrGroupInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> info = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->info_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImGroupUsrGroupInfo_InfoEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->info().begin();
        it != this->info().end(); ++it) {
      entry.reset(info_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cgt());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // uint64 ver = 4;
  if (this->ver() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ver());
  }

  // uint64 gts = 5;
  if (this->gts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gts());
  }

  // uint64 uts = 6;
  if (this->uts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uts());
  }

  // bool usr2usr = 7;
  if (this->usr2usr() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImGroupUsrGroupInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImGroupUsrGroupInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImGroupUsrGroupInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImGroupUsrGroupInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImGroupUsrGroupInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImGroupUsrGroupInfo)
    MergeFrom(*source);
  }
}

void XmsgImGroupUsrGroupInfo::MergeFrom(const XmsgImGroupUsrGroupInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImGroupUsrGroupInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  info_.MergeFrom(from.info_);
  if (from.cgt().size() > 0) {

    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.ver() != 0) {
    set_ver(from.ver());
  }
  if (from.gts() != 0) {
    set_gts(from.gts());
  }
  if (from.uts() != 0) {
    set_uts(from.uts());
  }
  if (from.usr2usr() != 0) {
    set_usr2usr(from.usr2usr());
  }
}

void XmsgImGroupUsrGroupInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImGroupUsrGroupInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImGroupUsrGroupInfo::CopyFrom(const XmsgImGroupUsrGroupInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImGroupUsrGroupInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImGroupUsrGroupInfo::IsInitialized() const {
  return true;
}

void XmsgImGroupUsrGroupInfo::Swap(XmsgImGroupUsrGroupInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImGroupUsrGroupInfo::InternalSwap(XmsgImGroupUsrGroupInfo* other) {
  using std::swap;
  info_.Swap(&other->info_);
  cgt_.Swap(&other->cgt_);
  name_.Swap(&other->name_);
  swap(ver_, other->ver_);
  swap(gts_, other->gts_);
  swap(uts_, other->uts_);
  swap(usr2usr_, other->usr2usr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImGroupUsrGroupInfo::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgImGroupCreateReq_InfoEntry_DoNotUse::XmsgImGroupCreateReq_InfoEntry_DoNotUse() {}
XmsgImGroupCreateReq_InfoEntry_DoNotUse::XmsgImGroupCreateReq_InfoEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImGroupCreateReq_InfoEntry_DoNotUse::MergeFrom(const XmsgImGroupCreateReq_InfoEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImGroupCreateReq_InfoEntry_DoNotUse::GetMetadata() const {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[5];
}
void XmsgImGroupCreateReq_InfoEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImGroupCreateReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImGroupCreateReq::kInfoFieldNumber;
const int XmsgImGroupCreateReq::kMemberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImGroupCreateReq::XmsgImGroupCreateReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupCreateReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImGroupCreateReq)
}
XmsgImGroupCreateReq::XmsgImGroupCreateReq(const XmsgImGroupCreateReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      member_(from.member_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  info_.MergeFrom(from.info_);
  // @@protoc_insertion_point(copy_constructor:XmsgImGroupCreateReq)
}

void XmsgImGroupCreateReq::SharedCtor() {
  _cached_size_ = 0;
}

XmsgImGroupCreateReq::~XmsgImGroupCreateReq() {
  // @@protoc_insertion_point(destructor:XmsgImGroupCreateReq)
  SharedDtor();
}

void XmsgImGroupCreateReq::SharedDtor() {
}

void XmsgImGroupCreateReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImGroupCreateReq::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImGroupCreateReq& XmsgImGroupCreateReq::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupCreateReq();
  return *internal_default_instance();
}

XmsgImGroupCreateReq* XmsgImGroupCreateReq::New(::google::protobuf::Arena* arena) const {
  XmsgImGroupCreateReq* n = new XmsgImGroupCreateReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImGroupCreateReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImGroupCreateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  info_.Clear();
  member_.Clear();
  _internal_metadata_.Clear();
}

bool XmsgImGroupCreateReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImGroupCreateReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, string> info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          XmsgImGroupCreateReq_InfoEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImGroupCreateReq_InfoEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&info_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupCreateReq.InfoEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupCreateReq.InfoEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .XmsgImGroupAddMember member = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_member()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImGroupCreateReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImGroupCreateReq)
  return false;
#undef DO_
}

void XmsgImGroupCreateReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImGroupCreateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> info = 1;
  if (!this->info().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupCreateReq.InfoEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupCreateReq.InfoEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->info().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->info().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImGroupCreateReq_InfoEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(info_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImGroupCreateReq_InfoEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it) {
        entry.reset(info_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // repeated .XmsgImGroupAddMember member = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->member_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->member(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImGroupCreateReq)
}

::google::protobuf::uint8* XmsgImGroupCreateReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImGroupCreateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> info = 1;
  if (!this->info().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupCreateReq.InfoEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupCreateReq.InfoEntry.value");
      }
    };

    if (deterministic &&
        this->info().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->info().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImGroupCreateReq_InfoEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(info_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImGroupCreateReq_InfoEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it) {
        entry.reset(info_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // repeated .XmsgImGroupAddMember member = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->member_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->member(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImGroupCreateReq)
  return target;
}

size_t XmsgImGroupCreateReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImGroupCreateReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> info = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->info_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImGroupCreateReq_InfoEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->info().begin();
        it != this->info().end(); ++it) {
      entry.reset(info_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated .XmsgImGroupAddMember member = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->member_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->member(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImGroupCreateReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImGroupCreateReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImGroupCreateReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImGroupCreateReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImGroupCreateReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImGroupCreateReq)
    MergeFrom(*source);
  }
}

void XmsgImGroupCreateReq::MergeFrom(const XmsgImGroupCreateReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImGroupCreateReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  info_.MergeFrom(from.info_);
  member_.MergeFrom(from.member_);
}

void XmsgImGroupCreateReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImGroupCreateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImGroupCreateReq::CopyFrom(const XmsgImGroupCreateReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImGroupCreateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImGroupCreateReq::IsInitialized() const {
  return true;
}

void XmsgImGroupCreateReq::Swap(XmsgImGroupCreateReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImGroupCreateReq::InternalSwap(XmsgImGroupCreateReq* other) {
  using std::swap;
  info_.Swap(&other->info_);
  member_.InternalSwap(&other->member_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImGroupCreateReq::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImGroupCreateRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImGroupCreateRsp::kCgtFieldNumber;
const int XmsgImGroupCreateRsp::kGtsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImGroupCreateRsp::XmsgImGroupCreateRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupCreateRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImGroupCreateRsp)
}
XmsgImGroupCreateRsp::XmsgImGroupCreateRsp(const XmsgImGroupCreateRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cgt().size() > 0) {
    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  gts_ = from.gts_;
  // @@protoc_insertion_point(copy_constructor:XmsgImGroupCreateRsp)
}

void XmsgImGroupCreateRsp::SharedCtor() {
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gts_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

XmsgImGroupCreateRsp::~XmsgImGroupCreateRsp() {
  // @@protoc_insertion_point(destructor:XmsgImGroupCreateRsp)
  SharedDtor();
}

void XmsgImGroupCreateRsp::SharedDtor() {
  cgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgImGroupCreateRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImGroupCreateRsp::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImGroupCreateRsp& XmsgImGroupCreateRsp::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupCreateRsp();
  return *internal_default_instance();
}

XmsgImGroupCreateRsp* XmsgImGroupCreateRsp::New(::google::protobuf::Arena* arena) const {
  XmsgImGroupCreateRsp* n = new XmsgImGroupCreateRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImGroupCreateRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImGroupCreateRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gts_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool XmsgImGroupCreateRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImGroupCreateRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cgt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cgt().data(), static_cast<int>(this->cgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupCreateRsp.cgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 gts = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImGroupCreateRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImGroupCreateRsp)
  return false;
#undef DO_
}

void XmsgImGroupCreateRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImGroupCreateRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupCreateRsp.cgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cgt(), output);
  }

  // uint64 gts = 2;
  if (this->gts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->gts(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImGroupCreateRsp)
}

::google::protobuf::uint8* XmsgImGroupCreateRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImGroupCreateRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupCreateRsp.cgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cgt(), target);
  }

  // uint64 gts = 2;
  if (this->gts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->gts(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImGroupCreateRsp)
  return target;
}

size_t XmsgImGroupCreateRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImGroupCreateRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string cgt = 1;
  if (this->cgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cgt());
  }

  // uint64 gts = 2;
  if (this->gts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gts());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImGroupCreateRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImGroupCreateRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImGroupCreateRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImGroupCreateRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImGroupCreateRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImGroupCreateRsp)
    MergeFrom(*source);
  }
}

void XmsgImGroupCreateRsp::MergeFrom(const XmsgImGroupCreateRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImGroupCreateRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cgt().size() > 0) {

    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  if (from.gts() != 0) {
    set_gts(from.gts());
  }
}

void XmsgImGroupCreateRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImGroupCreateRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImGroupCreateRsp::CopyFrom(const XmsgImGroupCreateRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImGroupCreateRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImGroupCreateRsp::IsInitialized() const {
  return true;
}

void XmsgImGroupCreateRsp::Swap(XmsgImGroupCreateRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImGroupCreateRsp::InternalSwap(XmsgImGroupCreateRsp* other) {
  using std::swap;
  cgt_.Swap(&other->cgt_);
  swap(gts_, other->gts_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImGroupCreateRsp::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgImGroupAddMember_InfoEntry_DoNotUse::XmsgImGroupAddMember_InfoEntry_DoNotUse() {}
XmsgImGroupAddMember_InfoEntry_DoNotUse::XmsgImGroupAddMember_InfoEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImGroupAddMember_InfoEntry_DoNotUse::MergeFrom(const XmsgImGroupAddMember_InfoEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImGroupAddMember_InfoEntry_DoNotUse::GetMetadata() const {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[8];
}
void XmsgImGroupAddMember_InfoEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImGroupAddMember::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImGroupAddMember::kCgtFieldNumber;
const int XmsgImGroupAddMember::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImGroupAddMember::XmsgImGroupAddMember()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupAddMember();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImGroupAddMember)
}
XmsgImGroupAddMember::XmsgImGroupAddMember(const XmsgImGroupAddMember& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  info_.MergeFrom(from.info_);
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cgt().size() > 0) {
    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  // @@protoc_insertion_point(copy_constructor:XmsgImGroupAddMember)
}

void XmsgImGroupAddMember::SharedCtor() {
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

XmsgImGroupAddMember::~XmsgImGroupAddMember() {
  // @@protoc_insertion_point(destructor:XmsgImGroupAddMember)
  SharedDtor();
}

void XmsgImGroupAddMember::SharedDtor() {
  cgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgImGroupAddMember::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImGroupAddMember::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImGroupAddMember& XmsgImGroupAddMember::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupAddMember();
  return *internal_default_instance();
}

XmsgImGroupAddMember* XmsgImGroupAddMember::New(::google::protobuf::Arena* arena) const {
  XmsgImGroupAddMember* n = new XmsgImGroupAddMember;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImGroupAddMember::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImGroupAddMember)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  info_.Clear();
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool XmsgImGroupAddMember::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImGroupAddMember)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cgt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cgt().data(), static_cast<int>(this->cgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupAddMember.cgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          XmsgImGroupAddMember_InfoEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImGroupAddMember_InfoEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&info_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupAddMember.InfoEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupAddMember.InfoEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImGroupAddMember)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImGroupAddMember)
  return false;
#undef DO_
}

void XmsgImGroupAddMember::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImGroupAddMember)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupAddMember.cgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cgt(), output);
  }

  // map<string, string> info = 2;
  if (!this->info().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupAddMember.InfoEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupAddMember.InfoEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->info().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->info().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImGroupAddMember_InfoEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(info_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImGroupAddMember_InfoEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it) {
        entry.reset(info_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImGroupAddMember)
}

::google::protobuf::uint8* XmsgImGroupAddMember::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImGroupAddMember)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupAddMember.cgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cgt(), target);
  }

  // map<string, string> info = 2;
  if (!this->info().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupAddMember.InfoEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupAddMember.InfoEntry.value");
      }
    };

    if (deterministic &&
        this->info().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->info().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImGroupAddMember_InfoEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(info_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImGroupAddMember_InfoEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it) {
        entry.reset(info_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImGroupAddMember)
  return target;
}

size_t XmsgImGroupAddMember::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImGroupAddMember)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> info = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->info_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImGroupAddMember_InfoEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->info().begin();
        it != this->info().end(); ++it) {
      entry.reset(info_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cgt());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImGroupAddMember::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImGroupAddMember)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImGroupAddMember* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImGroupAddMember>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImGroupAddMember)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImGroupAddMember)
    MergeFrom(*source);
  }
}

void XmsgImGroupAddMember::MergeFrom(const XmsgImGroupAddMember& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImGroupAddMember)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  info_.MergeFrom(from.info_);
  if (from.cgt().size() > 0) {

    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
}

void XmsgImGroupAddMember::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImGroupAddMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImGroupAddMember::CopyFrom(const XmsgImGroupAddMember& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImGroupAddMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImGroupAddMember::IsInitialized() const {
  return true;
}

void XmsgImGroupAddMember::Swap(XmsgImGroupAddMember* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImGroupAddMember::InternalSwap(XmsgImGroupAddMember* other) {
  using std::swap;
  info_.Swap(&other->info_);
  cgt_.Swap(&other->cgt_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImGroupAddMember::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgImGroupSyncReq_ExtEntry_DoNotUse::XmsgImGroupSyncReq_ExtEntry_DoNotUse() {}
XmsgImGroupSyncReq_ExtEntry_DoNotUse::XmsgImGroupSyncReq_ExtEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImGroupSyncReq_ExtEntry_DoNotUse::MergeFrom(const XmsgImGroupSyncReq_ExtEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImGroupSyncReq_ExtEntry_DoNotUse::GetMetadata() const {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[10];
}
void XmsgImGroupSyncReq_ExtEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImGroupSyncReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImGroupSyncReq::kVer4UsrFieldNumber;
const int XmsgImGroupSyncReq::kExtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImGroupSyncReq::XmsgImGroupSyncReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupSyncReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImGroupSyncReq)
}
XmsgImGroupSyncReq::XmsgImGroupSyncReq(const XmsgImGroupSyncReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ext_.MergeFrom(from.ext_);
  ver4usr_ = from.ver4usr_;
  // @@protoc_insertion_point(copy_constructor:XmsgImGroupSyncReq)
}

void XmsgImGroupSyncReq::SharedCtor() {
  ver4usr_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

XmsgImGroupSyncReq::~XmsgImGroupSyncReq() {
  // @@protoc_insertion_point(destructor:XmsgImGroupSyncReq)
  SharedDtor();
}

void XmsgImGroupSyncReq::SharedDtor() {
}

void XmsgImGroupSyncReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImGroupSyncReq::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImGroupSyncReq& XmsgImGroupSyncReq::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupSyncReq();
  return *internal_default_instance();
}

XmsgImGroupSyncReq* XmsgImGroupSyncReq::New(::google::protobuf::Arena* arena) const {
  XmsgImGroupSyncReq* n = new XmsgImGroupSyncReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImGroupSyncReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImGroupSyncReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ext_.Clear();
  ver4usr_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool XmsgImGroupSyncReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImGroupSyncReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 ver4usr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ver4usr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> ext = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          XmsgImGroupSyncReq_ExtEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImGroupSyncReq_ExtEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&ext_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupSyncReq.ExtEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupSyncReq.ExtEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImGroupSyncReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImGroupSyncReq)
  return false;
#undef DO_
}

void XmsgImGroupSyncReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImGroupSyncReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 ver4usr = 1;
  if (this->ver4usr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->ver4usr(), output);
  }

  // map<string, string> ext = 2;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupSyncReq.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupSyncReq.ExtEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImGroupSyncReq_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImGroupSyncReq_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImGroupSyncReq)
}

::google::protobuf::uint8* XmsgImGroupSyncReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImGroupSyncReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 ver4usr = 1;
  if (this->ver4usr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->ver4usr(), target);
  }

  // map<string, string> ext = 2;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupSyncReq.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupSyncReq.ExtEntry.value");
      }
    };

    if (deterministic &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImGroupSyncReq_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImGroupSyncReq_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImGroupSyncReq)
  return target;
}

size_t XmsgImGroupSyncReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImGroupSyncReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> ext = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ext_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImGroupSyncReq_ExtEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->ext().begin();
        it != this->ext().end(); ++it) {
      entry.reset(ext_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // uint64 ver4usr = 1;
  if (this->ver4usr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ver4usr());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImGroupSyncReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImGroupSyncReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImGroupSyncReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImGroupSyncReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImGroupSyncReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImGroupSyncReq)
    MergeFrom(*source);
  }
}

void XmsgImGroupSyncReq::MergeFrom(const XmsgImGroupSyncReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImGroupSyncReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ext_.MergeFrom(from.ext_);
  if (from.ver4usr() != 0) {
    set_ver4usr(from.ver4usr());
  }
}

void XmsgImGroupSyncReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImGroupSyncReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImGroupSyncReq::CopyFrom(const XmsgImGroupSyncReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImGroupSyncReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImGroupSyncReq::IsInitialized() const {
  return true;
}

void XmsgImGroupSyncReq::Swap(XmsgImGroupSyncReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImGroupSyncReq::InternalSwap(XmsgImGroupSyncReq* other) {
  using std::swap;
  ext_.Swap(&other->ext_);
  swap(ver4usr_, other->ver4usr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImGroupSyncReq::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImGroupSyncRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImGroupSyncRsp::kEventFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImGroupSyncRsp::XmsgImGroupSyncRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupSyncRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImGroupSyncRsp)
}
XmsgImGroupSyncRsp::XmsgImGroupSyncRsp(const XmsgImGroupSyncRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      event_(from.event_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:XmsgImGroupSyncRsp)
}

void XmsgImGroupSyncRsp::SharedCtor() {
  _cached_size_ = 0;
}

XmsgImGroupSyncRsp::~XmsgImGroupSyncRsp() {
  // @@protoc_insertion_point(destructor:XmsgImGroupSyncRsp)
  SharedDtor();
}

void XmsgImGroupSyncRsp::SharedDtor() {
}

void XmsgImGroupSyncRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImGroupSyncRsp::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImGroupSyncRsp& XmsgImGroupSyncRsp::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupSyncRsp();
  return *internal_default_instance();
}

XmsgImGroupSyncRsp* XmsgImGroupSyncRsp::New(::google::protobuf::Arena* arena) const {
  XmsgImGroupSyncRsp* n = new XmsgImGroupSyncRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImGroupSyncRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImGroupSyncRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  event_.Clear();
  _internal_metadata_.Clear();
}

bool XmsgImGroupSyncRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImGroupSyncRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .XmsgImGroupSyncEvent event = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_event()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImGroupSyncRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImGroupSyncRsp)
  return false;
#undef DO_
}

void XmsgImGroupSyncRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImGroupSyncRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .XmsgImGroupSyncEvent event = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->event_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->event(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImGroupSyncRsp)
}

::google::protobuf::uint8* XmsgImGroupSyncRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImGroupSyncRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .XmsgImGroupSyncEvent event = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->event_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->event(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImGroupSyncRsp)
  return target;
}

size_t XmsgImGroupSyncRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImGroupSyncRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .XmsgImGroupSyncEvent event = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->event_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->event(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImGroupSyncRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImGroupSyncRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImGroupSyncRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImGroupSyncRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImGroupSyncRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImGroupSyncRsp)
    MergeFrom(*source);
  }
}

void XmsgImGroupSyncRsp::MergeFrom(const XmsgImGroupSyncRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImGroupSyncRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  event_.MergeFrom(from.event_);
}

void XmsgImGroupSyncRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImGroupSyncRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImGroupSyncRsp::CopyFrom(const XmsgImGroupSyncRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImGroupSyncRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImGroupSyncRsp::IsInitialized() const {
  return true;
}

void XmsgImGroupSyncRsp::Swap(XmsgImGroupSyncRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImGroupSyncRsp::InternalSwap(XmsgImGroupSyncRsp* other) {
  using std::swap;
  event_.InternalSwap(&other->event_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImGroupSyncRsp::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgImGroupSyncEvent_InfoEntry_DoNotUse::XmsgImGroupSyncEvent_InfoEntry_DoNotUse() {}
XmsgImGroupSyncEvent_InfoEntry_DoNotUse::XmsgImGroupSyncEvent_InfoEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImGroupSyncEvent_InfoEntry_DoNotUse::MergeFrom(const XmsgImGroupSyncEvent_InfoEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImGroupSyncEvent_InfoEntry_DoNotUse::GetMetadata() const {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[13];
}
void XmsgImGroupSyncEvent_InfoEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImGroupSyncEvent::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImGroupSyncEvent::kCgtFieldNumber;
const int XmsgImGroupSyncEvent::kOperFieldNumber;
const int XmsgImGroupSyncEvent::kInfoFieldNumber;
const int XmsgImGroupSyncEvent::kVer4UsrFieldNumber;
const int XmsgImGroupSyncEvent::kGts4UsrFieldNumber;
const int XmsgImGroupSyncEvent::kUts4UsrFieldNumber;
const int XmsgImGroupSyncEvent::kGts4GroupFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImGroupSyncEvent::XmsgImGroupSyncEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupSyncEvent();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImGroupSyncEvent)
}
XmsgImGroupSyncEvent::XmsgImGroupSyncEvent(const XmsgImGroupSyncEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  info_.MergeFrom(from.info_);
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cgt().size() > 0) {
    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  oper_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.oper().size() > 0) {
    oper_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oper_);
  }
  ::memcpy(&ver4usr_, &from.ver4usr_,
    static_cast<size_t>(reinterpret_cast<char*>(&gts4group_) -
    reinterpret_cast<char*>(&ver4usr_)) + sizeof(gts4group_));
  // @@protoc_insertion_point(copy_constructor:XmsgImGroupSyncEvent)
}

void XmsgImGroupSyncEvent::SharedCtor() {
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  oper_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ver4usr_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gts4group_) -
      reinterpret_cast<char*>(&ver4usr_)) + sizeof(gts4group_));
  _cached_size_ = 0;
}

XmsgImGroupSyncEvent::~XmsgImGroupSyncEvent() {
  // @@protoc_insertion_point(destructor:XmsgImGroupSyncEvent)
  SharedDtor();
}

void XmsgImGroupSyncEvent::SharedDtor() {
  cgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  oper_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgImGroupSyncEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImGroupSyncEvent::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImGroupSyncEvent& XmsgImGroupSyncEvent::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupSyncEvent();
  return *internal_default_instance();
}

XmsgImGroupSyncEvent* XmsgImGroupSyncEvent::New(::google::protobuf::Arena* arena) const {
  XmsgImGroupSyncEvent* n = new XmsgImGroupSyncEvent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImGroupSyncEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImGroupSyncEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  info_.Clear();
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  oper_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ver4usr_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gts4group_) -
      reinterpret_cast<char*>(&ver4usr_)) + sizeof(gts4group_));
  _internal_metadata_.Clear();
}

bool XmsgImGroupSyncEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImGroupSyncEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cgt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cgt().data(), static_cast<int>(this->cgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupSyncEvent.cgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string oper = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oper()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->oper().data(), static_cast<int>(this->oper().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupSyncEvent.oper"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> info = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          XmsgImGroupSyncEvent_InfoEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImGroupSyncEvent_InfoEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&info_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupSyncEvent.InfoEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupSyncEvent.InfoEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 ver4usr = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ver4usr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 gts4usr = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gts4usr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 uts4usr = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uts4usr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 gts4group = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gts4group_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImGroupSyncEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImGroupSyncEvent)
  return false;
#undef DO_
}

void XmsgImGroupSyncEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImGroupSyncEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupSyncEvent.cgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cgt(), output);
  }

  // string oper = 2;
  if (this->oper().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oper().data(), static_cast<int>(this->oper().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupSyncEvent.oper");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->oper(), output);
  }

  // map<string, string> info = 3;
  if (!this->info().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupSyncEvent.InfoEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupSyncEvent.InfoEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->info().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->info().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImGroupSyncEvent_InfoEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(info_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImGroupSyncEvent_InfoEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it) {
        entry.reset(info_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // uint64 ver4usr = 4;
  if (this->ver4usr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->ver4usr(), output);
  }

  // uint64 gts4usr = 5;
  if (this->gts4usr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->gts4usr(), output);
  }

  // uint64 uts4usr = 6;
  if (this->uts4usr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->uts4usr(), output);
  }

  // uint64 gts4group = 7;
  if (this->gts4group() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->gts4group(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImGroupSyncEvent)
}

::google::protobuf::uint8* XmsgImGroupSyncEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImGroupSyncEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupSyncEvent.cgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cgt(), target);
  }

  // string oper = 2;
  if (this->oper().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oper().data(), static_cast<int>(this->oper().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupSyncEvent.oper");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->oper(), target);
  }

  // map<string, string> info = 3;
  if (!this->info().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupSyncEvent.InfoEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupSyncEvent.InfoEntry.value");
      }
    };

    if (deterministic &&
        this->info().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->info().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImGroupSyncEvent_InfoEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(info_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImGroupSyncEvent_InfoEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it) {
        entry.reset(info_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // uint64 ver4usr = 4;
  if (this->ver4usr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->ver4usr(), target);
  }

  // uint64 gts4usr = 5;
  if (this->gts4usr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->gts4usr(), target);
  }

  // uint64 uts4usr = 6;
  if (this->uts4usr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->uts4usr(), target);
  }

  // uint64 gts4group = 7;
  if (this->gts4group() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->gts4group(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImGroupSyncEvent)
  return target;
}

size_t XmsgImGroupSyncEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImGroupSyncEvent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> info = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->info_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImGroupSyncEvent_InfoEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->info().begin();
        it != this->info().end(); ++it) {
      entry.reset(info_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cgt());
  }

  // string oper = 2;
  if (this->oper().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->oper());
  }

  // uint64 ver4usr = 4;
  if (this->ver4usr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ver4usr());
  }

  // uint64 gts4usr = 5;
  if (this->gts4usr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gts4usr());
  }

  // uint64 uts4usr = 6;
  if (this->uts4usr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uts4usr());
  }

  // uint64 gts4group = 7;
  if (this->gts4group() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gts4group());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImGroupSyncEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImGroupSyncEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImGroupSyncEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImGroupSyncEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImGroupSyncEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImGroupSyncEvent)
    MergeFrom(*source);
  }
}

void XmsgImGroupSyncEvent::MergeFrom(const XmsgImGroupSyncEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImGroupSyncEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  info_.MergeFrom(from.info_);
  if (from.cgt().size() > 0) {

    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  if (from.oper().size() > 0) {

    oper_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oper_);
  }
  if (from.ver4usr() != 0) {
    set_ver4usr(from.ver4usr());
  }
  if (from.gts4usr() != 0) {
    set_gts4usr(from.gts4usr());
  }
  if (from.uts4usr() != 0) {
    set_uts4usr(from.uts4usr());
  }
  if (from.gts4group() != 0) {
    set_gts4group(from.gts4group());
  }
}

void XmsgImGroupSyncEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImGroupSyncEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImGroupSyncEvent::CopyFrom(const XmsgImGroupSyncEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImGroupSyncEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImGroupSyncEvent::IsInitialized() const {
  return true;
}

void XmsgImGroupSyncEvent::Swap(XmsgImGroupSyncEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImGroupSyncEvent::InternalSwap(XmsgImGroupSyncEvent* other) {
  using std::swap;
  info_.Swap(&other->info_);
  cgt_.Swap(&other->cgt_);
  oper_.Swap(&other->oper_);
  swap(ver4usr_, other->ver4usr_);
  swap(gts4usr_, other->gts4usr_);
  swap(uts4usr_, other->uts4usr_);
  swap(gts4group_, other->gts4group_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImGroupSyncEvent::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImGroupSyncNotice::InitAsDefaultInstance() {
  ::_XmsgImGroupSyncNotice_default_instance_._instance.get_mutable()->event_ = const_cast< ::XmsgImGroupSyncEvent*>(
      ::XmsgImGroupSyncEvent::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImGroupSyncNotice::kEventFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImGroupSyncNotice::XmsgImGroupSyncNotice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupSyncNotice();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImGroupSyncNotice)
}
XmsgImGroupSyncNotice::XmsgImGroupSyncNotice(const XmsgImGroupSyncNotice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_event()) {
    event_ = new ::XmsgImGroupSyncEvent(*from.event_);
  } else {
    event_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:XmsgImGroupSyncNotice)
}

void XmsgImGroupSyncNotice::SharedCtor() {
  event_ = NULL;
  _cached_size_ = 0;
}

XmsgImGroupSyncNotice::~XmsgImGroupSyncNotice() {
  // @@protoc_insertion_point(destructor:XmsgImGroupSyncNotice)
  SharedDtor();
}

void XmsgImGroupSyncNotice::SharedDtor() {
  if (this != internal_default_instance()) delete event_;
}

void XmsgImGroupSyncNotice::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImGroupSyncNotice::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImGroupSyncNotice& XmsgImGroupSyncNotice::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupSyncNotice();
  return *internal_default_instance();
}

XmsgImGroupSyncNotice* XmsgImGroupSyncNotice::New(::google::protobuf::Arena* arena) const {
  XmsgImGroupSyncNotice* n = new XmsgImGroupSyncNotice;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImGroupSyncNotice::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImGroupSyncNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && event_ != NULL) {
    delete event_;
  }
  event_ = NULL;
  _internal_metadata_.Clear();
}

bool XmsgImGroupSyncNotice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImGroupSyncNotice)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .XmsgImGroupSyncEvent event = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_event()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImGroupSyncNotice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImGroupSyncNotice)
  return false;
#undef DO_
}

void XmsgImGroupSyncNotice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImGroupSyncNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .XmsgImGroupSyncEvent event = 1;
  if (this->has_event()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->event_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImGroupSyncNotice)
}

::google::protobuf::uint8* XmsgImGroupSyncNotice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImGroupSyncNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .XmsgImGroupSyncEvent event = 1;
  if (this->has_event()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->event_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImGroupSyncNotice)
  return target;
}

size_t XmsgImGroupSyncNotice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImGroupSyncNotice)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .XmsgImGroupSyncEvent event = 1;
  if (this->has_event()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->event_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImGroupSyncNotice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImGroupSyncNotice)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImGroupSyncNotice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImGroupSyncNotice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImGroupSyncNotice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImGroupSyncNotice)
    MergeFrom(*source);
  }
}

void XmsgImGroupSyncNotice::MergeFrom(const XmsgImGroupSyncNotice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImGroupSyncNotice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_event()) {
    mutable_event()->::XmsgImGroupSyncEvent::MergeFrom(from.event());
  }
}

void XmsgImGroupSyncNotice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImGroupSyncNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImGroupSyncNotice::CopyFrom(const XmsgImGroupSyncNotice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImGroupSyncNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImGroupSyncNotice::IsInitialized() const {
  return true;
}

void XmsgImGroupSyncNotice::Swap(XmsgImGroupSyncNotice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImGroupSyncNotice::InternalSwap(XmsgImGroupSyncNotice* other) {
  using std::swap;
  swap(event_, other->event_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImGroupSyncNotice::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgImGroupSyncGroupReq_ExtEntry_DoNotUse::XmsgImGroupSyncGroupReq_ExtEntry_DoNotUse() {}
XmsgImGroupSyncGroupReq_ExtEntry_DoNotUse::XmsgImGroupSyncGroupReq_ExtEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImGroupSyncGroupReq_ExtEntry_DoNotUse::MergeFrom(const XmsgImGroupSyncGroupReq_ExtEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImGroupSyncGroupReq_ExtEntry_DoNotUse::GetMetadata() const {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[16];
}
void XmsgImGroupSyncGroupReq_ExtEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImGroupSyncGroupReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImGroupSyncGroupReq::kCgtFieldNumber;
const int XmsgImGroupSyncGroupReq::kVerFieldNumber;
const int XmsgImGroupSyncGroupReq::kExtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImGroupSyncGroupReq::XmsgImGroupSyncGroupReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupSyncGroupReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImGroupSyncGroupReq)
}
XmsgImGroupSyncGroupReq::XmsgImGroupSyncGroupReq(const XmsgImGroupSyncGroupReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ext_.MergeFrom(from.ext_);
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cgt().size() > 0) {
    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  ver_ = from.ver_;
  // @@protoc_insertion_point(copy_constructor:XmsgImGroupSyncGroupReq)
}

void XmsgImGroupSyncGroupReq::SharedCtor() {
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ver_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

XmsgImGroupSyncGroupReq::~XmsgImGroupSyncGroupReq() {
  // @@protoc_insertion_point(destructor:XmsgImGroupSyncGroupReq)
  SharedDtor();
}

void XmsgImGroupSyncGroupReq::SharedDtor() {
  cgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgImGroupSyncGroupReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImGroupSyncGroupReq::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImGroupSyncGroupReq& XmsgImGroupSyncGroupReq::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupSyncGroupReq();
  return *internal_default_instance();
}

XmsgImGroupSyncGroupReq* XmsgImGroupSyncGroupReq::New(::google::protobuf::Arena* arena) const {
  XmsgImGroupSyncGroupReq* n = new XmsgImGroupSyncGroupReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImGroupSyncGroupReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImGroupSyncGroupReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ext_.Clear();
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ver_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool XmsgImGroupSyncGroupReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImGroupSyncGroupReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cgt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cgt().data(), static_cast<int>(this->cgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupSyncGroupReq.cgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 ver = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ver_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> ext = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          XmsgImGroupSyncGroupReq_ExtEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImGroupSyncGroupReq_ExtEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&ext_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupSyncGroupReq.ExtEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupSyncGroupReq.ExtEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImGroupSyncGroupReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImGroupSyncGroupReq)
  return false;
#undef DO_
}

void XmsgImGroupSyncGroupReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImGroupSyncGroupReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupSyncGroupReq.cgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cgt(), output);
  }

  // uint64 ver = 2;
  if (this->ver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->ver(), output);
  }

  // map<string, string> ext = 3;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupSyncGroupReq.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupSyncGroupReq.ExtEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImGroupSyncGroupReq_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImGroupSyncGroupReq_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImGroupSyncGroupReq)
}

::google::protobuf::uint8* XmsgImGroupSyncGroupReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImGroupSyncGroupReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupSyncGroupReq.cgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cgt(), target);
  }

  // uint64 ver = 2;
  if (this->ver() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->ver(), target);
  }

  // map<string, string> ext = 3;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupSyncGroupReq.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupSyncGroupReq.ExtEntry.value");
      }
    };

    if (deterministic &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImGroupSyncGroupReq_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImGroupSyncGroupReq_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImGroupSyncGroupReq)
  return target;
}

size_t XmsgImGroupSyncGroupReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImGroupSyncGroupReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> ext = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ext_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImGroupSyncGroupReq_ExtEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->ext().begin();
        it != this->ext().end(); ++it) {
      entry.reset(ext_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cgt());
  }

  // uint64 ver = 2;
  if (this->ver() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ver());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImGroupSyncGroupReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImGroupSyncGroupReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImGroupSyncGroupReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImGroupSyncGroupReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImGroupSyncGroupReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImGroupSyncGroupReq)
    MergeFrom(*source);
  }
}

void XmsgImGroupSyncGroupReq::MergeFrom(const XmsgImGroupSyncGroupReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImGroupSyncGroupReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ext_.MergeFrom(from.ext_);
  if (from.cgt().size() > 0) {

    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  if (from.ver() != 0) {
    set_ver(from.ver());
  }
}

void XmsgImGroupSyncGroupReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImGroupSyncGroupReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImGroupSyncGroupReq::CopyFrom(const XmsgImGroupSyncGroupReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImGroupSyncGroupReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImGroupSyncGroupReq::IsInitialized() const {
  return true;
}

void XmsgImGroupSyncGroupReq::Swap(XmsgImGroupSyncGroupReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImGroupSyncGroupReq::InternalSwap(XmsgImGroupSyncGroupReq* other) {
  using std::swap;
  ext_.Swap(&other->ext_);
  cgt_.Swap(&other->cgt_);
  swap(ver_, other->ver_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImGroupSyncGroupReq::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImGroupSyncGroupRsp::InitAsDefaultInstance() {
  ::_XmsgImGroupSyncGroupRsp_default_instance_._instance.get_mutable()->info_ = const_cast< ::XmsgImGroupSyncGroupEventInfo*>(
      ::XmsgImGroupSyncGroupEventInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImGroupSyncGroupRsp::kInfoFieldNumber;
const int XmsgImGroupSyncGroupRsp::kMemberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImGroupSyncGroupRsp::XmsgImGroupSyncGroupRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupSyncGroupRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImGroupSyncGroupRsp)
}
XmsgImGroupSyncGroupRsp::XmsgImGroupSyncGroupRsp(const XmsgImGroupSyncGroupRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      member_(from.member_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    info_ = new ::XmsgImGroupSyncGroupEventInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:XmsgImGroupSyncGroupRsp)
}

void XmsgImGroupSyncGroupRsp::SharedCtor() {
  info_ = NULL;
  _cached_size_ = 0;
}

XmsgImGroupSyncGroupRsp::~XmsgImGroupSyncGroupRsp() {
  // @@protoc_insertion_point(destructor:XmsgImGroupSyncGroupRsp)
  SharedDtor();
}

void XmsgImGroupSyncGroupRsp::SharedDtor() {
  if (this != internal_default_instance()) delete info_;
}

void XmsgImGroupSyncGroupRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImGroupSyncGroupRsp::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImGroupSyncGroupRsp& XmsgImGroupSyncGroupRsp::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupSyncGroupRsp();
  return *internal_default_instance();
}

XmsgImGroupSyncGroupRsp* XmsgImGroupSyncGroupRsp::New(::google::protobuf::Arena* arena) const {
  XmsgImGroupSyncGroupRsp* n = new XmsgImGroupSyncGroupRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImGroupSyncGroupRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImGroupSyncGroupRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  member_.Clear();
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
  _internal_metadata_.Clear();
}

bool XmsgImGroupSyncGroupRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImGroupSyncGroupRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .XmsgImGroupSyncGroupEventInfo info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .XmsgImGroupSyncGroupEventMember member = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_member()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImGroupSyncGroupRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImGroupSyncGroupRsp)
  return false;
#undef DO_
}

void XmsgImGroupSyncGroupRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImGroupSyncGroupRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .XmsgImGroupSyncGroupEventInfo info = 1;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->info_, output);
  }

  // repeated .XmsgImGroupSyncGroupEventMember member = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->member_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->member(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImGroupSyncGroupRsp)
}

::google::protobuf::uint8* XmsgImGroupSyncGroupRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImGroupSyncGroupRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .XmsgImGroupSyncGroupEventInfo info = 1;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->info_, deterministic, target);
  }

  // repeated .XmsgImGroupSyncGroupEventMember member = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->member_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->member(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImGroupSyncGroupRsp)
  return target;
}

size_t XmsgImGroupSyncGroupRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImGroupSyncGroupRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .XmsgImGroupSyncGroupEventMember member = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->member_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->member(static_cast<int>(i)));
    }
  }

  // .XmsgImGroupSyncGroupEventInfo info = 1;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImGroupSyncGroupRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImGroupSyncGroupRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImGroupSyncGroupRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImGroupSyncGroupRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImGroupSyncGroupRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImGroupSyncGroupRsp)
    MergeFrom(*source);
  }
}

void XmsgImGroupSyncGroupRsp::MergeFrom(const XmsgImGroupSyncGroupRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImGroupSyncGroupRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  member_.MergeFrom(from.member_);
  if (from.has_info()) {
    mutable_info()->::XmsgImGroupSyncGroupEventInfo::MergeFrom(from.info());
  }
}

void XmsgImGroupSyncGroupRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImGroupSyncGroupRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImGroupSyncGroupRsp::CopyFrom(const XmsgImGroupSyncGroupRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImGroupSyncGroupRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImGroupSyncGroupRsp::IsInitialized() const {
  return true;
}

void XmsgImGroupSyncGroupRsp::Swap(XmsgImGroupSyncGroupRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImGroupSyncGroupRsp::InternalSwap(XmsgImGroupSyncGroupRsp* other) {
  using std::swap;
  member_.InternalSwap(&other->member_);
  swap(info_, other->info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImGroupSyncGroupRsp::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgImGroupSyncGroupEventInfo_InfoEntry_DoNotUse::XmsgImGroupSyncGroupEventInfo_InfoEntry_DoNotUse() {}
XmsgImGroupSyncGroupEventInfo_InfoEntry_DoNotUse::XmsgImGroupSyncGroupEventInfo_InfoEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImGroupSyncGroupEventInfo_InfoEntry_DoNotUse::MergeFrom(const XmsgImGroupSyncGroupEventInfo_InfoEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImGroupSyncGroupEventInfo_InfoEntry_DoNotUse::GetMetadata() const {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[19];
}
void XmsgImGroupSyncGroupEventInfo_InfoEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImGroupSyncGroupEventInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImGroupSyncGroupEventInfo::kInfoFieldNumber;
const int XmsgImGroupSyncGroupEventInfo::kVerFieldNumber;
const int XmsgImGroupSyncGroupEventInfo::kGtsFieldNumber;
const int XmsgImGroupSyncGroupEventInfo::kUtsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImGroupSyncGroupEventInfo::XmsgImGroupSyncGroupEventInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupSyncGroupEventInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImGroupSyncGroupEventInfo)
}
XmsgImGroupSyncGroupEventInfo::XmsgImGroupSyncGroupEventInfo(const XmsgImGroupSyncGroupEventInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  info_.MergeFrom(from.info_);
  ::memcpy(&ver_, &from.ver_,
    static_cast<size_t>(reinterpret_cast<char*>(&uts_) -
    reinterpret_cast<char*>(&ver_)) + sizeof(uts_));
  // @@protoc_insertion_point(copy_constructor:XmsgImGroupSyncGroupEventInfo)
}

void XmsgImGroupSyncGroupEventInfo::SharedCtor() {
  ::memset(&ver_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uts_) -
      reinterpret_cast<char*>(&ver_)) + sizeof(uts_));
  _cached_size_ = 0;
}

XmsgImGroupSyncGroupEventInfo::~XmsgImGroupSyncGroupEventInfo() {
  // @@protoc_insertion_point(destructor:XmsgImGroupSyncGroupEventInfo)
  SharedDtor();
}

void XmsgImGroupSyncGroupEventInfo::SharedDtor() {
}

void XmsgImGroupSyncGroupEventInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImGroupSyncGroupEventInfo::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImGroupSyncGroupEventInfo& XmsgImGroupSyncGroupEventInfo::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupSyncGroupEventInfo();
  return *internal_default_instance();
}

XmsgImGroupSyncGroupEventInfo* XmsgImGroupSyncGroupEventInfo::New(::google::protobuf::Arena* arena) const {
  XmsgImGroupSyncGroupEventInfo* n = new XmsgImGroupSyncGroupEventInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImGroupSyncGroupEventInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImGroupSyncGroupEventInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  info_.Clear();
  ::memset(&ver_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uts_) -
      reinterpret_cast<char*>(&ver_)) + sizeof(uts_));
  _internal_metadata_.Clear();
}

bool XmsgImGroupSyncGroupEventInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImGroupSyncGroupEventInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, string> info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          XmsgImGroupSyncGroupEventInfo_InfoEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImGroupSyncGroupEventInfo_InfoEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&info_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupSyncGroupEventInfo.InfoEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupSyncGroupEventInfo.InfoEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 ver = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ver_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 gts = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 uts = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImGroupSyncGroupEventInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImGroupSyncGroupEventInfo)
  return false;
#undef DO_
}

void XmsgImGroupSyncGroupEventInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImGroupSyncGroupEventInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> info = 1;
  if (!this->info().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupSyncGroupEventInfo.InfoEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupSyncGroupEventInfo.InfoEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->info().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->info().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImGroupSyncGroupEventInfo_InfoEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(info_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImGroupSyncGroupEventInfo_InfoEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it) {
        entry.reset(info_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // uint64 ver = 2;
  if (this->ver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->ver(), output);
  }

  // uint64 gts = 3;
  if (this->gts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->gts(), output);
  }

  // uint64 uts = 4;
  if (this->uts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->uts(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImGroupSyncGroupEventInfo)
}

::google::protobuf::uint8* XmsgImGroupSyncGroupEventInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImGroupSyncGroupEventInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> info = 1;
  if (!this->info().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupSyncGroupEventInfo.InfoEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupSyncGroupEventInfo.InfoEntry.value");
      }
    };

    if (deterministic &&
        this->info().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->info().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImGroupSyncGroupEventInfo_InfoEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(info_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImGroupSyncGroupEventInfo_InfoEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it) {
        entry.reset(info_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // uint64 ver = 2;
  if (this->ver() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->ver(), target);
  }

  // uint64 gts = 3;
  if (this->gts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->gts(), target);
  }

  // uint64 uts = 4;
  if (this->uts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->uts(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImGroupSyncGroupEventInfo)
  return target;
}

size_t XmsgImGroupSyncGroupEventInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImGroupSyncGroupEventInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> info = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->info_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImGroupSyncGroupEventInfo_InfoEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->info().begin();
        it != this->info().end(); ++it) {
      entry.reset(info_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // uint64 ver = 2;
  if (this->ver() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ver());
  }

  // uint64 gts = 3;
  if (this->gts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gts());
  }

  // uint64 uts = 4;
  if (this->uts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uts());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImGroupSyncGroupEventInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImGroupSyncGroupEventInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImGroupSyncGroupEventInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImGroupSyncGroupEventInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImGroupSyncGroupEventInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImGroupSyncGroupEventInfo)
    MergeFrom(*source);
  }
}

void XmsgImGroupSyncGroupEventInfo::MergeFrom(const XmsgImGroupSyncGroupEventInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImGroupSyncGroupEventInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  info_.MergeFrom(from.info_);
  if (from.ver() != 0) {
    set_ver(from.ver());
  }
  if (from.gts() != 0) {
    set_gts(from.gts());
  }
  if (from.uts() != 0) {
    set_uts(from.uts());
  }
}

void XmsgImGroupSyncGroupEventInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImGroupSyncGroupEventInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImGroupSyncGroupEventInfo::CopyFrom(const XmsgImGroupSyncGroupEventInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImGroupSyncGroupEventInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImGroupSyncGroupEventInfo::IsInitialized() const {
  return true;
}

void XmsgImGroupSyncGroupEventInfo::Swap(XmsgImGroupSyncGroupEventInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImGroupSyncGroupEventInfo::InternalSwap(XmsgImGroupSyncGroupEventInfo* other) {
  using std::swap;
  info_.Swap(&other->info_);
  swap(ver_, other->ver_);
  swap(gts_, other->gts_);
  swap(uts_, other->uts_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImGroupSyncGroupEventInfo::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgImGroupSyncGroupEventMember_InfoEntry_DoNotUse::XmsgImGroupSyncGroupEventMember_InfoEntry_DoNotUse() {}
XmsgImGroupSyncGroupEventMember_InfoEntry_DoNotUse::XmsgImGroupSyncGroupEventMember_InfoEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImGroupSyncGroupEventMember_InfoEntry_DoNotUse::MergeFrom(const XmsgImGroupSyncGroupEventMember_InfoEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImGroupSyncGroupEventMember_InfoEntry_DoNotUse::GetMetadata() const {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[21];
}
void XmsgImGroupSyncGroupEventMember_InfoEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImGroupSyncGroupEventMember::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImGroupSyncGroupEventMember::kCgtFieldNumber;
const int XmsgImGroupSyncGroupEventMember::kOperFieldNumber;
const int XmsgImGroupSyncGroupEventMember::kInfoFieldNumber;
const int XmsgImGroupSyncGroupEventMember::kVerFieldNumber;
const int XmsgImGroupSyncGroupEventMember::kGtsFieldNumber;
const int XmsgImGroupSyncGroupEventMember::kUtsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImGroupSyncGroupEventMember::XmsgImGroupSyncGroupEventMember()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupSyncGroupEventMember();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImGroupSyncGroupEventMember)
}
XmsgImGroupSyncGroupEventMember::XmsgImGroupSyncGroupEventMember(const XmsgImGroupSyncGroupEventMember& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  info_.MergeFrom(from.info_);
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cgt().size() > 0) {
    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  oper_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.oper().size() > 0) {
    oper_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oper_);
  }
  ::memcpy(&ver_, &from.ver_,
    static_cast<size_t>(reinterpret_cast<char*>(&uts_) -
    reinterpret_cast<char*>(&ver_)) + sizeof(uts_));
  // @@protoc_insertion_point(copy_constructor:XmsgImGroupSyncGroupEventMember)
}

void XmsgImGroupSyncGroupEventMember::SharedCtor() {
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  oper_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ver_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uts_) -
      reinterpret_cast<char*>(&ver_)) + sizeof(uts_));
  _cached_size_ = 0;
}

XmsgImGroupSyncGroupEventMember::~XmsgImGroupSyncGroupEventMember() {
  // @@protoc_insertion_point(destructor:XmsgImGroupSyncGroupEventMember)
  SharedDtor();
}

void XmsgImGroupSyncGroupEventMember::SharedDtor() {
  cgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  oper_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgImGroupSyncGroupEventMember::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImGroupSyncGroupEventMember::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImGroupSyncGroupEventMember& XmsgImGroupSyncGroupEventMember::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupSyncGroupEventMember();
  return *internal_default_instance();
}

XmsgImGroupSyncGroupEventMember* XmsgImGroupSyncGroupEventMember::New(::google::protobuf::Arena* arena) const {
  XmsgImGroupSyncGroupEventMember* n = new XmsgImGroupSyncGroupEventMember;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImGroupSyncGroupEventMember::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImGroupSyncGroupEventMember)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  info_.Clear();
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  oper_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ver_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uts_) -
      reinterpret_cast<char*>(&ver_)) + sizeof(uts_));
  _internal_metadata_.Clear();
}

bool XmsgImGroupSyncGroupEventMember::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImGroupSyncGroupEventMember)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cgt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cgt().data(), static_cast<int>(this->cgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupSyncGroupEventMember.cgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string oper = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oper()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->oper().data(), static_cast<int>(this->oper().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupSyncGroupEventMember.oper"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> info = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          XmsgImGroupSyncGroupEventMember_InfoEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImGroupSyncGroupEventMember_InfoEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&info_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupSyncGroupEventMember.InfoEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupSyncGroupEventMember.InfoEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 ver = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ver_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 gts = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 uts = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImGroupSyncGroupEventMember)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImGroupSyncGroupEventMember)
  return false;
#undef DO_
}

void XmsgImGroupSyncGroupEventMember::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImGroupSyncGroupEventMember)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupSyncGroupEventMember.cgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cgt(), output);
  }

  // string oper = 2;
  if (this->oper().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oper().data(), static_cast<int>(this->oper().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupSyncGroupEventMember.oper");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->oper(), output);
  }

  // map<string, string> info = 3;
  if (!this->info().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupSyncGroupEventMember.InfoEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupSyncGroupEventMember.InfoEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->info().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->info().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImGroupSyncGroupEventMember_InfoEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(info_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImGroupSyncGroupEventMember_InfoEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it) {
        entry.reset(info_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // uint64 ver = 4;
  if (this->ver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->ver(), output);
  }

  // uint64 gts = 5;
  if (this->gts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->gts(), output);
  }

  // uint64 uts = 6;
  if (this->uts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->uts(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImGroupSyncGroupEventMember)
}

::google::protobuf::uint8* XmsgImGroupSyncGroupEventMember::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImGroupSyncGroupEventMember)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupSyncGroupEventMember.cgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cgt(), target);
  }

  // string oper = 2;
  if (this->oper().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oper().data(), static_cast<int>(this->oper().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupSyncGroupEventMember.oper");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->oper(), target);
  }

  // map<string, string> info = 3;
  if (!this->info().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupSyncGroupEventMember.InfoEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupSyncGroupEventMember.InfoEntry.value");
      }
    };

    if (deterministic &&
        this->info().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->info().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImGroupSyncGroupEventMember_InfoEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(info_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImGroupSyncGroupEventMember_InfoEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it) {
        entry.reset(info_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // uint64 ver = 4;
  if (this->ver() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->ver(), target);
  }

  // uint64 gts = 5;
  if (this->gts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->gts(), target);
  }

  // uint64 uts = 6;
  if (this->uts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->uts(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImGroupSyncGroupEventMember)
  return target;
}

size_t XmsgImGroupSyncGroupEventMember::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImGroupSyncGroupEventMember)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> info = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->info_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImGroupSyncGroupEventMember_InfoEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->info().begin();
        it != this->info().end(); ++it) {
      entry.reset(info_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cgt());
  }

  // string oper = 2;
  if (this->oper().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->oper());
  }

  // uint64 ver = 4;
  if (this->ver() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ver());
  }

  // uint64 gts = 5;
  if (this->gts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gts());
  }

  // uint64 uts = 6;
  if (this->uts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uts());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImGroupSyncGroupEventMember::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImGroupSyncGroupEventMember)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImGroupSyncGroupEventMember* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImGroupSyncGroupEventMember>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImGroupSyncGroupEventMember)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImGroupSyncGroupEventMember)
    MergeFrom(*source);
  }
}

void XmsgImGroupSyncGroupEventMember::MergeFrom(const XmsgImGroupSyncGroupEventMember& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImGroupSyncGroupEventMember)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  info_.MergeFrom(from.info_);
  if (from.cgt().size() > 0) {

    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  if (from.oper().size() > 0) {

    oper_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oper_);
  }
  if (from.ver() != 0) {
    set_ver(from.ver());
  }
  if (from.gts() != 0) {
    set_gts(from.gts());
  }
  if (from.uts() != 0) {
    set_uts(from.uts());
  }
}

void XmsgImGroupSyncGroupEventMember::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImGroupSyncGroupEventMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImGroupSyncGroupEventMember::CopyFrom(const XmsgImGroupSyncGroupEventMember& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImGroupSyncGroupEventMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImGroupSyncGroupEventMember::IsInitialized() const {
  return true;
}

void XmsgImGroupSyncGroupEventMember::Swap(XmsgImGroupSyncGroupEventMember* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImGroupSyncGroupEventMember::InternalSwap(XmsgImGroupSyncGroupEventMember* other) {
  using std::swap;
  info_.Swap(&other->info_);
  cgt_.Swap(&other->cgt_);
  oper_.Swap(&other->oper_);
  swap(ver_, other->ver_);
  swap(gts_, other->gts_);
  swap(uts_, other->uts_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImGroupSyncGroupEventMember::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImGroupEventNotice::InitAsDefaultInstance() {
  ::_XmsgImGroupEventNotice_default_instance_._instance.get_mutable()->info_ = const_cast< ::XmsgImGroupSyncGroupEventInfo*>(
      ::XmsgImGroupSyncGroupEventInfo::internal_default_instance());
  ::_XmsgImGroupEventNotice_default_instance_._instance.get_mutable()->member_ = const_cast< ::XmsgImGroupSyncGroupEventMember*>(
      ::XmsgImGroupSyncGroupEventMember::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImGroupEventNotice::kInfoFieldNumber;
const int XmsgImGroupEventNotice::kMemberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImGroupEventNotice::XmsgImGroupEventNotice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupEventNotice();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImGroupEventNotice)
}
XmsgImGroupEventNotice::XmsgImGroupEventNotice(const XmsgImGroupEventNotice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    info_ = new ::XmsgImGroupSyncGroupEventInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  if (from.has_member()) {
    member_ = new ::XmsgImGroupSyncGroupEventMember(*from.member_);
  } else {
    member_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:XmsgImGroupEventNotice)
}

void XmsgImGroupEventNotice::SharedCtor() {
  ::memset(&info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&member_) -
      reinterpret_cast<char*>(&info_)) + sizeof(member_));
  _cached_size_ = 0;
}

XmsgImGroupEventNotice::~XmsgImGroupEventNotice() {
  // @@protoc_insertion_point(destructor:XmsgImGroupEventNotice)
  SharedDtor();
}

void XmsgImGroupEventNotice::SharedDtor() {
  if (this != internal_default_instance()) delete info_;
  if (this != internal_default_instance()) delete member_;
}

void XmsgImGroupEventNotice::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImGroupEventNotice::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImGroupEventNotice& XmsgImGroupEventNotice::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupEventNotice();
  return *internal_default_instance();
}

XmsgImGroupEventNotice* XmsgImGroupEventNotice::New(::google::protobuf::Arena* arena) const {
  XmsgImGroupEventNotice* n = new XmsgImGroupEventNotice;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImGroupEventNotice::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImGroupEventNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
  if (GetArenaNoVirtual() == NULL && member_ != NULL) {
    delete member_;
  }
  member_ = NULL;
  _internal_metadata_.Clear();
}

bool XmsgImGroupEventNotice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImGroupEventNotice)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .XmsgImGroupSyncGroupEventInfo info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .XmsgImGroupSyncGroupEventMember member = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_member()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImGroupEventNotice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImGroupEventNotice)
  return false;
#undef DO_
}

void XmsgImGroupEventNotice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImGroupEventNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .XmsgImGroupSyncGroupEventInfo info = 1;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->info_, output);
  }

  // .XmsgImGroupSyncGroupEventMember member = 2;
  if (this->has_member()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->member_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImGroupEventNotice)
}

::google::protobuf::uint8* XmsgImGroupEventNotice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImGroupEventNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .XmsgImGroupSyncGroupEventInfo info = 1;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->info_, deterministic, target);
  }

  // .XmsgImGroupSyncGroupEventMember member = 2;
  if (this->has_member()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->member_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImGroupEventNotice)
  return target;
}

size_t XmsgImGroupEventNotice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImGroupEventNotice)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .XmsgImGroupSyncGroupEventInfo info = 1;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->info_);
  }

  // .XmsgImGroupSyncGroupEventMember member = 2;
  if (this->has_member()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->member_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImGroupEventNotice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImGroupEventNotice)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImGroupEventNotice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImGroupEventNotice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImGroupEventNotice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImGroupEventNotice)
    MergeFrom(*source);
  }
}

void XmsgImGroupEventNotice::MergeFrom(const XmsgImGroupEventNotice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImGroupEventNotice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_info()) {
    mutable_info()->::XmsgImGroupSyncGroupEventInfo::MergeFrom(from.info());
  }
  if (from.has_member()) {
    mutable_member()->::XmsgImGroupSyncGroupEventMember::MergeFrom(from.member());
  }
}

void XmsgImGroupEventNotice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImGroupEventNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImGroupEventNotice::CopyFrom(const XmsgImGroupEventNotice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImGroupEventNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImGroupEventNotice::IsInitialized() const {
  return true;
}

void XmsgImGroupEventNotice::Swap(XmsgImGroupEventNotice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImGroupEventNotice::InternalSwap(XmsgImGroupEventNotice* other) {
  using std::swap;
  swap(info_, other->info_);
  swap(member_, other->member_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImGroupEventNotice::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImGroupInfoQueryReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImGroupInfoQueryReq::kCgtFieldNumber;
const int XmsgImGroupInfoQueryReq::kMemberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImGroupInfoQueryReq::XmsgImGroupInfoQueryReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupInfoQueryReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImGroupInfoQueryReq)
}
XmsgImGroupInfoQueryReq::XmsgImGroupInfoQueryReq(const XmsgImGroupInfoQueryReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cgt().size() > 0) {
    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  member_ = from.member_;
  // @@protoc_insertion_point(copy_constructor:XmsgImGroupInfoQueryReq)
}

void XmsgImGroupInfoQueryReq::SharedCtor() {
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  member_ = false;
  _cached_size_ = 0;
}

XmsgImGroupInfoQueryReq::~XmsgImGroupInfoQueryReq() {
  // @@protoc_insertion_point(destructor:XmsgImGroupInfoQueryReq)
  SharedDtor();
}

void XmsgImGroupInfoQueryReq::SharedDtor() {
  cgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgImGroupInfoQueryReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImGroupInfoQueryReq::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImGroupInfoQueryReq& XmsgImGroupInfoQueryReq::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupInfoQueryReq();
  return *internal_default_instance();
}

XmsgImGroupInfoQueryReq* XmsgImGroupInfoQueryReq::New(::google::protobuf::Arena* arena) const {
  XmsgImGroupInfoQueryReq* n = new XmsgImGroupInfoQueryReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImGroupInfoQueryReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImGroupInfoQueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  member_ = false;
  _internal_metadata_.Clear();
}

bool XmsgImGroupInfoQueryReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImGroupInfoQueryReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cgt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cgt().data(), static_cast<int>(this->cgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupInfoQueryReq.cgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool member = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &member_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImGroupInfoQueryReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImGroupInfoQueryReq)
  return false;
#undef DO_
}

void XmsgImGroupInfoQueryReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImGroupInfoQueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupInfoQueryReq.cgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cgt(), output);
  }

  // bool member = 2;
  if (this->member() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->member(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImGroupInfoQueryReq)
}

::google::protobuf::uint8* XmsgImGroupInfoQueryReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImGroupInfoQueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupInfoQueryReq.cgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cgt(), target);
  }

  // bool member = 2;
  if (this->member() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->member(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImGroupInfoQueryReq)
  return target;
}

size_t XmsgImGroupInfoQueryReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImGroupInfoQueryReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string cgt = 1;
  if (this->cgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cgt());
  }

  // bool member = 2;
  if (this->member() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImGroupInfoQueryReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImGroupInfoQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImGroupInfoQueryReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImGroupInfoQueryReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImGroupInfoQueryReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImGroupInfoQueryReq)
    MergeFrom(*source);
  }
}

void XmsgImGroupInfoQueryReq::MergeFrom(const XmsgImGroupInfoQueryReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImGroupInfoQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cgt().size() > 0) {

    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  if (from.member() != 0) {
    set_member(from.member());
  }
}

void XmsgImGroupInfoQueryReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImGroupInfoQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImGroupInfoQueryReq::CopyFrom(const XmsgImGroupInfoQueryReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImGroupInfoQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImGroupInfoQueryReq::IsInitialized() const {
  return true;
}

void XmsgImGroupInfoQueryReq::Swap(XmsgImGroupInfoQueryReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImGroupInfoQueryReq::InternalSwap(XmsgImGroupInfoQueryReq* other) {
  using std::swap;
  cgt_.Swap(&other->cgt_);
  swap(member_, other->member_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImGroupInfoQueryReq::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImGroupInfoQueryRsp::InitAsDefaultInstance() {
  ::_XmsgImGroupInfoQueryRsp_default_instance_._instance.get_mutable()->info_ = const_cast< ::XmsgImGroupInfoSelfInfo*>(
      ::XmsgImGroupInfoSelfInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImGroupInfoQueryRsp::kInfoFieldNumber;
const int XmsgImGroupInfoQueryRsp::kMemberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImGroupInfoQueryRsp::XmsgImGroupInfoQueryRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupInfoQueryRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImGroupInfoQueryRsp)
}
XmsgImGroupInfoQueryRsp::XmsgImGroupInfoQueryRsp(const XmsgImGroupInfoQueryRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      member_(from.member_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    info_ = new ::XmsgImGroupInfoSelfInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:XmsgImGroupInfoQueryRsp)
}

void XmsgImGroupInfoQueryRsp::SharedCtor() {
  info_ = NULL;
  _cached_size_ = 0;
}

XmsgImGroupInfoQueryRsp::~XmsgImGroupInfoQueryRsp() {
  // @@protoc_insertion_point(destructor:XmsgImGroupInfoQueryRsp)
  SharedDtor();
}

void XmsgImGroupInfoQueryRsp::SharedDtor() {
  if (this != internal_default_instance()) delete info_;
}

void XmsgImGroupInfoQueryRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImGroupInfoQueryRsp::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImGroupInfoQueryRsp& XmsgImGroupInfoQueryRsp::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupInfoQueryRsp();
  return *internal_default_instance();
}

XmsgImGroupInfoQueryRsp* XmsgImGroupInfoQueryRsp::New(::google::protobuf::Arena* arena) const {
  XmsgImGroupInfoQueryRsp* n = new XmsgImGroupInfoQueryRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImGroupInfoQueryRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImGroupInfoQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  member_.Clear();
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
  _internal_metadata_.Clear();
}

bool XmsgImGroupInfoQueryRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImGroupInfoQueryRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .XmsgImGroupInfoSelfInfo info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .XmsgImGroupInfoMember member = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_member()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImGroupInfoQueryRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImGroupInfoQueryRsp)
  return false;
#undef DO_
}

void XmsgImGroupInfoQueryRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImGroupInfoQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .XmsgImGroupInfoSelfInfo info = 1;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->info_, output);
  }

  // repeated .XmsgImGroupInfoMember member = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->member_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->member(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImGroupInfoQueryRsp)
}

::google::protobuf::uint8* XmsgImGroupInfoQueryRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImGroupInfoQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .XmsgImGroupInfoSelfInfo info = 1;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->info_, deterministic, target);
  }

  // repeated .XmsgImGroupInfoMember member = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->member_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->member(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImGroupInfoQueryRsp)
  return target;
}

size_t XmsgImGroupInfoQueryRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImGroupInfoQueryRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .XmsgImGroupInfoMember member = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->member_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->member(static_cast<int>(i)));
    }
  }

  // .XmsgImGroupInfoSelfInfo info = 1;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImGroupInfoQueryRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImGroupInfoQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImGroupInfoQueryRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImGroupInfoQueryRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImGroupInfoQueryRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImGroupInfoQueryRsp)
    MergeFrom(*source);
  }
}

void XmsgImGroupInfoQueryRsp::MergeFrom(const XmsgImGroupInfoQueryRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImGroupInfoQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  member_.MergeFrom(from.member_);
  if (from.has_info()) {
    mutable_info()->::XmsgImGroupInfoSelfInfo::MergeFrom(from.info());
  }
}

void XmsgImGroupInfoQueryRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImGroupInfoQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImGroupInfoQueryRsp::CopyFrom(const XmsgImGroupInfoQueryRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImGroupInfoQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImGroupInfoQueryRsp::IsInitialized() const {
  return true;
}

void XmsgImGroupInfoQueryRsp::Swap(XmsgImGroupInfoQueryRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImGroupInfoQueryRsp::InternalSwap(XmsgImGroupInfoQueryRsp* other) {
  using std::swap;
  member_.InternalSwap(&other->member_);
  swap(info_, other->info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImGroupInfoQueryRsp::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgImGroupInfoSelfInfo_InfoEntry_DoNotUse::XmsgImGroupInfoSelfInfo_InfoEntry_DoNotUse() {}
XmsgImGroupInfoSelfInfo_InfoEntry_DoNotUse::XmsgImGroupInfoSelfInfo_InfoEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImGroupInfoSelfInfo_InfoEntry_DoNotUse::MergeFrom(const XmsgImGroupInfoSelfInfo_InfoEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImGroupInfoSelfInfo_InfoEntry_DoNotUse::GetMetadata() const {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[26];
}
void XmsgImGroupInfoSelfInfo_InfoEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImGroupInfoSelfInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImGroupInfoSelfInfo::kCgtFieldNumber;
const int XmsgImGroupInfoSelfInfo::kEnableFieldNumber;
const int XmsgImGroupInfoSelfInfo::kInfoFieldNumber;
const int XmsgImGroupInfoSelfInfo::kVerFieldNumber;
const int XmsgImGroupInfoSelfInfo::kGtsFieldNumber;
const int XmsgImGroupInfoSelfInfo::kUtsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImGroupInfoSelfInfo::XmsgImGroupInfoSelfInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupInfoSelfInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImGroupInfoSelfInfo)
}
XmsgImGroupInfoSelfInfo::XmsgImGroupInfoSelfInfo(const XmsgImGroupInfoSelfInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  info_.MergeFrom(from.info_);
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cgt().size() > 0) {
    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  ::memcpy(&ver_, &from.ver_,
    static_cast<size_t>(reinterpret_cast<char*>(&enable_) -
    reinterpret_cast<char*>(&ver_)) + sizeof(enable_));
  // @@protoc_insertion_point(copy_constructor:XmsgImGroupInfoSelfInfo)
}

void XmsgImGroupInfoSelfInfo::SharedCtor() {
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ver_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enable_) -
      reinterpret_cast<char*>(&ver_)) + sizeof(enable_));
  _cached_size_ = 0;
}

XmsgImGroupInfoSelfInfo::~XmsgImGroupInfoSelfInfo() {
  // @@protoc_insertion_point(destructor:XmsgImGroupInfoSelfInfo)
  SharedDtor();
}

void XmsgImGroupInfoSelfInfo::SharedDtor() {
  cgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgImGroupInfoSelfInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImGroupInfoSelfInfo::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImGroupInfoSelfInfo& XmsgImGroupInfoSelfInfo::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupInfoSelfInfo();
  return *internal_default_instance();
}

XmsgImGroupInfoSelfInfo* XmsgImGroupInfoSelfInfo::New(::google::protobuf::Arena* arena) const {
  XmsgImGroupInfoSelfInfo* n = new XmsgImGroupInfoSelfInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImGroupInfoSelfInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImGroupInfoSelfInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  info_.Clear();
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ver_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enable_) -
      reinterpret_cast<char*>(&ver_)) + sizeof(enable_));
  _internal_metadata_.Clear();
}

bool XmsgImGroupInfoSelfInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImGroupInfoSelfInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cgt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cgt().data(), static_cast<int>(this->cgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupInfoSelfInfo.cgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool enable = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> info = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          XmsgImGroupInfoSelfInfo_InfoEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImGroupInfoSelfInfo_InfoEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&info_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupInfoSelfInfo.InfoEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupInfoSelfInfo.InfoEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 ver = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ver_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 gts = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 uts = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImGroupInfoSelfInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImGroupInfoSelfInfo)
  return false;
#undef DO_
}

void XmsgImGroupInfoSelfInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImGroupInfoSelfInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupInfoSelfInfo.cgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cgt(), output);
  }

  // bool enable = 2;
  if (this->enable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->enable(), output);
  }

  // map<string, string> info = 3;
  if (!this->info().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupInfoSelfInfo.InfoEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupInfoSelfInfo.InfoEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->info().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->info().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImGroupInfoSelfInfo_InfoEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(info_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImGroupInfoSelfInfo_InfoEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it) {
        entry.reset(info_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // uint64 ver = 4;
  if (this->ver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->ver(), output);
  }

  // uint64 gts = 5;
  if (this->gts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->gts(), output);
  }

  // uint64 uts = 6;
  if (this->uts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->uts(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImGroupInfoSelfInfo)
}

::google::protobuf::uint8* XmsgImGroupInfoSelfInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImGroupInfoSelfInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupInfoSelfInfo.cgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cgt(), target);
  }

  // bool enable = 2;
  if (this->enable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->enable(), target);
  }

  // map<string, string> info = 3;
  if (!this->info().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupInfoSelfInfo.InfoEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupInfoSelfInfo.InfoEntry.value");
      }
    };

    if (deterministic &&
        this->info().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->info().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImGroupInfoSelfInfo_InfoEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(info_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImGroupInfoSelfInfo_InfoEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it) {
        entry.reset(info_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // uint64 ver = 4;
  if (this->ver() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->ver(), target);
  }

  // uint64 gts = 5;
  if (this->gts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->gts(), target);
  }

  // uint64 uts = 6;
  if (this->uts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->uts(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImGroupInfoSelfInfo)
  return target;
}

size_t XmsgImGroupInfoSelfInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImGroupInfoSelfInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> info = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->info_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImGroupInfoSelfInfo_InfoEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->info().begin();
        it != this->info().end(); ++it) {
      entry.reset(info_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cgt());
  }

  // uint64 ver = 4;
  if (this->ver() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ver());
  }

  // uint64 gts = 5;
  if (this->gts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gts());
  }

  // uint64 uts = 6;
  if (this->uts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uts());
  }

  // bool enable = 2;
  if (this->enable() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImGroupInfoSelfInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImGroupInfoSelfInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImGroupInfoSelfInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImGroupInfoSelfInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImGroupInfoSelfInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImGroupInfoSelfInfo)
    MergeFrom(*source);
  }
}

void XmsgImGroupInfoSelfInfo::MergeFrom(const XmsgImGroupInfoSelfInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImGroupInfoSelfInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  info_.MergeFrom(from.info_);
  if (from.cgt().size() > 0) {

    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  if (from.ver() != 0) {
    set_ver(from.ver());
  }
  if (from.gts() != 0) {
    set_gts(from.gts());
  }
  if (from.uts() != 0) {
    set_uts(from.uts());
  }
  if (from.enable() != 0) {
    set_enable(from.enable());
  }
}

void XmsgImGroupInfoSelfInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImGroupInfoSelfInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImGroupInfoSelfInfo::CopyFrom(const XmsgImGroupInfoSelfInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImGroupInfoSelfInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImGroupInfoSelfInfo::IsInitialized() const {
  return true;
}

void XmsgImGroupInfoSelfInfo::Swap(XmsgImGroupInfoSelfInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImGroupInfoSelfInfo::InternalSwap(XmsgImGroupInfoSelfInfo* other) {
  using std::swap;
  info_.Swap(&other->info_);
  cgt_.Swap(&other->cgt_);
  swap(ver_, other->ver_);
  swap(gts_, other->gts_);
  swap(uts_, other->uts_);
  swap(enable_, other->enable_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImGroupInfoSelfInfo::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgImGroupInfoMember_InfoEntry_DoNotUse::XmsgImGroupInfoMember_InfoEntry_DoNotUse() {}
XmsgImGroupInfoMember_InfoEntry_DoNotUse::XmsgImGroupInfoMember_InfoEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImGroupInfoMember_InfoEntry_DoNotUse::MergeFrom(const XmsgImGroupInfoMember_InfoEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImGroupInfoMember_InfoEntry_DoNotUse::GetMetadata() const {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[28];
}
void XmsgImGroupInfoMember_InfoEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImGroupInfoMember::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImGroupInfoMember::kCgtFieldNumber;
const int XmsgImGroupInfoMember::kEnableFieldNumber;
const int XmsgImGroupInfoMember::kInfoFieldNumber;
const int XmsgImGroupInfoMember::kVerFieldNumber;
const int XmsgImGroupInfoMember::kGtsFieldNumber;
const int XmsgImGroupInfoMember::kUtsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImGroupInfoMember::XmsgImGroupInfoMember()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupInfoMember();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImGroupInfoMember)
}
XmsgImGroupInfoMember::XmsgImGroupInfoMember(const XmsgImGroupInfoMember& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  info_.MergeFrom(from.info_);
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cgt().size() > 0) {
    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  ::memcpy(&ver_, &from.ver_,
    static_cast<size_t>(reinterpret_cast<char*>(&enable_) -
    reinterpret_cast<char*>(&ver_)) + sizeof(enable_));
  // @@protoc_insertion_point(copy_constructor:XmsgImGroupInfoMember)
}

void XmsgImGroupInfoMember::SharedCtor() {
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ver_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enable_) -
      reinterpret_cast<char*>(&ver_)) + sizeof(enable_));
  _cached_size_ = 0;
}

XmsgImGroupInfoMember::~XmsgImGroupInfoMember() {
  // @@protoc_insertion_point(destructor:XmsgImGroupInfoMember)
  SharedDtor();
}

void XmsgImGroupInfoMember::SharedDtor() {
  cgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgImGroupInfoMember::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImGroupInfoMember::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImGroupInfoMember& XmsgImGroupInfoMember::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupInfoMember();
  return *internal_default_instance();
}

XmsgImGroupInfoMember* XmsgImGroupInfoMember::New(::google::protobuf::Arena* arena) const {
  XmsgImGroupInfoMember* n = new XmsgImGroupInfoMember;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImGroupInfoMember::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImGroupInfoMember)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  info_.Clear();
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ver_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enable_) -
      reinterpret_cast<char*>(&ver_)) + sizeof(enable_));
  _internal_metadata_.Clear();
}

bool XmsgImGroupInfoMember::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImGroupInfoMember)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cgt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cgt().data(), static_cast<int>(this->cgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupInfoMember.cgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool enable = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> info = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          XmsgImGroupInfoMember_InfoEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImGroupInfoMember_InfoEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&info_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupInfoMember.InfoEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupInfoMember.InfoEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 ver = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ver_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 gts = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 uts = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImGroupInfoMember)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImGroupInfoMember)
  return false;
#undef DO_
}

void XmsgImGroupInfoMember::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImGroupInfoMember)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupInfoMember.cgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cgt(), output);
  }

  // bool enable = 2;
  if (this->enable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->enable(), output);
  }

  // map<string, string> info = 3;
  if (!this->info().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupInfoMember.InfoEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupInfoMember.InfoEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->info().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->info().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImGroupInfoMember_InfoEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(info_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImGroupInfoMember_InfoEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it) {
        entry.reset(info_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // uint64 ver = 4;
  if (this->ver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->ver(), output);
  }

  // uint64 gts = 5;
  if (this->gts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->gts(), output);
  }

  // uint64 uts = 6;
  if (this->uts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->uts(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImGroupInfoMember)
}

::google::protobuf::uint8* XmsgImGroupInfoMember::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImGroupInfoMember)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupInfoMember.cgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cgt(), target);
  }

  // bool enable = 2;
  if (this->enable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->enable(), target);
  }

  // map<string, string> info = 3;
  if (!this->info().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupInfoMember.InfoEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupInfoMember.InfoEntry.value");
      }
    };

    if (deterministic &&
        this->info().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->info().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImGroupInfoMember_InfoEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(info_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImGroupInfoMember_InfoEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it) {
        entry.reset(info_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // uint64 ver = 4;
  if (this->ver() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->ver(), target);
  }

  // uint64 gts = 5;
  if (this->gts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->gts(), target);
  }

  // uint64 uts = 6;
  if (this->uts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->uts(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImGroupInfoMember)
  return target;
}

size_t XmsgImGroupInfoMember::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImGroupInfoMember)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> info = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->info_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImGroupInfoMember_InfoEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->info().begin();
        it != this->info().end(); ++it) {
      entry.reset(info_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cgt());
  }

  // uint64 ver = 4;
  if (this->ver() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ver());
  }

  // uint64 gts = 5;
  if (this->gts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gts());
  }

  // uint64 uts = 6;
  if (this->uts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uts());
  }

  // bool enable = 2;
  if (this->enable() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImGroupInfoMember::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImGroupInfoMember)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImGroupInfoMember* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImGroupInfoMember>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImGroupInfoMember)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImGroupInfoMember)
    MergeFrom(*source);
  }
}

void XmsgImGroupInfoMember::MergeFrom(const XmsgImGroupInfoMember& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImGroupInfoMember)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  info_.MergeFrom(from.info_);
  if (from.cgt().size() > 0) {

    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  if (from.ver() != 0) {
    set_ver(from.ver());
  }
  if (from.gts() != 0) {
    set_gts(from.gts());
  }
  if (from.uts() != 0) {
    set_uts(from.uts());
  }
  if (from.enable() != 0) {
    set_enable(from.enable());
  }
}

void XmsgImGroupInfoMember::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImGroupInfoMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImGroupInfoMember::CopyFrom(const XmsgImGroupInfoMember& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImGroupInfoMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImGroupInfoMember::IsInitialized() const {
  return true;
}

void XmsgImGroupInfoMember::Swap(XmsgImGroupInfoMember* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImGroupInfoMember::InternalSwap(XmsgImGroupInfoMember* other) {
  using std::swap;
  info_.Swap(&other->info_);
  cgt_.Swap(&other->cgt_);
  swap(ver_, other->ver_);
  swap(gts_, other->gts_);
  swap(uts_, other->uts_);
  swap(enable_, other->enable_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImGroupInfoMember::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgImGroupInfoUpdateReq_UpsertEntry_DoNotUse::XmsgImGroupInfoUpdateReq_UpsertEntry_DoNotUse() {}
XmsgImGroupInfoUpdateReq_UpsertEntry_DoNotUse::XmsgImGroupInfoUpdateReq_UpsertEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImGroupInfoUpdateReq_UpsertEntry_DoNotUse::MergeFrom(const XmsgImGroupInfoUpdateReq_UpsertEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImGroupInfoUpdateReq_UpsertEntry_DoNotUse::GetMetadata() const {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[30];
}
void XmsgImGroupInfoUpdateReq_UpsertEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImGroupInfoUpdateReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImGroupInfoUpdateReq::kCgtFieldNumber;
const int XmsgImGroupInfoUpdateReq::kUpsertFieldNumber;
const int XmsgImGroupInfoUpdateReq::kRemoveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImGroupInfoUpdateReq::XmsgImGroupInfoUpdateReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupInfoUpdateReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImGroupInfoUpdateReq)
}
XmsgImGroupInfoUpdateReq::XmsgImGroupInfoUpdateReq(const XmsgImGroupInfoUpdateReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      remove_(from.remove_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  upsert_.MergeFrom(from.upsert_);
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cgt().size() > 0) {
    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  // @@protoc_insertion_point(copy_constructor:XmsgImGroupInfoUpdateReq)
}

void XmsgImGroupInfoUpdateReq::SharedCtor() {
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

XmsgImGroupInfoUpdateReq::~XmsgImGroupInfoUpdateReq() {
  // @@protoc_insertion_point(destructor:XmsgImGroupInfoUpdateReq)
  SharedDtor();
}

void XmsgImGroupInfoUpdateReq::SharedDtor() {
  cgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgImGroupInfoUpdateReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImGroupInfoUpdateReq::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImGroupInfoUpdateReq& XmsgImGroupInfoUpdateReq::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupInfoUpdateReq();
  return *internal_default_instance();
}

XmsgImGroupInfoUpdateReq* XmsgImGroupInfoUpdateReq::New(::google::protobuf::Arena* arena) const {
  XmsgImGroupInfoUpdateReq* n = new XmsgImGroupInfoUpdateReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImGroupInfoUpdateReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImGroupInfoUpdateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  upsert_.Clear();
  remove_.Clear();
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool XmsgImGroupInfoUpdateReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImGroupInfoUpdateReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cgt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cgt().data(), static_cast<int>(this->cgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupInfoUpdateReq.cgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> upsert = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          XmsgImGroupInfoUpdateReq_UpsertEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImGroupInfoUpdateReq_UpsertEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&upsert_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupInfoUpdateReq.UpsertEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupInfoUpdateReq.UpsertEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string remove = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_remove()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->remove(this->remove_size() - 1).data(),
            static_cast<int>(this->remove(this->remove_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupInfoUpdateReq.remove"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImGroupInfoUpdateReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImGroupInfoUpdateReq)
  return false;
#undef DO_
}

void XmsgImGroupInfoUpdateReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImGroupInfoUpdateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupInfoUpdateReq.cgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cgt(), output);
  }

  // map<string, string> upsert = 2;
  if (!this->upsert().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupInfoUpdateReq.UpsertEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupInfoUpdateReq.UpsertEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->upsert().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->upsert().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->upsert().begin();
          it != this->upsert().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImGroupInfoUpdateReq_UpsertEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(upsert_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImGroupInfoUpdateReq_UpsertEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->upsert().begin();
          it != this->upsert().end(); ++it) {
        entry.reset(upsert_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // repeated string remove = 3;
  for (int i = 0, n = this->remove_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remove(i).data(), static_cast<int>(this->remove(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupInfoUpdateReq.remove");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->remove(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImGroupInfoUpdateReq)
}

::google::protobuf::uint8* XmsgImGroupInfoUpdateReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImGroupInfoUpdateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupInfoUpdateReq.cgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cgt(), target);
  }

  // map<string, string> upsert = 2;
  if (!this->upsert().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupInfoUpdateReq.UpsertEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupInfoUpdateReq.UpsertEntry.value");
      }
    };

    if (deterministic &&
        this->upsert().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->upsert().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->upsert().begin();
          it != this->upsert().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImGroupInfoUpdateReq_UpsertEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(upsert_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImGroupInfoUpdateReq_UpsertEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->upsert().begin();
          it != this->upsert().end(); ++it) {
        entry.reset(upsert_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // repeated string remove = 3;
  for (int i = 0, n = this->remove_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remove(i).data(), static_cast<int>(this->remove(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupInfoUpdateReq.remove");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->remove(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImGroupInfoUpdateReq)
  return target;
}

size_t XmsgImGroupInfoUpdateReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImGroupInfoUpdateReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> upsert = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->upsert_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImGroupInfoUpdateReq_UpsertEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->upsert().begin();
        it != this->upsert().end(); ++it) {
      entry.reset(upsert_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated string remove = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->remove_size());
  for (int i = 0, n = this->remove_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->remove(i));
  }

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cgt());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImGroupInfoUpdateReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImGroupInfoUpdateReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImGroupInfoUpdateReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImGroupInfoUpdateReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImGroupInfoUpdateReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImGroupInfoUpdateReq)
    MergeFrom(*source);
  }
}

void XmsgImGroupInfoUpdateReq::MergeFrom(const XmsgImGroupInfoUpdateReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImGroupInfoUpdateReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  upsert_.MergeFrom(from.upsert_);
  remove_.MergeFrom(from.remove_);
  if (from.cgt().size() > 0) {

    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
}

void XmsgImGroupInfoUpdateReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImGroupInfoUpdateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImGroupInfoUpdateReq::CopyFrom(const XmsgImGroupInfoUpdateReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImGroupInfoUpdateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImGroupInfoUpdateReq::IsInitialized() const {
  return true;
}

void XmsgImGroupInfoUpdateReq::Swap(XmsgImGroupInfoUpdateReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImGroupInfoUpdateReq::InternalSwap(XmsgImGroupInfoUpdateReq* other) {
  using std::swap;
  upsert_.Swap(&other->upsert_);
  remove_.InternalSwap(&other->remove_);
  cgt_.Swap(&other->cgt_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImGroupInfoUpdateReq::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgImGroupInfoUpdateRsp_ExtEntry_DoNotUse::XmsgImGroupInfoUpdateRsp_ExtEntry_DoNotUse() {}
XmsgImGroupInfoUpdateRsp_ExtEntry_DoNotUse::XmsgImGroupInfoUpdateRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImGroupInfoUpdateRsp_ExtEntry_DoNotUse::MergeFrom(const XmsgImGroupInfoUpdateRsp_ExtEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImGroupInfoUpdateRsp_ExtEntry_DoNotUse::GetMetadata() const {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[32];
}
void XmsgImGroupInfoUpdateRsp_ExtEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImGroupInfoUpdateRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImGroupInfoUpdateRsp::kExtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImGroupInfoUpdateRsp::XmsgImGroupInfoUpdateRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupInfoUpdateRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImGroupInfoUpdateRsp)
}
XmsgImGroupInfoUpdateRsp::XmsgImGroupInfoUpdateRsp(const XmsgImGroupInfoUpdateRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ext_.MergeFrom(from.ext_);
  // @@protoc_insertion_point(copy_constructor:XmsgImGroupInfoUpdateRsp)
}

void XmsgImGroupInfoUpdateRsp::SharedCtor() {
  _cached_size_ = 0;
}

XmsgImGroupInfoUpdateRsp::~XmsgImGroupInfoUpdateRsp() {
  // @@protoc_insertion_point(destructor:XmsgImGroupInfoUpdateRsp)
  SharedDtor();
}

void XmsgImGroupInfoUpdateRsp::SharedDtor() {
}

void XmsgImGroupInfoUpdateRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImGroupInfoUpdateRsp::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImGroupInfoUpdateRsp& XmsgImGroupInfoUpdateRsp::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupInfoUpdateRsp();
  return *internal_default_instance();
}

XmsgImGroupInfoUpdateRsp* XmsgImGroupInfoUpdateRsp::New(::google::protobuf::Arena* arena) const {
  XmsgImGroupInfoUpdateRsp* n = new XmsgImGroupInfoUpdateRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImGroupInfoUpdateRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImGroupInfoUpdateRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ext_.Clear();
  _internal_metadata_.Clear();
}

bool XmsgImGroupInfoUpdateRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImGroupInfoUpdateRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, string> ext = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          XmsgImGroupInfoUpdateRsp_ExtEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImGroupInfoUpdateRsp_ExtEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&ext_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupInfoUpdateRsp.ExtEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupInfoUpdateRsp.ExtEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImGroupInfoUpdateRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImGroupInfoUpdateRsp)
  return false;
#undef DO_
}

void XmsgImGroupInfoUpdateRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImGroupInfoUpdateRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ext = 1;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupInfoUpdateRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupInfoUpdateRsp.ExtEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImGroupInfoUpdateRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImGroupInfoUpdateRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImGroupInfoUpdateRsp)
}

::google::protobuf::uint8* XmsgImGroupInfoUpdateRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImGroupInfoUpdateRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ext = 1;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupInfoUpdateRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupInfoUpdateRsp.ExtEntry.value");
      }
    };

    if (deterministic &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImGroupInfoUpdateRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImGroupInfoUpdateRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImGroupInfoUpdateRsp)
  return target;
}

size_t XmsgImGroupInfoUpdateRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImGroupInfoUpdateRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> ext = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ext_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImGroupInfoUpdateRsp_ExtEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->ext().begin();
        it != this->ext().end(); ++it) {
      entry.reset(ext_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImGroupInfoUpdateRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImGroupInfoUpdateRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImGroupInfoUpdateRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImGroupInfoUpdateRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImGroupInfoUpdateRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImGroupInfoUpdateRsp)
    MergeFrom(*source);
  }
}

void XmsgImGroupInfoUpdateRsp::MergeFrom(const XmsgImGroupInfoUpdateRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImGroupInfoUpdateRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ext_.MergeFrom(from.ext_);
}

void XmsgImGroupInfoUpdateRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImGroupInfoUpdateRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImGroupInfoUpdateRsp::CopyFrom(const XmsgImGroupInfoUpdateRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImGroupInfoUpdateRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImGroupInfoUpdateRsp::IsInitialized() const {
  return true;
}

void XmsgImGroupInfoUpdateRsp::Swap(XmsgImGroupInfoUpdateRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImGroupInfoUpdateRsp::InternalSwap(XmsgImGroupInfoUpdateRsp* other) {
  using std::swap;
  ext_.Swap(&other->ext_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImGroupInfoUpdateRsp::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImGroupMsgRecvCfgReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImGroupMsgRecvCfgReq::kCgtFieldNumber;
const int XmsgImGroupMsgRecvCfgReq::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImGroupMsgRecvCfgReq::XmsgImGroupMsgRecvCfgReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupMsgRecvCfgReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImGroupMsgRecvCfgReq)
}
XmsgImGroupMsgRecvCfgReq::XmsgImGroupMsgRecvCfgReq(const XmsgImGroupMsgRecvCfgReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cgt().size() > 0) {
    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  // @@protoc_insertion_point(copy_constructor:XmsgImGroupMsgRecvCfgReq)
}

void XmsgImGroupMsgRecvCfgReq::SharedCtor() {
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

XmsgImGroupMsgRecvCfgReq::~XmsgImGroupMsgRecvCfgReq() {
  // @@protoc_insertion_point(destructor:XmsgImGroupMsgRecvCfgReq)
  SharedDtor();
}

void XmsgImGroupMsgRecvCfgReq::SharedDtor() {
  cgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgImGroupMsgRecvCfgReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImGroupMsgRecvCfgReq::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImGroupMsgRecvCfgReq& XmsgImGroupMsgRecvCfgReq::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupMsgRecvCfgReq();
  return *internal_default_instance();
}

XmsgImGroupMsgRecvCfgReq* XmsgImGroupMsgRecvCfgReq::New(::google::protobuf::Arena* arena) const {
  XmsgImGroupMsgRecvCfgReq* n = new XmsgImGroupMsgRecvCfgReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImGroupMsgRecvCfgReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImGroupMsgRecvCfgReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool XmsgImGroupMsgRecvCfgReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImGroupMsgRecvCfgReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cgt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cgt().data(), static_cast<int>(this->cgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupMsgRecvCfgReq.cgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupMsgRecvCfgReq.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImGroupMsgRecvCfgReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImGroupMsgRecvCfgReq)
  return false;
#undef DO_
}

void XmsgImGroupMsgRecvCfgReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImGroupMsgRecvCfgReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupMsgRecvCfgReq.cgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cgt(), output);
  }

  // string type = 2;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupMsgRecvCfgReq.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImGroupMsgRecvCfgReq)
}

::google::protobuf::uint8* XmsgImGroupMsgRecvCfgReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImGroupMsgRecvCfgReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupMsgRecvCfgReq.cgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cgt(), target);
  }

  // string type = 2;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupMsgRecvCfgReq.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImGroupMsgRecvCfgReq)
  return target;
}

size_t XmsgImGroupMsgRecvCfgReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImGroupMsgRecvCfgReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string cgt = 1;
  if (this->cgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cgt());
  }

  // string type = 2;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImGroupMsgRecvCfgReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImGroupMsgRecvCfgReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImGroupMsgRecvCfgReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImGroupMsgRecvCfgReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImGroupMsgRecvCfgReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImGroupMsgRecvCfgReq)
    MergeFrom(*source);
  }
}

void XmsgImGroupMsgRecvCfgReq::MergeFrom(const XmsgImGroupMsgRecvCfgReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImGroupMsgRecvCfgReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cgt().size() > 0) {

    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
}

void XmsgImGroupMsgRecvCfgReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImGroupMsgRecvCfgReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImGroupMsgRecvCfgReq::CopyFrom(const XmsgImGroupMsgRecvCfgReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImGroupMsgRecvCfgReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImGroupMsgRecvCfgReq::IsInitialized() const {
  return true;
}

void XmsgImGroupMsgRecvCfgReq::Swap(XmsgImGroupMsgRecvCfgReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImGroupMsgRecvCfgReq::InternalSwap(XmsgImGroupMsgRecvCfgReq* other) {
  using std::swap;
  cgt_.Swap(&other->cgt_);
  type_.Swap(&other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImGroupMsgRecvCfgReq::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgImGroupMsgRecvCfgRsp_ExtEntry_DoNotUse::XmsgImGroupMsgRecvCfgRsp_ExtEntry_DoNotUse() {}
XmsgImGroupMsgRecvCfgRsp_ExtEntry_DoNotUse::XmsgImGroupMsgRecvCfgRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImGroupMsgRecvCfgRsp_ExtEntry_DoNotUse::MergeFrom(const XmsgImGroupMsgRecvCfgRsp_ExtEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImGroupMsgRecvCfgRsp_ExtEntry_DoNotUse::GetMetadata() const {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[35];
}
void XmsgImGroupMsgRecvCfgRsp_ExtEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImGroupMsgRecvCfgRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImGroupMsgRecvCfgRsp::kExtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImGroupMsgRecvCfgRsp::XmsgImGroupMsgRecvCfgRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupMsgRecvCfgRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImGroupMsgRecvCfgRsp)
}
XmsgImGroupMsgRecvCfgRsp::XmsgImGroupMsgRecvCfgRsp(const XmsgImGroupMsgRecvCfgRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ext_.MergeFrom(from.ext_);
  // @@protoc_insertion_point(copy_constructor:XmsgImGroupMsgRecvCfgRsp)
}

void XmsgImGroupMsgRecvCfgRsp::SharedCtor() {
  _cached_size_ = 0;
}

XmsgImGroupMsgRecvCfgRsp::~XmsgImGroupMsgRecvCfgRsp() {
  // @@protoc_insertion_point(destructor:XmsgImGroupMsgRecvCfgRsp)
  SharedDtor();
}

void XmsgImGroupMsgRecvCfgRsp::SharedDtor() {
}

void XmsgImGroupMsgRecvCfgRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImGroupMsgRecvCfgRsp::descriptor() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImGroupMsgRecvCfgRsp& XmsgImGroupMsgRecvCfgRsp::default_instance() {
  ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::InitDefaultsXmsgImGroupMsgRecvCfgRsp();
  return *internal_default_instance();
}

XmsgImGroupMsgRecvCfgRsp* XmsgImGroupMsgRecvCfgRsp::New(::google::protobuf::Arena* arena) const {
  XmsgImGroupMsgRecvCfgRsp* n = new XmsgImGroupMsgRecvCfgRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImGroupMsgRecvCfgRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImGroupMsgRecvCfgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ext_.Clear();
  _internal_metadata_.Clear();
}

bool XmsgImGroupMsgRecvCfgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImGroupMsgRecvCfgRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, string> ext = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          XmsgImGroupMsgRecvCfgRsp_ExtEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImGroupMsgRecvCfgRsp_ExtEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&ext_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupMsgRecvCfgRsp.ExtEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupMsgRecvCfgRsp.ExtEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImGroupMsgRecvCfgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImGroupMsgRecvCfgRsp)
  return false;
#undef DO_
}

void XmsgImGroupMsgRecvCfgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImGroupMsgRecvCfgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ext = 1;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupMsgRecvCfgRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupMsgRecvCfgRsp.ExtEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImGroupMsgRecvCfgRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImGroupMsgRecvCfgRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImGroupMsgRecvCfgRsp)
}

::google::protobuf::uint8* XmsgImGroupMsgRecvCfgRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImGroupMsgRecvCfgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ext = 1;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupMsgRecvCfgRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupMsgRecvCfgRsp.ExtEntry.value");
      }
    };

    if (deterministic &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImGroupMsgRecvCfgRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImGroupMsgRecvCfgRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImGroupMsgRecvCfgRsp)
  return target;
}

size_t XmsgImGroupMsgRecvCfgRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImGroupMsgRecvCfgRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> ext = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ext_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImGroupMsgRecvCfgRsp_ExtEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->ext().begin();
        it != this->ext().end(); ++it) {
      entry.reset(ext_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImGroupMsgRecvCfgRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImGroupMsgRecvCfgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImGroupMsgRecvCfgRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImGroupMsgRecvCfgRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImGroupMsgRecvCfgRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImGroupMsgRecvCfgRsp)
    MergeFrom(*source);
  }
}

void XmsgImGroupMsgRecvCfgRsp::MergeFrom(const XmsgImGroupMsgRecvCfgRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImGroupMsgRecvCfgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ext_.MergeFrom(from.ext_);
}

void XmsgImGroupMsgRecvCfgRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImGroupMsgRecvCfgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImGroupMsgRecvCfgRsp::CopyFrom(const XmsgImGroupMsgRecvCfgRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImGroupMsgRecvCfgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImGroupMsgRecvCfgRsp::IsInitialized() const {
  return true;
}

void XmsgImGroupMsgRecvCfgRsp::Swap(XmsgImGroupMsgRecvCfgRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImGroupMsgRecvCfgRsp::InternalSwap(XmsgImGroupMsgRecvCfgRsp* other) {
  using std::swap;
  ext_.Swap(&other->ext_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImGroupMsgRecvCfgRsp::GetMetadata() const {
  protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_net_2dx_2dmsg_2dim_2dgroup_2dusr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sys-x-msg-im-group.proto

#ifndef PROTOBUF_sys_2dx_2dmsg_2dim_2dgroup_2eproto__INCLUDED
#define PROTOBUF_sys_2dx_2dmsg_2dim_2dgroup_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[20];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsXmsgImGroupObjInfoQueryReqImpl();
void InitDefaultsXmsgImGroupObjInfoQueryReq();
void InitDefaultsXmsgImGroupObjInfoQueryRspImpl();
void InitDefaultsXmsgImGroupObjInfoQueryRsp();
void InitDefaultsXmsgImHlrUsrInitReq_ExtEntry_DoNotUseImpl();
void InitDefaultsXmsgImHlrUsrInitReq_ExtEntry_DoNotUse();
void InitDefaultsXmsgImHlrUsrInitReqImpl();
void InitDefaultsXmsgImHlrUsrInitReq();
void InitDefaultsXmsgImHlrUsrInitRsp_ExtEntry_DoNotUseImpl();
void InitDefaultsXmsgImHlrUsrInitRsp_ExtEntry_DoNotUse();
void InitDefaultsXmsgImHlrUsrInitRspImpl();
void InitDefaultsXmsgImHlrUsrInitRsp();
void InitDefaultsXmsgApClientKickReqImpl();
void InitDefaultsXmsgApClientKickReq();
void InitDefaultsXmsgApClientKickRsp_ExtEntry_DoNotUseImpl();
void InitDefaultsXmsgApClientKickRsp_ExtEntry_DoNotUse();
void InitDefaultsXmsgApClientKickRspImpl();
void InitDefaultsXmsgApClientKickRsp();
void InitDefaultsXmsgApClientLostNoticeImpl();
void InitDefaultsXmsgApClientLostNotice();
void InitDefaultsXmsgApClientEstbNoticeImpl();
void InitDefaultsXmsgApClientEstbNotice();
void InitDefaultsXmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUseImpl();
void InitDefaultsXmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse();
void InitDefaultsXmsgImGroupChannelStatusSubReqImpl();
void InitDefaultsXmsgImGroupChannelStatusSubReq();
void InitDefaultsXmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUseImpl();
void InitDefaultsXmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse();
void InitDefaultsXmsgImGroupChannelStatusSubRspImpl();
void InitDefaultsXmsgImGroupChannelStatusSubRsp();
void InitDefaultsXmsgImGroupChannelStatusPubReqImpl();
void InitDefaultsXmsgImGroupChannelStatusPubReq();
void InitDefaultsXmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUseImpl();
void InitDefaultsXmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse();
void InitDefaultsXmsgImGroupChannelStatusPubRspImpl();
void InitDefaultsXmsgImGroupChannelStatusPubRsp();
void InitDefaultsXmsgImGroupChannelStatusChangedNoticeImpl();
void InitDefaultsXmsgImGroupChannelStatusChangedNotice();
void InitDefaultsXmsgImGroupNeSyncEventReqImpl();
void InitDefaultsXmsgImGroupNeSyncEventReq();
inline void InitDefaults() {
  InitDefaultsXmsgImGroupObjInfoQueryReq();
  InitDefaultsXmsgImGroupObjInfoQueryRsp();
  InitDefaultsXmsgImHlrUsrInitReq_ExtEntry_DoNotUse();
  InitDefaultsXmsgImHlrUsrInitReq();
  InitDefaultsXmsgImHlrUsrInitRsp_ExtEntry_DoNotUse();
  InitDefaultsXmsgImHlrUsrInitRsp();
  InitDefaultsXmsgApClientKickReq();
  InitDefaultsXmsgApClientKickRsp_ExtEntry_DoNotUse();
  InitDefaultsXmsgApClientKickRsp();
  InitDefaultsXmsgApClientLostNotice();
  InitDefaultsXmsgApClientEstbNotice();
  InitDefaultsXmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse();
  InitDefaultsXmsgImGroupChannelStatusSubReq();
  InitDefaultsXmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse();
  InitDefaultsXmsgImGroupChannelStatusSubRsp();
  InitDefaultsXmsgImGroupChannelStatusPubReq();
  InitDefaultsXmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse();
  InitDefaultsXmsgImGroupChannelStatusPubRsp();
  InitDefaultsXmsgImGroupChannelStatusChangedNotice();
  InitDefaultsXmsgImGroupNeSyncEventReq();
}
}  // namespace protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto
class XmsgApClientEstbNotice;
class XmsgApClientEstbNoticeDefaultTypeInternal;
extern XmsgApClientEstbNoticeDefaultTypeInternal _XmsgApClientEstbNotice_default_instance_;
class XmsgApClientKickReq;
class XmsgApClientKickReqDefaultTypeInternal;
extern XmsgApClientKickReqDefaultTypeInternal _XmsgApClientKickReq_default_instance_;
class XmsgApClientKickRsp;
class XmsgApClientKickRspDefaultTypeInternal;
extern XmsgApClientKickRspDefaultTypeInternal _XmsgApClientKickRsp_default_instance_;
class XmsgApClientKickRsp_ExtEntry_DoNotUse;
class XmsgApClientKickRsp_ExtEntry_DoNotUseDefaultTypeInternal;
extern XmsgApClientKickRsp_ExtEntry_DoNotUseDefaultTypeInternal _XmsgApClientKickRsp_ExtEntry_DoNotUse_default_instance_;
class XmsgApClientLostNotice;
class XmsgApClientLostNoticeDefaultTypeInternal;
extern XmsgApClientLostNoticeDefaultTypeInternal _XmsgApClientLostNotice_default_instance_;
class XmsgImGroupChannelStatusChangedNotice;
class XmsgImGroupChannelStatusChangedNoticeDefaultTypeInternal;
extern XmsgImGroupChannelStatusChangedNoticeDefaultTypeInternal _XmsgImGroupChannelStatusChangedNotice_default_instance_;
class XmsgImGroupChannelStatusPubReq;
class XmsgImGroupChannelStatusPubReqDefaultTypeInternal;
extern XmsgImGroupChannelStatusPubReqDefaultTypeInternal _XmsgImGroupChannelStatusPubReq_default_instance_;
class XmsgImGroupChannelStatusPubRsp;
class XmsgImGroupChannelStatusPubRspDefaultTypeInternal;
extern XmsgImGroupChannelStatusPubRspDefaultTypeInternal _XmsgImGroupChannelStatusPubRsp_default_instance_;
class XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse;
class XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUseDefaultTypeInternal;
extern XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUseDefaultTypeInternal _XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse_default_instance_;
class XmsgImGroupChannelStatusSubReq;
class XmsgImGroupChannelStatusSubReqDefaultTypeInternal;
extern XmsgImGroupChannelStatusSubReqDefaultTypeInternal _XmsgImGroupChannelStatusSubReq_default_instance_;
class XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse;
class XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUseDefaultTypeInternal;
extern XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUseDefaultTypeInternal _XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse_default_instance_;
class XmsgImGroupChannelStatusSubRsp;
class XmsgImGroupChannelStatusSubRspDefaultTypeInternal;
extern XmsgImGroupChannelStatusSubRspDefaultTypeInternal _XmsgImGroupChannelStatusSubRsp_default_instance_;
class XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse;
class XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUseDefaultTypeInternal;
extern XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUseDefaultTypeInternal _XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse_default_instance_;
class XmsgImGroupNeSyncEventReq;
class XmsgImGroupNeSyncEventReqDefaultTypeInternal;
extern XmsgImGroupNeSyncEventReqDefaultTypeInternal _XmsgImGroupNeSyncEventReq_default_instance_;
class XmsgImGroupObjInfoQueryReq;
class XmsgImGroupObjInfoQueryReqDefaultTypeInternal;
extern XmsgImGroupObjInfoQueryReqDefaultTypeInternal _XmsgImGroupObjInfoQueryReq_default_instance_;
class XmsgImGroupObjInfoQueryRsp;
class XmsgImGroupObjInfoQueryRspDefaultTypeInternal;
extern XmsgImGroupObjInfoQueryRspDefaultTypeInternal _XmsgImGroupObjInfoQueryRsp_default_instance_;
class XmsgImHlrUsrInitReq;
class XmsgImHlrUsrInitReqDefaultTypeInternal;
extern XmsgImHlrUsrInitReqDefaultTypeInternal _XmsgImHlrUsrInitReq_default_instance_;
class XmsgImHlrUsrInitReq_ExtEntry_DoNotUse;
class XmsgImHlrUsrInitReq_ExtEntry_DoNotUseDefaultTypeInternal;
extern XmsgImHlrUsrInitReq_ExtEntry_DoNotUseDefaultTypeInternal _XmsgImHlrUsrInitReq_ExtEntry_DoNotUse_default_instance_;
class XmsgImHlrUsrInitRsp;
class XmsgImHlrUsrInitRspDefaultTypeInternal;
extern XmsgImHlrUsrInitRspDefaultTypeInternal _XmsgImHlrUsrInitRsp_default_instance_;
class XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse;
class XmsgImHlrUsrInitRsp_ExtEntry_DoNotUseDefaultTypeInternal;
extern XmsgImHlrUsrInitRsp_ExtEntry_DoNotUseDefaultTypeInternal _XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse_default_instance_;

// ===================================================================

class XmsgImGroupObjInfoQueryReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImGroupObjInfoQueryReq) */ {
 public:
  XmsgImGroupObjInfoQueryReq();
  virtual ~XmsgImGroupObjInfoQueryReq();

  XmsgImGroupObjInfoQueryReq(const XmsgImGroupObjInfoQueryReq& from);

  inline XmsgImGroupObjInfoQueryReq& operator=(const XmsgImGroupObjInfoQueryReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImGroupObjInfoQueryReq(XmsgImGroupObjInfoQueryReq&& from) noexcept
    : XmsgImGroupObjInfoQueryReq() {
    *this = ::std::move(from);
  }

  inline XmsgImGroupObjInfoQueryReq& operator=(XmsgImGroupObjInfoQueryReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImGroupObjInfoQueryReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImGroupObjInfoQueryReq* internal_default_instance() {
    return reinterpret_cast<const XmsgImGroupObjInfoQueryReq*>(
               &_XmsgImGroupObjInfoQueryReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(XmsgImGroupObjInfoQueryReq* other);
  friend void swap(XmsgImGroupObjInfoQueryReq& a, XmsgImGroupObjInfoQueryReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImGroupObjInfoQueryReq* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImGroupObjInfoQueryReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImGroupObjInfoQueryReq& from);
  void MergeFrom(const XmsgImGroupObjInfoQueryReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImGroupObjInfoQueryReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string ucgt = 1;
  void clear_ucgt();
  static const int kUcgtFieldNumber = 1;
  const ::std::string& ucgt() const;
  void set_ucgt(const ::std::string& value);
  #if LANG_CXX11
  void set_ucgt(::std::string&& value);
  #endif
  void set_ucgt(const char* value);
  void set_ucgt(const char* value, size_t size);
  ::std::string* mutable_ucgt();
  ::std::string* release_ucgt();
  void set_allocated_ucgt(::std::string* ucgt);

  // string gcgt = 2;
  void clear_gcgt();
  static const int kGcgtFieldNumber = 2;
  const ::std::string& gcgt() const;
  void set_gcgt(const ::std::string& value);
  #if LANG_CXX11
  void set_gcgt(::std::string&& value);
  #endif
  void set_gcgt(const char* value);
  void set_gcgt(const char* value, size_t size);
  ::std::string* mutable_gcgt();
  ::std::string* release_gcgt();
  void set_allocated_gcgt(::std::string* gcgt);

  // string oid = 3;
  void clear_oid();
  static const int kOidFieldNumber = 3;
  const ::std::string& oid() const;
  void set_oid(const ::std::string& value);
  #if LANG_CXX11
  void set_oid(::std::string&& value);
  #endif
  void set_oid(const char* value);
  void set_oid(const char* value, size_t size);
  ::std::string* mutable_oid();
  ::std::string* release_oid();
  void set_allocated_oid(::std::string* oid);

  // @@protoc_insertion_point(class_scope:XmsgImGroupObjInfoQueryReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ucgt_;
  ::google::protobuf::internal::ArenaStringPtr gcgt_;
  ::google::protobuf::internal::ArenaStringPtr oid_;
  mutable int _cached_size_;
  friend struct ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::TableStruct;
  friend void ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::InitDefaultsXmsgImGroupObjInfoQueryReqImpl();
};
// -------------------------------------------------------------------

class XmsgImGroupObjInfoQueryRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImGroupObjInfoQueryRsp) */ {
 public:
  XmsgImGroupObjInfoQueryRsp();
  virtual ~XmsgImGroupObjInfoQueryRsp();

  XmsgImGroupObjInfoQueryRsp(const XmsgImGroupObjInfoQueryRsp& from);

  inline XmsgImGroupObjInfoQueryRsp& operator=(const XmsgImGroupObjInfoQueryRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImGroupObjInfoQueryRsp(XmsgImGroupObjInfoQueryRsp&& from) noexcept
    : XmsgImGroupObjInfoQueryRsp() {
    *this = ::std::move(from);
  }

  inline XmsgImGroupObjInfoQueryRsp& operator=(XmsgImGroupObjInfoQueryRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImGroupObjInfoQueryRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImGroupObjInfoQueryRsp* internal_default_instance() {
    return reinterpret_cast<const XmsgImGroupObjInfoQueryRsp*>(
               &_XmsgImGroupObjInfoQueryRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(XmsgImGroupObjInfoQueryRsp* other);
  friend void swap(XmsgImGroupObjInfoQueryRsp& a, XmsgImGroupObjInfoQueryRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImGroupObjInfoQueryRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImGroupObjInfoQueryRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImGroupObjInfoQueryRsp& from);
  void MergeFrom(const XmsgImGroupObjInfoQueryRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImGroupObjInfoQueryRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string ucgt = 1;
  void clear_ucgt();
  static const int kUcgtFieldNumber = 1;
  const ::std::string& ucgt() const;
  void set_ucgt(const ::std::string& value);
  #if LANG_CXX11
  void set_ucgt(::std::string&& value);
  #endif
  void set_ucgt(const char* value);
  void set_ucgt(const char* value, size_t size);
  ::std::string* mutable_ucgt();
  ::std::string* release_ucgt();
  void set_allocated_ucgt(::std::string* ucgt);

  // uint64 gts = 2;
  void clear_gts();
  static const int kGtsFieldNumber = 2;
  ::google::protobuf::uint64 gts() const;
  void set_gts(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:XmsgImGroupObjInfoQueryRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ucgt_;
  ::google::protobuf::uint64 gts_;
  mutable int _cached_size_;
  friend struct ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::TableStruct;
  friend void ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::InitDefaultsXmsgImGroupObjInfoQueryRspImpl();
};
// -------------------------------------------------------------------

class XmsgImHlrUsrInitReq_ExtEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgImHlrUsrInitReq_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgImHlrUsrInitReq_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgImHlrUsrInitReq_ExtEntry_DoNotUse();
  XmsgImHlrUsrInitReq_ExtEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgImHlrUsrInitReq_ExtEntry_DoNotUse& other);
  static const XmsgImHlrUsrInitReq_ExtEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgImHlrUsrInitReq_ExtEntry_DoNotUse*>(&_XmsgImHlrUsrInitReq_ExtEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgImHlrUsrInitReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImHlrUsrInitReq) */ {
 public:
  XmsgImHlrUsrInitReq();
  virtual ~XmsgImHlrUsrInitReq();

  XmsgImHlrUsrInitReq(const XmsgImHlrUsrInitReq& from);

  inline XmsgImHlrUsrInitReq& operator=(const XmsgImHlrUsrInitReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImHlrUsrInitReq(XmsgImHlrUsrInitReq&& from) noexcept
    : XmsgImHlrUsrInitReq() {
    *this = ::std::move(from);
  }

  inline XmsgImHlrUsrInitReq& operator=(XmsgImHlrUsrInitReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImHlrUsrInitReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImHlrUsrInitReq* internal_default_instance() {
    return reinterpret_cast<const XmsgImHlrUsrInitReq*>(
               &_XmsgImHlrUsrInitReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(XmsgImHlrUsrInitReq* other);
  friend void swap(XmsgImHlrUsrInitReq& a, XmsgImHlrUsrInitReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImHlrUsrInitReq* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImHlrUsrInitReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImHlrUsrInitReq& from);
  void MergeFrom(const XmsgImHlrUsrInitReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImHlrUsrInitReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> ext = 2;
  int ext_size() const;
  void clear_ext();
  static const int kExtFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      ext() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_ext();

  // string cgt = 1;
  void clear_cgt();
  static const int kCgtFieldNumber = 1;
  const ::std::string& cgt() const;
  void set_cgt(const ::std::string& value);
  #if LANG_CXX11
  void set_cgt(::std::string&& value);
  #endif
  void set_cgt(const char* value);
  void set_cgt(const char* value, size_t size);
  ::std::string* mutable_cgt();
  ::std::string* release_cgt();
  void set_allocated_cgt(::std::string* cgt);

  // @@protoc_insertion_point(class_scope:XmsgImHlrUsrInitReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgImHlrUsrInitReq_ExtEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > ext_;
  ::google::protobuf::internal::ArenaStringPtr cgt_;
  mutable int _cached_size_;
  friend struct ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::TableStruct;
  friend void ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::InitDefaultsXmsgImHlrUsrInitReqImpl();
};
// -------------------------------------------------------------------

class XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse();
  XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse& other);
  static const XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse*>(&_XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgImHlrUsrInitRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImHlrUsrInitRsp) */ {
 public:
  XmsgImHlrUsrInitRsp();
  virtual ~XmsgImHlrUsrInitRsp();

  XmsgImHlrUsrInitRsp(const XmsgImHlrUsrInitRsp& from);

  inline XmsgImHlrUsrInitRsp& operator=(const XmsgImHlrUsrInitRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImHlrUsrInitRsp(XmsgImHlrUsrInitRsp&& from) noexcept
    : XmsgImHlrUsrInitRsp() {
    *this = ::std::move(from);
  }

  inline XmsgImHlrUsrInitRsp& operator=(XmsgImHlrUsrInitRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImHlrUsrInitRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImHlrUsrInitRsp* internal_default_instance() {
    return reinterpret_cast<const XmsgImHlrUsrInitRsp*>(
               &_XmsgImHlrUsrInitRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(XmsgImHlrUsrInitRsp* other);
  friend void swap(XmsgImHlrUsrInitRsp& a, XmsgImHlrUsrInitRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImHlrUsrInitRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImHlrUsrInitRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImHlrUsrInitRsp& from);
  void MergeFrom(const XmsgImHlrUsrInitRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImHlrUsrInitRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> ext = 1;
  int ext_size() const;
  void clear_ext();
  static const int kExtFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      ext() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_ext();

  // @@protoc_insertion_point(class_scope:XmsgImHlrUsrInitRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > ext_;
  mutable int _cached_size_;
  friend struct ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::TableStruct;
  friend void ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::InitDefaultsXmsgImHlrUsrInitRspImpl();
};
// -------------------------------------------------------------------

class XmsgApClientKickReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgApClientKickReq) */ {
 public:
  XmsgApClientKickReq();
  virtual ~XmsgApClientKickReq();

  XmsgApClientKickReq(const XmsgApClientKickReq& from);

  inline XmsgApClientKickReq& operator=(const XmsgApClientKickReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgApClientKickReq(XmsgApClientKickReq&& from) noexcept
    : XmsgApClientKickReq() {
    *this = ::std::move(from);
  }

  inline XmsgApClientKickReq& operator=(XmsgApClientKickReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgApClientKickReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgApClientKickReq* internal_default_instance() {
    return reinterpret_cast<const XmsgApClientKickReq*>(
               &_XmsgApClientKickReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(XmsgApClientKickReq* other);
  friend void swap(XmsgApClientKickReq& a, XmsgApClientKickReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgApClientKickReq* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgApClientKickReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgApClientKickReq& from);
  void MergeFrom(const XmsgApClientKickReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgApClientKickReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string ccid = 1;
  void clear_ccid();
  static const int kCcidFieldNumber = 1;
  const ::std::string& ccid() const;
  void set_ccid(const ::std::string& value);
  #if LANG_CXX11
  void set_ccid(::std::string&& value);
  #endif
  void set_ccid(const char* value);
  void set_ccid(const char* value, size_t size);
  ::std::string* mutable_ccid();
  ::std::string* release_ccid();
  void set_allocated_ccid(::std::string* ccid);

  // @@protoc_insertion_point(class_scope:XmsgApClientKickReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ccid_;
  mutable int _cached_size_;
  friend struct ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::TableStruct;
  friend void ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::InitDefaultsXmsgApClientKickReqImpl();
};
// -------------------------------------------------------------------

class XmsgApClientKickRsp_ExtEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgApClientKickRsp_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgApClientKickRsp_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgApClientKickRsp_ExtEntry_DoNotUse();
  XmsgApClientKickRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgApClientKickRsp_ExtEntry_DoNotUse& other);
  static const XmsgApClientKickRsp_ExtEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgApClientKickRsp_ExtEntry_DoNotUse*>(&_XmsgApClientKickRsp_ExtEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgApClientKickRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgApClientKickRsp) */ {
 public:
  XmsgApClientKickRsp();
  virtual ~XmsgApClientKickRsp();

  XmsgApClientKickRsp(const XmsgApClientKickRsp& from);

  inline XmsgApClientKickRsp& operator=(const XmsgApClientKickRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgApClientKickRsp(XmsgApClientKickRsp&& from) noexcept
    : XmsgApClientKickRsp() {
    *this = ::std::move(from);
  }

  inline XmsgApClientKickRsp& operator=(XmsgApClientKickRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgApClientKickRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgApClientKickRsp* internal_default_instance() {
    return reinterpret_cast<const XmsgApClientKickRsp*>(
               &_XmsgApClientKickRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(XmsgApClientKickRsp* other);
  friend void swap(XmsgApClientKickRsp& a, XmsgApClientKickRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgApClientKickRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgApClientKickRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgApClientKickRsp& from);
  void MergeFrom(const XmsgApClientKickRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgApClientKickRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> ext = 1;
  int ext_size() const;
  void clear_ext();
  static const int kExtFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      ext() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_ext();

  // @@protoc_insertion_point(class_scope:XmsgApClientKickRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgApClientKickRsp_ExtEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > ext_;
  mutable int _cached_size_;
  friend struct ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::TableStruct;
  friend void ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::InitDefaultsXmsgApClientKickRspImpl();
};
// -------------------------------------------------------------------

class XmsgApClientLostNotice : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgApClientLostNotice) */ {
 public:
  XmsgApClientLostNotice();
  virtual ~XmsgApClientLostNotice();

  XmsgApClientLostNotice(const XmsgApClientLostNotice& from);

  inline XmsgApClientLostNotice& operator=(const XmsgApClientLostNotice& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgApClientLostNotice(XmsgApClientLostNotice&& from) noexcept
    : XmsgApClientLostNotice() {
    *this = ::std::move(from);
  }

  inline XmsgApClientLostNotice& operator=(XmsgApClientLostNotice&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgApClientLostNotice& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgApClientLostNotice* internal_default_instance() {
    return reinterpret_cast<const XmsgApClientLostNotice*>(
               &_XmsgApClientLostNotice_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(XmsgApClientLostNotice* other);
  friend void swap(XmsgApClientLostNotice& a, XmsgApClientLostNotice& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgApClientLostNotice* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgApClientLostNotice* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgApClientLostNotice& from);
  void MergeFrom(const XmsgApClientLostNotice& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgApClientLostNotice* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string apCgt = 1;
  void clear_apcgt();
  static const int kApCgtFieldNumber = 1;
  const ::std::string& apcgt() const;
  void set_apcgt(const ::std::string& value);
  #if LANG_CXX11
  void set_apcgt(::std::string&& value);
  #endif
  void set_apcgt(const char* value);
  void set_apcgt(const char* value, size_t size);
  ::std::string* mutable_apcgt();
  ::std::string* release_apcgt();
  void set_allocated_apcgt(::std::string* apcgt);

  // string cgt = 2;
  void clear_cgt();
  static const int kCgtFieldNumber = 2;
  const ::std::string& cgt() const;
  void set_cgt(const ::std::string& value);
  #if LANG_CXX11
  void set_cgt(::std::string&& value);
  #endif
  void set_cgt(const char* value);
  void set_cgt(const char* value, size_t size);
  ::std::string* mutable_cgt();
  ::std::string* release_cgt();
  void set_allocated_cgt(::std::string* cgt);

  // string plat = 3;
  void clear_plat();
  static const int kPlatFieldNumber = 3;
  const ::std::string& plat() const;
  void set_plat(const ::std::string& value);
  #if LANG_CXX11
  void set_plat(::std::string&& value);
  #endif
  void set_plat(const char* value);
  void set_plat(const char* value, size_t size);
  ::std::string* mutable_plat();
  ::std::string* release_plat();
  void set_allocated_plat(::std::string* plat);

  // string did = 4;
  void clear_did();
  static const int kDidFieldNumber = 4;
  const ::std::string& did() const;
  void set_did(const ::std::string& value);
  #if LANG_CXX11
  void set_did(::std::string&& value);
  #endif
  void set_did(const char* value);
  void set_did(const char* value, size_t size);
  ::std::string* mutable_did();
  ::std::string* release_did();
  void set_allocated_did(::std::string* did);

  // string ccid = 5;
  void clear_ccid();
  static const int kCcidFieldNumber = 5;
  const ::std::string& ccid() const;
  void set_ccid(const ::std::string& value);
  #if LANG_CXX11
  void set_ccid(::std::string&& value);
  #endif
  void set_ccid(const char* value);
  void set_ccid(const char* value, size_t size);
  ::std::string* mutable_ccid();
  ::std::string* release_ccid();
  void set_allocated_ccid(::std::string* ccid);

  // @@protoc_insertion_point(class_scope:XmsgApClientLostNotice)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr apcgt_;
  ::google::protobuf::internal::ArenaStringPtr cgt_;
  ::google::protobuf::internal::ArenaStringPtr plat_;
  ::google::protobuf::internal::ArenaStringPtr did_;
  ::google::protobuf::internal::ArenaStringPtr ccid_;
  mutable int _cached_size_;
  friend struct ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::TableStruct;
  friend void ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::InitDefaultsXmsgApClientLostNoticeImpl();
};
// -------------------------------------------------------------------

class XmsgApClientEstbNotice : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgApClientEstbNotice) */ {
 public:
  XmsgApClientEstbNotice();
  virtual ~XmsgApClientEstbNotice();

  XmsgApClientEstbNotice(const XmsgApClientEstbNotice& from);

  inline XmsgApClientEstbNotice& operator=(const XmsgApClientEstbNotice& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgApClientEstbNotice(XmsgApClientEstbNotice&& from) noexcept
    : XmsgApClientEstbNotice() {
    *this = ::std::move(from);
  }

  inline XmsgApClientEstbNotice& operator=(XmsgApClientEstbNotice&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgApClientEstbNotice& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgApClientEstbNotice* internal_default_instance() {
    return reinterpret_cast<const XmsgApClientEstbNotice*>(
               &_XmsgApClientEstbNotice_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(XmsgApClientEstbNotice* other);
  friend void swap(XmsgApClientEstbNotice& a, XmsgApClientEstbNotice& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgApClientEstbNotice* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgApClientEstbNotice* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgApClientEstbNotice& from);
  void MergeFrom(const XmsgApClientEstbNotice& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgApClientEstbNotice* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string apCgt = 1;
  void clear_apcgt();
  static const int kApCgtFieldNumber = 1;
  const ::std::string& apcgt() const;
  void set_apcgt(const ::std::string& value);
  #if LANG_CXX11
  void set_apcgt(::std::string&& value);
  #endif
  void set_apcgt(const char* value);
  void set_apcgt(const char* value, size_t size);
  ::std::string* mutable_apcgt();
  ::std::string* release_apcgt();
  void set_allocated_apcgt(::std::string* apcgt);

  // string cgt = 2;
  void clear_cgt();
  static const int kCgtFieldNumber = 2;
  const ::std::string& cgt() const;
  void set_cgt(const ::std::string& value);
  #if LANG_CXX11
  void set_cgt(::std::string&& value);
  #endif
  void set_cgt(const char* value);
  void set_cgt(const char* value, size_t size);
  ::std::string* mutable_cgt();
  ::std::string* release_cgt();
  void set_allocated_cgt(::std::string* cgt);

  // string plat = 3;
  void clear_plat();
  static const int kPlatFieldNumber = 3;
  const ::std::string& plat() const;
  void set_plat(const ::std::string& value);
  #if LANG_CXX11
  void set_plat(::std::string&& value);
  #endif
  void set_plat(const char* value);
  void set_plat(const char* value, size_t size);
  ::std::string* mutable_plat();
  ::std::string* release_plat();
  void set_allocated_plat(::std::string* plat);

  // string did = 4;
  void clear_did();
  static const int kDidFieldNumber = 4;
  const ::std::string& did() const;
  void set_did(const ::std::string& value);
  #if LANG_CXX11
  void set_did(::std::string&& value);
  #endif
  void set_did(const char* value);
  void set_did(const char* value, size_t size);
  ::std::string* mutable_did();
  ::std::string* release_did();
  void set_allocated_did(::std::string* did);

  // string ccid = 5;
  void clear_ccid();
  static const int kCcidFieldNumber = 5;
  const ::std::string& ccid() const;
  void set_ccid(const ::std::string& value);
  #if LANG_CXX11
  void set_ccid(::std::string&& value);
  #endif
  void set_ccid(const char* value);
  void set_ccid(const char* value, size_t size);
  ::std::string* mutable_ccid();
  ::std::string* release_ccid();
  void set_allocated_ccid(::std::string* ccid);

  // @@protoc_insertion_point(class_scope:XmsgApClientEstbNotice)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr apcgt_;
  ::google::protobuf::internal::ArenaStringPtr cgt_;
  ::google::protobuf::internal::ArenaStringPtr plat_;
  ::google::protobuf::internal::ArenaStringPtr did_;
  ::google::protobuf::internal::ArenaStringPtr ccid_;
  mutable int _cached_size_;
  friend struct ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::TableStruct;
  friend void ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::InitDefaultsXmsgApClientEstbNoticeImpl();
};
// -------------------------------------------------------------------

class XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse();
  XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse& other);
  static const XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse*>(&_XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgImGroupChannelStatusSubReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImGroupChannelStatusSubReq) */ {
 public:
  XmsgImGroupChannelStatusSubReq();
  virtual ~XmsgImGroupChannelStatusSubReq();

  XmsgImGroupChannelStatusSubReq(const XmsgImGroupChannelStatusSubReq& from);

  inline XmsgImGroupChannelStatusSubReq& operator=(const XmsgImGroupChannelStatusSubReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImGroupChannelStatusSubReq(XmsgImGroupChannelStatusSubReq&& from) noexcept
    : XmsgImGroupChannelStatusSubReq() {
    *this = ::std::move(from);
  }

  inline XmsgImGroupChannelStatusSubReq& operator=(XmsgImGroupChannelStatusSubReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImGroupChannelStatusSubReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImGroupChannelStatusSubReq* internal_default_instance() {
    return reinterpret_cast<const XmsgImGroupChannelStatusSubReq*>(
               &_XmsgImGroupChannelStatusSubReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(XmsgImGroupChannelStatusSubReq* other);
  friend void swap(XmsgImGroupChannelStatusSubReq& a, XmsgImGroupChannelStatusSubReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImGroupChannelStatusSubReq* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImGroupChannelStatusSubReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImGroupChannelStatusSubReq& from);
  void MergeFrom(const XmsgImGroupChannelStatusSubReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImGroupChannelStatusSubReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> ext = 1;
  int ext_size() const;
  void clear_ext();
  static const int kExtFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      ext() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_ext();

  // @@protoc_insertion_point(class_scope:XmsgImGroupChannelStatusSubReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > ext_;
  mutable int _cached_size_;
  friend struct ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::TableStruct;
  friend void ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::InitDefaultsXmsgImGroupChannelStatusSubReqImpl();
};
// -------------------------------------------------------------------

class XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse();
  XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse& other);
  static const XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse*>(&_XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgImGroupChannelStatusSubRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImGroupChannelStatusSubRsp) */ {
 public:
  XmsgImGroupChannelStatusSubRsp();
  virtual ~XmsgImGroupChannelStatusSubRsp();

  XmsgImGroupChannelStatusSubRsp(const XmsgImGroupChannelStatusSubRsp& from);

  inline XmsgImGroupChannelStatusSubRsp& operator=(const XmsgImGroupChannelStatusSubRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImGroupChannelStatusSubRsp(XmsgImGroupChannelStatusSubRsp&& from) noexcept
    : XmsgImGroupChannelStatusSubRsp() {
    *this = ::std::move(from);
  }

  inline XmsgImGroupChannelStatusSubRsp& operator=(XmsgImGroupChannelStatusSubRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImGroupChannelStatusSubRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImGroupChannelStatusSubRsp* internal_default_instance() {
    return reinterpret_cast<const XmsgImGroupChannelStatusSubRsp*>(
               &_XmsgImGroupChannelStatusSubRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(XmsgImGroupChannelStatusSubRsp* other);
  friend void swap(XmsgImGroupChannelStatusSubRsp& a, XmsgImGroupChannelStatusSubRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImGroupChannelStatusSubRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImGroupChannelStatusSubRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImGroupChannelStatusSubRsp& from);
  void MergeFrom(const XmsgImGroupChannelStatusSubRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImGroupChannelStatusSubRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> ext = 1;
  int ext_size() const;
  void clear_ext();
  static const int kExtFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      ext() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_ext();

  // @@protoc_insertion_point(class_scope:XmsgImGroupChannelStatusSubRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > ext_;
  mutable int _cached_size_;
  friend struct ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::TableStruct;
  friend void ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::InitDefaultsXmsgImGroupChannelStatusSubRspImpl();
};
// -------------------------------------------------------------------

class XmsgImGroupChannelStatusPubReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImGroupChannelStatusPubReq) */ {
 public:
  XmsgImGroupChannelStatusPubReq();
  virtual ~XmsgImGroupChannelStatusPubReq();

  XmsgImGroupChannelStatusPubReq(const XmsgImGroupChannelStatusPubReq& from);

  inline XmsgImGroupChannelStatusPubReq& operator=(const XmsgImGroupChannelStatusPubReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImGroupChannelStatusPubReq(XmsgImGroupChannelStatusPubReq&& from) noexcept
    : XmsgImGroupChannelStatusPubReq() {
    *this = ::std::move(from);
  }

  inline XmsgImGroupChannelStatusPubReq& operator=(XmsgImGroupChannelStatusPubReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImGroupChannelStatusPubReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImGroupChannelStatusPubReq* internal_default_instance() {
    return reinterpret_cast<const XmsgImGroupChannelStatusPubReq*>(
               &_XmsgImGroupChannelStatusPubReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(XmsgImGroupChannelStatusPubReq* other);
  friend void swap(XmsgImGroupChannelStatusPubReq& a, XmsgImGroupChannelStatusPubReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImGroupChannelStatusPubReq* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImGroupChannelStatusPubReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImGroupChannelStatusPubReq& from);
  void MergeFrom(const XmsgImGroupChannelStatusPubReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImGroupChannelStatusPubReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .XmsgImGroupChannelStatusChangedNotice notice = 1;
  int notice_size() const;
  void clear_notice();
  static const int kNoticeFieldNumber = 1;
  const ::XmsgImGroupChannelStatusChangedNotice& notice(int index) const;
  ::XmsgImGroupChannelStatusChangedNotice* mutable_notice(int index);
  ::XmsgImGroupChannelStatusChangedNotice* add_notice();
  ::google::protobuf::RepeatedPtrField< ::XmsgImGroupChannelStatusChangedNotice >*
      mutable_notice();
  const ::google::protobuf::RepeatedPtrField< ::XmsgImGroupChannelStatusChangedNotice >&
      notice() const;

  // bool more = 2;
  void clear_more();
  static const int kMoreFieldNumber = 2;
  bool more() const;
  void set_more(bool value);

  // @@protoc_insertion_point(class_scope:XmsgImGroupChannelStatusPubReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::XmsgImGroupChannelStatusChangedNotice > notice_;
  bool more_;
  mutable int _cached_size_;
  friend struct ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::TableStruct;
  friend void ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::InitDefaultsXmsgImGroupChannelStatusPubReqImpl();
};
// -------------------------------------------------------------------

class XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse();
  XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse& other);
  static const XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse*>(&_XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgImGroupChannelStatusPubRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImGroupChannelStatusPubRsp) */ {
 public:
  XmsgImGroupChannelStatusPubRsp();
  virtual ~XmsgImGroupChannelStatusPubRsp();

  XmsgImGroupChannelStatusPubRsp(const XmsgImGroupChannelStatusPubRsp& from);

  inline XmsgImGroupChannelStatusPubRsp& operator=(const XmsgImGroupChannelStatusPubRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImGroupChannelStatusPubRsp(XmsgImGroupChannelStatusPubRsp&& from) noexcept
    : XmsgImGroupChannelStatusPubRsp() {
    *this = ::std::move(from);
  }

  inline XmsgImGroupChannelStatusPubRsp& operator=(XmsgImGroupChannelStatusPubRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImGroupChannelStatusPubRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImGroupChannelStatusPubRsp* internal_default_instance() {
    return reinterpret_cast<const XmsgImGroupChannelStatusPubRsp*>(
               &_XmsgImGroupChannelStatusPubRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(XmsgImGroupChannelStatusPubRsp* other);
  friend void swap(XmsgImGroupChannelStatusPubRsp& a, XmsgImGroupChannelStatusPubRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImGroupChannelStatusPubRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImGroupChannelStatusPubRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImGroupChannelStatusPubRsp& from);
  void MergeFrom(const XmsgImGroupChannelStatusPubRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImGroupChannelStatusPubRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> ext = 1;
  int ext_size() const;
  void clear_ext();
  static const int kExtFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      ext() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_ext();

  // @@protoc_insertion_point(class_scope:XmsgImGroupChannelStatusPubRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > ext_;
  mutable int _cached_size_;
  friend struct ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::TableStruct;
  friend void ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::InitDefaultsXmsgImGroupChannelStatusPubRspImpl();
};
// -------------------------------------------------------------------

class XmsgImGroupChannelStatusChangedNotice : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImGroupChannelStatusChangedNotice) */ {
 public:
  XmsgImGroupChannelStatusChangedNotice();
  virtual ~XmsgImGroupChannelStatusChangedNotice();

  XmsgImGroupChannelStatusChangedNotice(const XmsgImGroupChannelStatusChangedNotice& from);

  inline XmsgImGroupChannelStatusChangedNotice& operator=(const XmsgImGroupChannelStatusChangedNotice& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImGroupChannelStatusChangedNotice(XmsgImGroupChannelStatusChangedNotice&& from) noexcept
    : XmsgImGroupChannelStatusChangedNotice() {
    *this = ::std::move(from);
  }

  inline XmsgImGroupChannelStatusChangedNotice& operator=(XmsgImGroupChannelStatusChangedNotice&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImGroupChannelStatusChangedNotice& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImGroupChannelStatusChangedNotice* internal_default_instance() {
    return reinterpret_cast<const XmsgImGroupChannelStatusChangedNotice*>(
               &_XmsgImGroupChannelStatusChangedNotice_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(XmsgImGroupChannelStatusChangedNotice* other);
  friend void swap(XmsgImGroupChannelStatusChangedNotice& a, XmsgImGroupChannelStatusChangedNotice& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImGroupChannelStatusChangedNotice* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImGroupChannelStatusChangedNotice* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImGroupChannelStatusChangedNotice& from);
  void MergeFrom(const XmsgImGroupChannelStatusChangedNotice& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImGroupChannelStatusChangedNotice* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cgt = 1;
  void clear_cgt();
  static const int kCgtFieldNumber = 1;
  const ::std::string& cgt() const;
  void set_cgt(const ::std::string& value);
  #if LANG_CXX11
  void set_cgt(::std::string&& value);
  #endif
  void set_cgt(const char* value);
  void set_cgt(const char* value, size_t size);
  ::std::string* mutable_cgt();
  ::std::string* release_cgt();
  void set_allocated_cgt(::std::string* cgt);

  // string status = 4;
  void clear_status();
  static const int kStatusFieldNumber = 4;
  const ::std::string& status() const;
  void set_status(const ::std::string& value);
  #if LANG_CXX11
  void set_status(::std::string&& value);
  #endif
  void set_status(const char* value);
  void set_status(const char* value, size_t size);
  ::std::string* mutable_status();
  ::std::string* release_status();
  void set_allocated_status(::std::string* status);

  // @@protoc_insertion_point(class_scope:XmsgImGroupChannelStatusChangedNotice)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cgt_;
  ::google::protobuf::internal::ArenaStringPtr status_;
  mutable int _cached_size_;
  friend struct ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::TableStruct;
  friend void ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::InitDefaultsXmsgImGroupChannelStatusChangedNoticeImpl();
};
// -------------------------------------------------------------------

class XmsgImGroupNeSyncEventReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImGroupNeSyncEventReq) */ {
 public:
  XmsgImGroupNeSyncEventReq();
  virtual ~XmsgImGroupNeSyncEventReq();

  XmsgImGroupNeSyncEventReq(const XmsgImGroupNeSyncEventReq& from);

  inline XmsgImGroupNeSyncEventReq& operator=(const XmsgImGroupNeSyncEventReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImGroupNeSyncEventReq(XmsgImGroupNeSyncEventReq&& from) noexcept
    : XmsgImGroupNeSyncEventReq() {
    *this = ::std::move(from);
  }

  inline XmsgImGroupNeSyncEventReq& operator=(XmsgImGroupNeSyncEventReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImGroupNeSyncEventReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImGroupNeSyncEventReq* internal_default_instance() {
    return reinterpret_cast<const XmsgImGroupNeSyncEventReq*>(
               &_XmsgImGroupNeSyncEventReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(XmsgImGroupNeSyncEventReq* other);
  friend void swap(XmsgImGroupNeSyncEventReq& a, XmsgImGroupNeSyncEventReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImGroupNeSyncEventReq* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImGroupNeSyncEventReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImGroupNeSyncEventReq& from);
  void MergeFrom(const XmsgImGroupNeSyncEventReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImGroupNeSyncEventReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string msg = 3;
  void clear_msg();
  static const int kMsgFieldNumber = 3;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // bytes dat = 4;
  void clear_dat();
  static const int kDatFieldNumber = 4;
  const ::std::string& dat() const;
  void set_dat(const ::std::string& value);
  #if LANG_CXX11
  void set_dat(::std::string&& value);
  #endif
  void set_dat(const char* value);
  void set_dat(const void* value, size_t size);
  ::std::string* mutable_dat();
  ::std::string* release_dat();
  void set_allocated_dat(::std::string* dat);

  // uint64 cid = 1;
  void clear_cid();
  static const int kCidFieldNumber = 1;
  ::google::protobuf::uint64 cid() const;
  void set_cid(::google::protobuf::uint64 value);

  // uint64 ver = 2;
  void clear_ver();
  static const int kVerFieldNumber = 2;
  ::google::protobuf::uint64 ver() const;
  void set_ver(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:XmsgImGroupNeSyncEventReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::internal::ArenaStringPtr dat_;
  ::google::protobuf::uint64 cid_;
  ::google::protobuf::uint64 ver_;
  mutable int _cached_size_;
  friend struct ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::TableStruct;
  friend void ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::InitDefaultsXmsgImGroupNeSyncEventReqImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// XmsgImGroupObjInfoQueryReq

// string ucgt = 1;
inline void XmsgImGroupObjInfoQueryReq::clear_ucgt() {
  ucgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImGroupObjInfoQueryReq::ucgt() const {
  // @@protoc_insertion_point(field_get:XmsgImGroupObjInfoQueryReq.ucgt)
  return ucgt_.GetNoArena();
}
inline void XmsgImGroupObjInfoQueryReq::set_ucgt(const ::std::string& value) {
  
  ucgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImGroupObjInfoQueryReq.ucgt)
}
#if LANG_CXX11
inline void XmsgImGroupObjInfoQueryReq::set_ucgt(::std::string&& value) {
  
  ucgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImGroupObjInfoQueryReq.ucgt)
}
#endif
inline void XmsgImGroupObjInfoQueryReq::set_ucgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ucgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImGroupObjInfoQueryReq.ucgt)
}
inline void XmsgImGroupObjInfoQueryReq::set_ucgt(const char* value, size_t size) {
  
  ucgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImGroupObjInfoQueryReq.ucgt)
}
inline ::std::string* XmsgImGroupObjInfoQueryReq::mutable_ucgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImGroupObjInfoQueryReq.ucgt)
  return ucgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImGroupObjInfoQueryReq::release_ucgt() {
  // @@protoc_insertion_point(field_release:XmsgImGroupObjInfoQueryReq.ucgt)
  
  return ucgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImGroupObjInfoQueryReq::set_allocated_ucgt(::std::string* ucgt) {
  if (ucgt != NULL) {
    
  } else {
    
  }
  ucgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ucgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgImGroupObjInfoQueryReq.ucgt)
}

// string gcgt = 2;
inline void XmsgImGroupObjInfoQueryReq::clear_gcgt() {
  gcgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImGroupObjInfoQueryReq::gcgt() const {
  // @@protoc_insertion_point(field_get:XmsgImGroupObjInfoQueryReq.gcgt)
  return gcgt_.GetNoArena();
}
inline void XmsgImGroupObjInfoQueryReq::set_gcgt(const ::std::string& value) {
  
  gcgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImGroupObjInfoQueryReq.gcgt)
}
#if LANG_CXX11
inline void XmsgImGroupObjInfoQueryReq::set_gcgt(::std::string&& value) {
  
  gcgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImGroupObjInfoQueryReq.gcgt)
}
#endif
inline void XmsgImGroupObjInfoQueryReq::set_gcgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  gcgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImGroupObjInfoQueryReq.gcgt)
}
inline void XmsgImGroupObjInfoQueryReq::set_gcgt(const char* value, size_t size) {
  
  gcgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImGroupObjInfoQueryReq.gcgt)
}
inline ::std::string* XmsgImGroupObjInfoQueryReq::mutable_gcgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImGroupObjInfoQueryReq.gcgt)
  return gcgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImGroupObjInfoQueryReq::release_gcgt() {
  // @@protoc_insertion_point(field_release:XmsgImGroupObjInfoQueryReq.gcgt)
  
  return gcgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImGroupObjInfoQueryReq::set_allocated_gcgt(::std::string* gcgt) {
  if (gcgt != NULL) {
    
  } else {
    
  }
  gcgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gcgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgImGroupObjInfoQueryReq.gcgt)
}

// string oid = 3;
inline void XmsgImGroupObjInfoQueryReq::clear_oid() {
  oid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImGroupObjInfoQueryReq::oid() const {
  // @@protoc_insertion_point(field_get:XmsgImGroupObjInfoQueryReq.oid)
  return oid_.GetNoArena();
}
inline void XmsgImGroupObjInfoQueryReq::set_oid(const ::std::string& value) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImGroupObjInfoQueryReq.oid)
}
#if LANG_CXX11
inline void XmsgImGroupObjInfoQueryReq::set_oid(::std::string&& value) {
  
  oid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImGroupObjInfoQueryReq.oid)
}
#endif
inline void XmsgImGroupObjInfoQueryReq::set_oid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImGroupObjInfoQueryReq.oid)
}
inline void XmsgImGroupObjInfoQueryReq::set_oid(const char* value, size_t size) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImGroupObjInfoQueryReq.oid)
}
inline ::std::string* XmsgImGroupObjInfoQueryReq::mutable_oid() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImGroupObjInfoQueryReq.oid)
  return oid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImGroupObjInfoQueryReq::release_oid() {
  // @@protoc_insertion_point(field_release:XmsgImGroupObjInfoQueryReq.oid)
  
  return oid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImGroupObjInfoQueryReq::set_allocated_oid(::std::string* oid) {
  if (oid != NULL) {
    
  } else {
    
  }
  oid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oid);
  // @@protoc_insertion_point(field_set_allocated:XmsgImGroupObjInfoQueryReq.oid)
}

// -------------------------------------------------------------------

// XmsgImGroupObjInfoQueryRsp

// string ucgt = 1;
inline void XmsgImGroupObjInfoQueryRsp::clear_ucgt() {
  ucgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImGroupObjInfoQueryRsp::ucgt() const {
  // @@protoc_insertion_point(field_get:XmsgImGroupObjInfoQueryRsp.ucgt)
  return ucgt_.GetNoArena();
}
inline void XmsgImGroupObjInfoQueryRsp::set_ucgt(const ::std::string& value) {
  
  ucgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImGroupObjInfoQueryRsp.ucgt)
}
#if LANG_CXX11
inline void XmsgImGroupObjInfoQueryRsp::set_ucgt(::std::string&& value) {
  
  ucgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImGroupObjInfoQueryRsp.ucgt)
}
#endif
inline void XmsgImGroupObjInfoQueryRsp::set_ucgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ucgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImGroupObjInfoQueryRsp.ucgt)
}
inline void XmsgImGroupObjInfoQueryRsp::set_ucgt(const char* value, size_t size) {
  
  ucgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImGroupObjInfoQueryRsp.ucgt)
}
inline ::std::string* XmsgImGroupObjInfoQueryRsp::mutable_ucgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImGroupObjInfoQueryRsp.ucgt)
  return ucgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImGroupObjInfoQueryRsp::release_ucgt() {
  // @@protoc_insertion_point(field_release:XmsgImGroupObjInfoQueryRsp.ucgt)
  
  return ucgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImGroupObjInfoQueryRsp::set_allocated_ucgt(::std::string* ucgt) {
  if (ucgt != NULL) {
    
  } else {
    
  }
  ucgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ucgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgImGroupObjInfoQueryRsp.ucgt)
}

// uint64 gts = 2;
inline void XmsgImGroupObjInfoQueryRsp::clear_gts() {
  gts_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImGroupObjInfoQueryRsp::gts() const {
  // @@protoc_insertion_point(field_get:XmsgImGroupObjInfoQueryRsp.gts)
  return gts_;
}
inline void XmsgImGroupObjInfoQueryRsp::set_gts(::google::protobuf::uint64 value) {
  
  gts_ = value;
  // @@protoc_insertion_point(field_set:XmsgImGroupObjInfoQueryRsp.gts)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// XmsgImHlrUsrInitReq

// string cgt = 1;
inline void XmsgImHlrUsrInitReq::clear_cgt() {
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImHlrUsrInitReq::cgt() const {
  // @@protoc_insertion_point(field_get:XmsgImHlrUsrInitReq.cgt)
  return cgt_.GetNoArena();
}
inline void XmsgImHlrUsrInitReq::set_cgt(const ::std::string& value) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImHlrUsrInitReq.cgt)
}
#if LANG_CXX11
inline void XmsgImHlrUsrInitReq::set_cgt(::std::string&& value) {
  
  cgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImHlrUsrInitReq.cgt)
}
#endif
inline void XmsgImHlrUsrInitReq::set_cgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImHlrUsrInitReq.cgt)
}
inline void XmsgImHlrUsrInitReq::set_cgt(const char* value, size_t size) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImHlrUsrInitReq.cgt)
}
inline ::std::string* XmsgImHlrUsrInitReq::mutable_cgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImHlrUsrInitReq.cgt)
  return cgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImHlrUsrInitReq::release_cgt() {
  // @@protoc_insertion_point(field_release:XmsgImHlrUsrInitReq.cgt)
  
  return cgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImHlrUsrInitReq::set_allocated_cgt(::std::string* cgt) {
  if (cgt != NULL) {
    
  } else {
    
  }
  cgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgImHlrUsrInitReq.cgt)
}

// map<string, string> ext = 2;
inline int XmsgImHlrUsrInitReq::ext_size() const {
  return ext_.size();
}
inline void XmsgImHlrUsrInitReq::clear_ext() {
  ext_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgImHlrUsrInitReq::ext() const {
  // @@protoc_insertion_point(field_map:XmsgImHlrUsrInitReq.ext)
  return ext_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgImHlrUsrInitReq::mutable_ext() {
  // @@protoc_insertion_point(field_mutable_map:XmsgImHlrUsrInitReq.ext)
  return ext_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// XmsgImHlrUsrInitRsp

// map<string, string> ext = 1;
inline int XmsgImHlrUsrInitRsp::ext_size() const {
  return ext_.size();
}
inline void XmsgImHlrUsrInitRsp::clear_ext() {
  ext_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgImHlrUsrInitRsp::ext() const {
  // @@protoc_insertion_point(field_map:XmsgImHlrUsrInitRsp.ext)
  return ext_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgImHlrUsrInitRsp::mutable_ext() {
  // @@protoc_insertion_point(field_mutable_map:XmsgImHlrUsrInitRsp.ext)
  return ext_.MutableMap();
}

// -------------------------------------------------------------------

// XmsgApClientKickReq

// string ccid = 1;
inline void XmsgApClientKickReq::clear_ccid() {
  ccid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgApClientKickReq::ccid() const {
  // @@protoc_insertion_point(field_get:XmsgApClientKickReq.ccid)
  return ccid_.GetNoArena();
}
inline void XmsgApClientKickReq::set_ccid(const ::std::string& value) {
  
  ccid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgApClientKickReq.ccid)
}
#if LANG_CXX11
inline void XmsgApClientKickReq::set_ccid(::std::string&& value) {
  
  ccid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgApClientKickReq.ccid)
}
#endif
inline void XmsgApClientKickReq::set_ccid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ccid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgApClientKickReq.ccid)
}
inline void XmsgApClientKickReq::set_ccid(const char* value, size_t size) {
  
  ccid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgApClientKickReq.ccid)
}
inline ::std::string* XmsgApClientKickReq::mutable_ccid() {
  
  // @@protoc_insertion_point(field_mutable:XmsgApClientKickReq.ccid)
  return ccid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgApClientKickReq::release_ccid() {
  // @@protoc_insertion_point(field_release:XmsgApClientKickReq.ccid)
  
  return ccid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgApClientKickReq::set_allocated_ccid(::std::string* ccid) {
  if (ccid != NULL) {
    
  } else {
    
  }
  ccid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ccid);
  // @@protoc_insertion_point(field_set_allocated:XmsgApClientKickReq.ccid)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// XmsgApClientKickRsp

// map<string, string> ext = 1;
inline int XmsgApClientKickRsp::ext_size() const {
  return ext_.size();
}
inline void XmsgApClientKickRsp::clear_ext() {
  ext_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgApClientKickRsp::ext() const {
  // @@protoc_insertion_point(field_map:XmsgApClientKickRsp.ext)
  return ext_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgApClientKickRsp::mutable_ext() {
  // @@protoc_insertion_point(field_mutable_map:XmsgApClientKickRsp.ext)
  return ext_.MutableMap();
}

// -------------------------------------------------------------------

// XmsgApClientLostNotice

// string apCgt = 1;
inline void XmsgApClientLostNotice::clear_apcgt() {
  apcgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgApClientLostNotice::apcgt() const {
  // @@protoc_insertion_point(field_get:XmsgApClientLostNotice.apCgt)
  return apcgt_.GetNoArena();
}
inline void XmsgApClientLostNotice::set_apcgt(const ::std::string& value) {
  
  apcgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgApClientLostNotice.apCgt)
}
#if LANG_CXX11
inline void XmsgApClientLostNotice::set_apcgt(::std::string&& value) {
  
  apcgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgApClientLostNotice.apCgt)
}
#endif
inline void XmsgApClientLostNotice::set_apcgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  apcgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgApClientLostNotice.apCgt)
}
inline void XmsgApClientLostNotice::set_apcgt(const char* value, size_t size) {
  
  apcgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgApClientLostNotice.apCgt)
}
inline ::std::string* XmsgApClientLostNotice::mutable_apcgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgApClientLostNotice.apCgt)
  return apcgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgApClientLostNotice::release_apcgt() {
  // @@protoc_insertion_point(field_release:XmsgApClientLostNotice.apCgt)
  
  return apcgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgApClientLostNotice::set_allocated_apcgt(::std::string* apcgt) {
  if (apcgt != NULL) {
    
  } else {
    
  }
  apcgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), apcgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgApClientLostNotice.apCgt)
}

// string cgt = 2;
inline void XmsgApClientLostNotice::clear_cgt() {
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgApClientLostNotice::cgt() const {
  // @@protoc_insertion_point(field_get:XmsgApClientLostNotice.cgt)
  return cgt_.GetNoArena();
}
inline void XmsgApClientLostNotice::set_cgt(const ::std::string& value) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgApClientLostNotice.cgt)
}
#if LANG_CXX11
inline void XmsgApClientLostNotice::set_cgt(::std::string&& value) {
  
  cgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgApClientLostNotice.cgt)
}
#endif
inline void XmsgApClientLostNotice::set_cgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgApClientLostNotice.cgt)
}
inline void XmsgApClientLostNotice::set_cgt(const char* value, size_t size) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgApClientLostNotice.cgt)
}
inline ::std::string* XmsgApClientLostNotice::mutable_cgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgApClientLostNotice.cgt)
  return cgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgApClientLostNotice::release_cgt() {
  // @@protoc_insertion_point(field_release:XmsgApClientLostNotice.cgt)
  
  return cgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgApClientLostNotice::set_allocated_cgt(::std::string* cgt) {
  if (cgt != NULL) {
    
  } else {
    
  }
  cgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgApClientLostNotice.cgt)
}

// string plat = 3;
inline void XmsgApClientLostNotice::clear_plat() {
  plat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgApClientLostNotice::plat() const {
  // @@protoc_insertion_point(field_get:XmsgApClientLostNotice.plat)
  return plat_.GetNoArena();
}
inline void XmsgApClientLostNotice::set_plat(const ::std::string& value) {
  
  plat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgApClientLostNotice.plat)
}
#if LANG_CXX11
inline void XmsgApClientLostNotice::set_plat(::std::string&& value) {
  
  plat_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgApClientLostNotice.plat)
}
#endif
inline void XmsgApClientLostNotice::set_plat(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  plat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgApClientLostNotice.plat)
}
inline void XmsgApClientLostNotice::set_plat(const char* value, size_t size) {
  
  plat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgApClientLostNotice.plat)
}
inline ::std::string* XmsgApClientLostNotice::mutable_plat() {
  
  // @@protoc_insertion_point(field_mutable:XmsgApClientLostNotice.plat)
  return plat_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgApClientLostNotice::release_plat() {
  // @@protoc_insertion_point(field_release:XmsgApClientLostNotice.plat)
  
  return plat_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgApClientLostNotice::set_allocated_plat(::std::string* plat) {
  if (plat != NULL) {
    
  } else {
    
  }
  plat_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), plat);
  // @@protoc_insertion_point(field_set_allocated:XmsgApClientLostNotice.plat)
}

// string did = 4;
inline void XmsgApClientLostNotice::clear_did() {
  did_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgApClientLostNotice::did() const {
  // @@protoc_insertion_point(field_get:XmsgApClientLostNotice.did)
  return did_.GetNoArena();
}
inline void XmsgApClientLostNotice::set_did(const ::std::string& value) {
  
  did_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgApClientLostNotice.did)
}
#if LANG_CXX11
inline void XmsgApClientLostNotice::set_did(::std::string&& value) {
  
  did_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgApClientLostNotice.did)
}
#endif
inline void XmsgApClientLostNotice::set_did(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  did_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgApClientLostNotice.did)
}
inline void XmsgApClientLostNotice::set_did(const char* value, size_t size) {
  
  did_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgApClientLostNotice.did)
}
inline ::std::string* XmsgApClientLostNotice::mutable_did() {
  
  // @@protoc_insertion_point(field_mutable:XmsgApClientLostNotice.did)
  return did_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgApClientLostNotice::release_did() {
  // @@protoc_insertion_point(field_release:XmsgApClientLostNotice.did)
  
  return did_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgApClientLostNotice::set_allocated_did(::std::string* did) {
  if (did != NULL) {
    
  } else {
    
  }
  did_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), did);
  // @@protoc_insertion_point(field_set_allocated:XmsgApClientLostNotice.did)
}

// string ccid = 5;
inline void XmsgApClientLostNotice::clear_ccid() {
  ccid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgApClientLostNotice::ccid() const {
  // @@protoc_insertion_point(field_get:XmsgApClientLostNotice.ccid)
  return ccid_.GetNoArena();
}
inline void XmsgApClientLostNotice::set_ccid(const ::std::string& value) {
  
  ccid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgApClientLostNotice.ccid)
}
#if LANG_CXX11
inline void XmsgApClientLostNotice::set_ccid(::std::string&& value) {
  
  ccid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgApClientLostNotice.ccid)
}
#endif
inline void XmsgApClientLostNotice::set_ccid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ccid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgApClientLostNotice.ccid)
}
inline void XmsgApClientLostNotice::set_ccid(const char* value, size_t size) {
  
  ccid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgApClientLostNotice.ccid)
}
inline ::std::string* XmsgApClientLostNotice::mutable_ccid() {
  
  // @@protoc_insertion_point(field_mutable:XmsgApClientLostNotice.ccid)
  return ccid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgApClientLostNotice::release_ccid() {
  // @@protoc_insertion_point(field_release:XmsgApClientLostNotice.ccid)
  
  return ccid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgApClientLostNotice::set_allocated_ccid(::std::string* ccid) {
  if (ccid != NULL) {
    
  } else {
    
  }
  ccid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ccid);
  // @@protoc_insertion_point(field_set_allocated:XmsgApClientLostNotice.ccid)
}

// -------------------------------------------------------------------

// XmsgApClientEstbNotice

// string apCgt = 1;
inline void XmsgApClientEstbNotice::clear_apcgt() {
  apcgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgApClientEstbNotice::apcgt() const {
  // @@protoc_insertion_point(field_get:XmsgApClientEstbNotice.apCgt)
  return apcgt_.GetNoArena();
}
inline void XmsgApClientEstbNotice::set_apcgt(const ::std::string& value) {
  
  apcgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgApClientEstbNotice.apCgt)
}
#if LANG_CXX11
inline void XmsgApClientEstbNotice::set_apcgt(::std::string&& value) {
  
  apcgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgApClientEstbNotice.apCgt)
}
#endif
inline void XmsgApClientEstbNotice::set_apcgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  apcgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgApClientEstbNotice.apCgt)
}
inline void XmsgApClientEstbNotice::set_apcgt(const char* value, size_t size) {
  
  apcgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgApClientEstbNotice.apCgt)
}
inline ::std::string* XmsgApClientEstbNotice::mutable_apcgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgApClientEstbNotice.apCgt)
  return apcgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgApClientEstbNotice::release_apcgt() {
  // @@protoc_insertion_point(field_release:XmsgApClientEstbNotice.apCgt)
  
  return apcgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgApClientEstbNotice::set_allocated_apcgt(::std::string* apcgt) {
  if (apcgt != NULL) {
    
  } else {
    
  }
  apcgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), apcgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgApClientEstbNotice.apCgt)
}

// string cgt = 2;
inline void XmsgApClientEstbNotice::clear_cgt() {
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgApClientEstbNotice::cgt() const {
  // @@protoc_insertion_point(field_get:XmsgApClientEstbNotice.cgt)
  return cgt_.GetNoArena();
}
inline void XmsgApClientEstbNotice::set_cgt(const ::std::string& value) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgApClientEstbNotice.cgt)
}
#if LANG_CXX11
inline void XmsgApClientEstbNotice::set_cgt(::std::string&& value) {
  
  cgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgApClientEstbNotice.cgt)
}
#endif
inline void XmsgApClientEstbNotice::set_cgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgApClientEstbNotice.cgt)
}
inline void XmsgApClientEstbNotice::set_cgt(const char* value, size_t size) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgApClientEstbNotice.cgt)
}
inline ::std::string* XmsgApClientEstbNotice::mutable_cgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgApClientEstbNotice.cgt)
  return cgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgApClientEstbNotice::release_cgt() {
  // @@protoc_insertion_point(field_release:XmsgApClientEstbNotice.cgt)
  
  return cgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgApClientEstbNotice::set_allocated_cgt(::std::string* cgt) {
  if (cgt != NULL) {
    
  } else {
    
  }
  cgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgApClientEstbNotice.cgt)
}

// string plat = 3;
inline void XmsgApClientEstbNotice::clear_plat() {
  plat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgApClientEstbNotice::plat() const {
  // @@protoc_insertion_point(field_get:XmsgApClientEstbNotice.plat)
  return plat_.GetNoArena();
}
inline void XmsgApClientEstbNotice::set_plat(const ::std::string& value) {
  
  plat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgApClientEstbNotice.plat)
}
#if LANG_CXX11
inline void XmsgApClientEstbNotice::set_plat(::std::string&& value) {
  
  plat_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgApClientEstbNotice.plat)
}
#endif
inline void XmsgApClientEstbNotice::set_plat(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  plat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgApClientEstbNotice.plat)
}
inline void XmsgApClientEstbNotice::set_plat(const char* value, size_t size) {
  
  plat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgApClientEstbNotice.plat)
}
inline ::std::string* XmsgApClientEstbNotice::mutable_plat() {
  
  // @@protoc_insertion_point(field_mutable:XmsgApClientEstbNotice.plat)
  return plat_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgApClientEstbNotice::release_plat() {
  // @@protoc_insertion_point(field_release:XmsgApClientEstbNotice.plat)
  
  return plat_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgApClientEstbNotice::set_allocated_plat(::std::string* plat) {
  if (plat != NULL) {
    
  } else {
    
  }
  plat_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), plat);
  // @@protoc_insertion_point(field_set_allocated:XmsgApClientEstbNotice.plat)
}

// string did = 4;
inline void XmsgApClientEstbNotice::clear_did() {
  did_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgApClientEstbNotice::did() const {
  // @@protoc_insertion_point(field_get:XmsgApClientEstbNotice.did)
  return did_.GetNoArena();
}
inline void XmsgApClientEstbNotice::set_did(const ::std::string& value) {
  
  did_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgApClientEstbNotice.did)
}
#if LANG_CXX11
inline void XmsgApClientEstbNotice::set_did(::std::string&& value) {
  
  did_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgApClientEstbNotice.did)
}
#endif
inline void XmsgApClientEstbNotice::set_did(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  did_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgApClientEstbNotice.did)
}
inline void XmsgApClientEstbNotice::set_did(const char* value, size_t size) {
  
  did_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgApClientEstbNotice.did)
}
inline ::std::string* XmsgApClientEstbNotice::mutable_did() {
  
  // @@protoc_insertion_point(field_mutable:XmsgApClientEstbNotice.did)
  return did_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgApClientEstbNotice::release_did() {
  // @@protoc_insertion_point(field_release:XmsgApClientEstbNotice.did)
  
  return did_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgApClientEstbNotice::set_allocated_did(::std::string* did) {
  if (did != NULL) {
    
  } else {
    
  }
  did_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), did);
  // @@protoc_insertion_point(field_set_allocated:XmsgApClientEstbNotice.did)
}

// string ccid = 5;
inline void XmsgApClientEstbNotice::clear_ccid() {
  ccid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgApClientEstbNotice::ccid() const {
  // @@protoc_insertion_point(field_get:XmsgApClientEstbNotice.ccid)
  return ccid_.GetNoArena();
}
inline void XmsgApClientEstbNotice::set_ccid(const ::std::string& value) {
  
  ccid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgApClientEstbNotice.ccid)
}
#if LANG_CXX11
inline void XmsgApClientEstbNotice::set_ccid(::std::string&& value) {
  
  ccid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgApClientEstbNotice.ccid)
}
#endif
inline void XmsgApClientEstbNotice::set_ccid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ccid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgApClientEstbNotice.ccid)
}
inline void XmsgApClientEstbNotice::set_ccid(const char* value, size_t size) {
  
  ccid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgApClientEstbNotice.ccid)
}
inline ::std::string* XmsgApClientEstbNotice::mutable_ccid() {
  
  // @@protoc_insertion_point(field_mutable:XmsgApClientEstbNotice.ccid)
  return ccid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgApClientEstbNotice::release_ccid() {
  // @@protoc_insertion_point(field_release:XmsgApClientEstbNotice.ccid)
  
  return ccid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgApClientEstbNotice::set_allocated_ccid(::std::string* ccid) {
  if (ccid != NULL) {
    
  } else {
    
  }
  ccid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ccid);
  // @@protoc_insertion_point(field_set_allocated:XmsgApClientEstbNotice.ccid)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// XmsgImGroupChannelStatusSubReq

// map<string, string> ext = 1;
inline int XmsgImGroupChannelStatusSubReq::ext_size() const {
  return ext_.size();
}
inline void XmsgImGroupChannelStatusSubReq::clear_ext() {
  ext_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgImGroupChannelStatusSubReq::ext() const {
  // @@protoc_insertion_point(field_map:XmsgImGroupChannelStatusSubReq.ext)
  return ext_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgImGroupChannelStatusSubReq::mutable_ext() {
  // @@protoc_insertion_point(field_mutable_map:XmsgImGroupChannelStatusSubReq.ext)
  return ext_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// XmsgImGroupChannelStatusSubRsp

// map<string, string> ext = 1;
inline int XmsgImGroupChannelStatusSubRsp::ext_size() const {
  return ext_.size();
}
inline void XmsgImGroupChannelStatusSubRsp::clear_ext() {
  ext_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgImGroupChannelStatusSubRsp::ext() const {
  // @@protoc_insertion_point(field_map:XmsgImGroupChannelStatusSubRsp.ext)
  return ext_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgImGroupChannelStatusSubRsp::mutable_ext() {
  // @@protoc_insertion_point(field_mutable_map:XmsgImGroupChannelStatusSubRsp.ext)
  return ext_.MutableMap();
}

// -------------------------------------------------------------------

// XmsgImGroupChannelStatusPubReq

// repeated .XmsgImGroupChannelStatusChangedNotice notice = 1;
inline int XmsgImGroupChannelStatusPubReq::notice_size() const {
  return notice_.size();
}
inline void XmsgImGroupChannelStatusPubReq::clear_notice() {
  notice_.Clear();
}
inline const ::XmsgImGroupChannelStatusChangedNotice& XmsgImGroupChannelStatusPubReq::notice(int index) const {
  // @@protoc_insertion_point(field_get:XmsgImGroupChannelStatusPubReq.notice)
  return notice_.Get(index);
}
inline ::XmsgImGroupChannelStatusChangedNotice* XmsgImGroupChannelStatusPubReq::mutable_notice(int index) {
  // @@protoc_insertion_point(field_mutable:XmsgImGroupChannelStatusPubReq.notice)
  return notice_.Mutable(index);
}
inline ::XmsgImGroupChannelStatusChangedNotice* XmsgImGroupChannelStatusPubReq::add_notice() {
  // @@protoc_insertion_point(field_add:XmsgImGroupChannelStatusPubReq.notice)
  return notice_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::XmsgImGroupChannelStatusChangedNotice >*
XmsgImGroupChannelStatusPubReq::mutable_notice() {
  // @@protoc_insertion_point(field_mutable_list:XmsgImGroupChannelStatusPubReq.notice)
  return &notice_;
}
inline const ::google::protobuf::RepeatedPtrField< ::XmsgImGroupChannelStatusChangedNotice >&
XmsgImGroupChannelStatusPubReq::notice() const {
  // @@protoc_insertion_point(field_list:XmsgImGroupChannelStatusPubReq.notice)
  return notice_;
}

// bool more = 2;
inline void XmsgImGroupChannelStatusPubReq::clear_more() {
  more_ = false;
}
inline bool XmsgImGroupChannelStatusPubReq::more() const {
  // @@protoc_insertion_point(field_get:XmsgImGroupChannelStatusPubReq.more)
  return more_;
}
inline void XmsgImGroupChannelStatusPubReq::set_more(bool value) {
  
  more_ = value;
  // @@protoc_insertion_point(field_set:XmsgImGroupChannelStatusPubReq.more)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// XmsgImGroupChannelStatusPubRsp

// map<string, string> ext = 1;
inline int XmsgImGroupChannelStatusPubRsp::ext_size() const {
  return ext_.size();
}
inline void XmsgImGroupChannelStatusPubRsp::clear_ext() {
  ext_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgImGroupChannelStatusPubRsp::ext() const {
  // @@protoc_insertion_point(field_map:XmsgImGroupChannelStatusPubRsp.ext)
  return ext_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgImGroupChannelStatusPubRsp::mutable_ext() {
  // @@protoc_insertion_point(field_mutable_map:XmsgImGroupChannelStatusPubRsp.ext)
  return ext_.MutableMap();
}

// -------------------------------------------------------------------

// XmsgImGroupChannelStatusChangedNotice

// string cgt = 1;
inline void XmsgImGroupChannelStatusChangedNotice::clear_cgt() {
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImGroupChannelStatusChangedNotice::cgt() const {
  // @@protoc_insertion_point(field_get:XmsgImGroupChannelStatusChangedNotice.cgt)
  return cgt_.GetNoArena();
}
inline void XmsgImGroupChannelStatusChangedNotice::set_cgt(const ::std::string& value) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImGroupChannelStatusChangedNotice.cgt)
}
#if LANG_CXX11
inline void XmsgImGroupChannelStatusChangedNotice::set_cgt(::std::string&& value) {
  
  cgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImGroupChannelStatusChangedNotice.cgt)
}
#endif
inline void XmsgImGroupChannelStatusChangedNotice::set_cgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImGroupChannelStatusChangedNotice.cgt)
}
inline void XmsgImGroupChannelStatusChangedNotice::set_cgt(const char* value, size_t size) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImGroupChannelStatusChangedNotice.cgt)
}
inline ::std::string* XmsgImGroupChannelStatusChangedNotice::mutable_cgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImGroupChannelStatusChangedNotice.cgt)
  return cgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImGroupChannelStatusChangedNotice::release_cgt() {
  // @@protoc_insertion_point(field_release:XmsgImGroupChannelStatusChangedNotice.cgt)
  
  return cgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImGroupChannelStatusChangedNotice::set_allocated_cgt(::std::string* cgt) {
  if (cgt != NULL) {
    
  } else {
    
  }
  cgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgImGroupChannelStatusChangedNotice.cgt)
}

// string status = 4;
inline void XmsgImGroupChannelStatusChangedNotice::clear_status() {
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImGroupChannelStatusChangedNotice::status() const {
  // @@protoc_insertion_point(field_get:XmsgImGroupChannelStatusChangedNotice.status)
  return status_.GetNoArena();
}
inline void XmsgImGroupChannelStatusChangedNotice::set_status(const ::std::string& value) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImGroupChannelStatusChangedNotice.status)
}
#if LANG_CXX11
inline void XmsgImGroupChannelStatusChangedNotice::set_status(::std::string&& value) {
  
  status_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImGroupChannelStatusChangedNotice.status)
}
#endif
inline void XmsgImGroupChannelStatusChangedNotice::set_status(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImGroupChannelStatusChangedNotice.status)
}
inline void XmsgImGroupChannelStatusChangedNotice::set_status(const char* value, size_t size) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImGroupChannelStatusChangedNotice.status)
}
inline ::std::string* XmsgImGroupChannelStatusChangedNotice::mutable_status() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImGroupChannelStatusChangedNotice.status)
  return status_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImGroupChannelStatusChangedNotice::release_status() {
  // @@protoc_insertion_point(field_release:XmsgImGroupChannelStatusChangedNotice.status)
  
  return status_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImGroupChannelStatusChangedNotice::set_allocated_status(::std::string* status) {
  if (status != NULL) {
    
  } else {
    
  }
  status_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), status);
  // @@protoc_insertion_point(field_set_allocated:XmsgImGroupChannelStatusChangedNotice.status)
}

// -------------------------------------------------------------------

// XmsgImGroupNeSyncEventReq

// uint64 cid = 1;
inline void XmsgImGroupNeSyncEventReq::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImGroupNeSyncEventReq::cid() const {
  // @@protoc_insertion_point(field_get:XmsgImGroupNeSyncEventReq.cid)
  return cid_;
}
inline void XmsgImGroupNeSyncEventReq::set_cid(::google::protobuf::uint64 value) {
  
  cid_ = value;
  // @@protoc_insertion_point(field_set:XmsgImGroupNeSyncEventReq.cid)
}

// uint64 ver = 2;
inline void XmsgImGroupNeSyncEventReq::clear_ver() {
  ver_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImGroupNeSyncEventReq::ver() const {
  // @@protoc_insertion_point(field_get:XmsgImGroupNeSyncEventReq.ver)
  return ver_;
}
inline void XmsgImGroupNeSyncEventReq::set_ver(::google::protobuf::uint64 value) {
  
  ver_ = value;
  // @@protoc_insertion_point(field_set:XmsgImGroupNeSyncEventReq.ver)
}

// string msg = 3;
inline void XmsgImGroupNeSyncEventReq::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImGroupNeSyncEventReq::msg() const {
  // @@protoc_insertion_point(field_get:XmsgImGroupNeSyncEventReq.msg)
  return msg_.GetNoArena();
}
inline void XmsgImGroupNeSyncEventReq::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImGroupNeSyncEventReq.msg)
}
#if LANG_CXX11
inline void XmsgImGroupNeSyncEventReq::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImGroupNeSyncEventReq.msg)
}
#endif
inline void XmsgImGroupNeSyncEventReq::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImGroupNeSyncEventReq.msg)
}
inline void XmsgImGroupNeSyncEventReq::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImGroupNeSyncEventReq.msg)
}
inline ::std::string* XmsgImGroupNeSyncEventReq::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImGroupNeSyncEventReq.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImGroupNeSyncEventReq::release_msg() {
  // @@protoc_insertion_point(field_release:XmsgImGroupNeSyncEventReq.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImGroupNeSyncEventReq::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:XmsgImGroupNeSyncEventReq.msg)
}

// bytes dat = 4;
inline void XmsgImGroupNeSyncEventReq::clear_dat() {
  dat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImGroupNeSyncEventReq::dat() const {
  // @@protoc_insertion_point(field_get:XmsgImGroupNeSyncEventReq.dat)
  return dat_.GetNoArena();
}
inline void XmsgImGroupNeSyncEventReq::set_dat(const ::std::string& value) {
  
  dat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImGroupNeSyncEventReq.dat)
}
#if LANG_CXX11
inline void XmsgImGroupNeSyncEventReq::set_dat(::std::string&& value) {
  
  dat_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImGroupNeSyncEventReq.dat)
}
#endif
inline void XmsgImGroupNeSyncEventReq::set_dat(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImGroupNeSyncEventReq.dat)
}
inline void XmsgImGroupNeSyncEventReq::set_dat(const void* value, size_t size) {
  
  dat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImGroupNeSyncEventReq.dat)
}
inline ::std::string* XmsgImGroupNeSyncEventReq::mutable_dat() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImGroupNeSyncEventReq.dat)
  return dat_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImGroupNeSyncEventReq::release_dat() {
  // @@protoc_insertion_point(field_release:XmsgImGroupNeSyncEventReq.dat)
  
  return dat_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImGroupNeSyncEventReq::set_allocated_dat(::std::string* dat) {
  if (dat != NULL) {
    
  } else {
    
  }
  dat_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dat);
  // @@protoc_insertion_point(field_set_allocated:XmsgImGroupNeSyncEventReq.dat)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_sys_2dx_2dmsg_2dim_2dgroup_2eproto__INCLUDED

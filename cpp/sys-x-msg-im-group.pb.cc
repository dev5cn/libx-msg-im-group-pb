// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sys-x-msg-im-group.proto

#include "sys-x-msg-im-group.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class XmsgImGroupObjInfoQueryReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupObjInfoQueryReq>
      _instance;
} _XmsgImGroupObjInfoQueryReq_default_instance_;
class XmsgImGroupObjInfoQueryRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupObjInfoQueryRsp>
      _instance;
} _XmsgImGroupObjInfoQueryRsp_default_instance_;
class XmsgImHlrUsrInitReq_ExtEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImHlrUsrInitReq_ExtEntry_DoNotUse>
      _instance;
} _XmsgImHlrUsrInitReq_ExtEntry_DoNotUse_default_instance_;
class XmsgImHlrUsrInitReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImHlrUsrInitReq>
      _instance;
} _XmsgImHlrUsrInitReq_default_instance_;
class XmsgImHlrUsrInitRsp_ExtEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse>
      _instance;
} _XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse_default_instance_;
class XmsgImHlrUsrInitRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImHlrUsrInitRsp>
      _instance;
} _XmsgImHlrUsrInitRsp_default_instance_;
class XmsgApClientKickReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgApClientKickReq>
      _instance;
} _XmsgApClientKickReq_default_instance_;
class XmsgApClientKickRsp_ExtEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgApClientKickRsp_ExtEntry_DoNotUse>
      _instance;
} _XmsgApClientKickRsp_ExtEntry_DoNotUse_default_instance_;
class XmsgApClientKickRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgApClientKickRsp>
      _instance;
} _XmsgApClientKickRsp_default_instance_;
class XmsgApClientLostNoticeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgApClientLostNotice>
      _instance;
} _XmsgApClientLostNotice_default_instance_;
class XmsgApClientEstbNoticeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgApClientEstbNotice>
      _instance;
} _XmsgApClientEstbNotice_default_instance_;
class XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse>
      _instance;
} _XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse_default_instance_;
class XmsgImGroupChannelStatusSubReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupChannelStatusSubReq>
      _instance;
} _XmsgImGroupChannelStatusSubReq_default_instance_;
class XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse>
      _instance;
} _XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse_default_instance_;
class XmsgImGroupChannelStatusSubRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupChannelStatusSubRsp>
      _instance;
} _XmsgImGroupChannelStatusSubRsp_default_instance_;
class XmsgImGroupChannelStatusPubReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupChannelStatusPubReq>
      _instance;
} _XmsgImGroupChannelStatusPubReq_default_instance_;
class XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse>
      _instance;
} _XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse_default_instance_;
class XmsgImGroupChannelStatusPubRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupChannelStatusPubRsp>
      _instance;
} _XmsgImGroupChannelStatusPubRsp_default_instance_;
class XmsgImGroupChannelStatusChangedNoticeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupChannelStatusChangedNotice>
      _instance;
} _XmsgImGroupChannelStatusChangedNotice_default_instance_;
class XmsgImGroupNeSyncEventReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImGroupNeSyncEventReq>
      _instance;
} _XmsgImGroupNeSyncEventReq_default_instance_;
namespace protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto {
void InitDefaultsXmsgImGroupObjInfoQueryReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImGroupObjInfoQueryReq_default_instance_;
    new (ptr) ::XmsgImGroupObjInfoQueryReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImGroupObjInfoQueryReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupObjInfoQueryReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupObjInfoQueryReqImpl);
}

void InitDefaultsXmsgImGroupObjInfoQueryRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImGroupObjInfoQueryRsp_default_instance_;
    new (ptr) ::XmsgImGroupObjInfoQueryRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImGroupObjInfoQueryRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupObjInfoQueryRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupObjInfoQueryRspImpl);
}

void InitDefaultsXmsgImHlrUsrInitReq_ExtEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImHlrUsrInitReq_ExtEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImHlrUsrInitReq_ExtEntry_DoNotUse();
  }
  ::XmsgImHlrUsrInitReq_ExtEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImHlrUsrInitReq_ExtEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImHlrUsrInitReq_ExtEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImHlrUsrInitReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::InitDefaultsXmsgImHlrUsrInitReq_ExtEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImHlrUsrInitReq_default_instance_;
    new (ptr) ::XmsgImHlrUsrInitReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImHlrUsrInitReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgImHlrUsrInitReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImHlrUsrInitReqImpl);
}

void InitDefaultsXmsgImHlrUsrInitRsp_ExtEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse();
  }
  ::XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImHlrUsrInitRsp_ExtEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImHlrUsrInitRsp_ExtEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImHlrUsrInitRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::InitDefaultsXmsgImHlrUsrInitRsp_ExtEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImHlrUsrInitRsp_default_instance_;
    new (ptr) ::XmsgImHlrUsrInitRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImHlrUsrInitRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgImHlrUsrInitRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImHlrUsrInitRspImpl);
}

void InitDefaultsXmsgApClientKickReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgApClientKickReq_default_instance_;
    new (ptr) ::XmsgApClientKickReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgApClientKickReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgApClientKickReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgApClientKickReqImpl);
}

void InitDefaultsXmsgApClientKickRsp_ExtEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgApClientKickRsp_ExtEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgApClientKickRsp_ExtEntry_DoNotUse();
  }
  ::XmsgApClientKickRsp_ExtEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgApClientKickRsp_ExtEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgApClientKickRsp_ExtEntry_DoNotUseImpl);
}

void InitDefaultsXmsgApClientKickRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::InitDefaultsXmsgApClientKickRsp_ExtEntry_DoNotUse();
  {
    void* ptr = &::_XmsgApClientKickRsp_default_instance_;
    new (ptr) ::XmsgApClientKickRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgApClientKickRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgApClientKickRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgApClientKickRspImpl);
}

void InitDefaultsXmsgApClientLostNoticeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgApClientLostNotice_default_instance_;
    new (ptr) ::XmsgApClientLostNotice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgApClientLostNotice::InitAsDefaultInstance();
}

void InitDefaultsXmsgApClientLostNotice() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgApClientLostNoticeImpl);
}

void InitDefaultsXmsgApClientEstbNoticeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgApClientEstbNotice_default_instance_;
    new (ptr) ::XmsgApClientEstbNotice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgApClientEstbNotice::InitAsDefaultInstance();
}

void InitDefaultsXmsgApClientEstbNotice() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgApClientEstbNoticeImpl);
}

void InitDefaultsXmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse();
  }
  ::XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImGroupChannelStatusSubReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::InitDefaultsXmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImGroupChannelStatusSubReq_default_instance_;
    new (ptr) ::XmsgImGroupChannelStatusSubReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImGroupChannelStatusSubReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupChannelStatusSubReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupChannelStatusSubReqImpl);
}

void InitDefaultsXmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse();
  }
  ::XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImGroupChannelStatusSubRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::InitDefaultsXmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImGroupChannelStatusSubRsp_default_instance_;
    new (ptr) ::XmsgImGroupChannelStatusSubRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImGroupChannelStatusSubRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupChannelStatusSubRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupChannelStatusSubRspImpl);
}

void InitDefaultsXmsgImGroupChannelStatusPubReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::InitDefaultsXmsgImGroupChannelStatusChangedNotice();
  {
    void* ptr = &::_XmsgImGroupChannelStatusPubReq_default_instance_;
    new (ptr) ::XmsgImGroupChannelStatusPubReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImGroupChannelStatusPubReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupChannelStatusPubReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupChannelStatusPubReqImpl);
}

void InitDefaultsXmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse();
  }
  ::XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImGroupChannelStatusPubRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::InitDefaultsXmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImGroupChannelStatusPubRsp_default_instance_;
    new (ptr) ::XmsgImGroupChannelStatusPubRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImGroupChannelStatusPubRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupChannelStatusPubRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupChannelStatusPubRspImpl);
}

void InitDefaultsXmsgImGroupChannelStatusChangedNoticeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImGroupChannelStatusChangedNotice_default_instance_;
    new (ptr) ::XmsgImGroupChannelStatusChangedNotice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImGroupChannelStatusChangedNotice::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupChannelStatusChangedNotice() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupChannelStatusChangedNoticeImpl);
}

void InitDefaultsXmsgImGroupNeSyncEventReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImGroupNeSyncEventReq_default_instance_;
    new (ptr) ::XmsgImGroupNeSyncEventReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImGroupNeSyncEventReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgImGroupNeSyncEventReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImGroupNeSyncEventReqImpl);
}

::google::protobuf::Metadata file_level_metadata[20];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupObjInfoQueryReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupObjInfoQueryReq, ucgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupObjInfoQueryReq, gcgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupObjInfoQueryReq, oid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupObjInfoQueryRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupObjInfoQueryRsp, ucgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupObjInfoQueryRsp, gts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrUsrInitReq_ExtEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrUsrInitReq_ExtEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrUsrInitReq_ExtEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrUsrInitReq_ExtEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrUsrInitReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrUsrInitReq, cgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrUsrInitReq, ext_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrUsrInitRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImHlrUsrInitRsp, ext_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgApClientKickReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgApClientKickReq, ccid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgApClientKickRsp_ExtEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgApClientKickRsp_ExtEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgApClientKickRsp_ExtEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgApClientKickRsp_ExtEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgApClientKickRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgApClientKickRsp, ext_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgApClientLostNotice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgApClientLostNotice, apcgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgApClientLostNotice, cgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgApClientLostNotice, plat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgApClientLostNotice, did_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgApClientLostNotice, ccid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgApClientEstbNotice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgApClientEstbNotice, apcgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgApClientEstbNotice, cgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgApClientEstbNotice, plat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgApClientEstbNotice, did_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgApClientEstbNotice, ccid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupChannelStatusSubReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupChannelStatusSubReq, ext_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupChannelStatusSubRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupChannelStatusSubRsp, ext_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupChannelStatusPubReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupChannelStatusPubReq, notice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupChannelStatusPubReq, more_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupChannelStatusPubRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupChannelStatusPubRsp, ext_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupChannelStatusChangedNotice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupChannelStatusChangedNotice, cgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupChannelStatusChangedNotice, status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupNeSyncEventReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupNeSyncEventReq, cid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupNeSyncEventReq, ver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupNeSyncEventReq, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImGroupNeSyncEventReq, dat_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::XmsgImGroupObjInfoQueryReq)},
  { 8, -1, sizeof(::XmsgImGroupObjInfoQueryRsp)},
  { 15, 22, sizeof(::XmsgImHlrUsrInitReq_ExtEntry_DoNotUse)},
  { 24, -1, sizeof(::XmsgImHlrUsrInitReq)},
  { 31, 38, sizeof(::XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse)},
  { 40, -1, sizeof(::XmsgImHlrUsrInitRsp)},
  { 46, -1, sizeof(::XmsgApClientKickReq)},
  { 52, 59, sizeof(::XmsgApClientKickRsp_ExtEntry_DoNotUse)},
  { 61, -1, sizeof(::XmsgApClientKickRsp)},
  { 67, -1, sizeof(::XmsgApClientLostNotice)},
  { 77, -1, sizeof(::XmsgApClientEstbNotice)},
  { 87, 94, sizeof(::XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse)},
  { 96, -1, sizeof(::XmsgImGroupChannelStatusSubReq)},
  { 102, 109, sizeof(::XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse)},
  { 111, -1, sizeof(::XmsgImGroupChannelStatusSubRsp)},
  { 117, -1, sizeof(::XmsgImGroupChannelStatusPubReq)},
  { 124, 131, sizeof(::XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse)},
  { 133, -1, sizeof(::XmsgImGroupChannelStatusPubRsp)},
  { 139, -1, sizeof(::XmsgImGroupChannelStatusChangedNotice)},
  { 146, -1, sizeof(::XmsgImGroupNeSyncEventReq)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupObjInfoQueryReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupObjInfoQueryRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImHlrUsrInitReq_ExtEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImHlrUsrInitReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImHlrUsrInitRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgApClientKickReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgApClientKickRsp_ExtEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgApClientKickRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgApClientLostNotice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgApClientEstbNotice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupChannelStatusSubReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupChannelStatusSubRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupChannelStatusPubReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupChannelStatusPubRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupChannelStatusChangedNotice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImGroupNeSyncEventReq_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "sys-x-msg-im-group.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 20);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\030sys-x-msg-im-group.proto\"E\n\032XmsgImGrou"
      "pObjInfoQueryReq\022\014\n\004ucgt\030\001 \001(\t\022\014\n\004gcgt\030\002"
      " \001(\t\022\013\n\003oid\030\003 \001(\t\"7\n\032XmsgImGroupObjInfoQ"
      "ueryRsp\022\014\n\004ucgt\030\001 \001(\t\022\013\n\003gts\030\002 \001(\004\"z\n\023Xm"
      "sgImHlrUsrInitReq\022\013\n\003cgt\030\001 \001(\t\022*\n\003ext\030\002 "
      "\003(\0132\035.XmsgImHlrUsrInitReq.ExtEntry\032*\n\010Ex"
      "tEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"m"
      "\n\023XmsgImHlrUsrInitRsp\022*\n\003ext\030\001 \003(\0132\035.Xms"
      "gImHlrUsrInitRsp.ExtEntry\032*\n\010ExtEntry\022\013\n"
      "\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"#\n\023XmsgApC"
      "lientKickReq\022\014\n\004ccid\030\001 \001(\t\"m\n\023XmsgApClie"
      "ntKickRsp\022*\n\003ext\030\001 \003(\0132\035.XmsgApClientKic"
      "kRsp.ExtEntry\032*\n\010ExtEntry\022\013\n\003key\030\001 \001(\t\022\r"
      "\n\005value\030\002 \001(\t:\0028\001\"]\n\026XmsgApClientLostNot"
      "ice\022\r\n\005apCgt\030\001 \001(\t\022\013\n\003cgt\030\002 \001(\t\022\014\n\004plat\030"
      "\003 \001(\t\022\013\n\003did\030\004 \001(\t\022\014\n\004ccid\030\005 \001(\t\"]\n\026Xmsg"
      "ApClientEstbNotice\022\r\n\005apCgt\030\001 \001(\t\022\013\n\003cgt"
      "\030\002 \001(\t\022\014\n\004plat\030\003 \001(\t\022\013\n\003did\030\004 \001(\t\022\014\n\004cci"
      "d\030\005 \001(\t\"\203\001\n\036XmsgImGroupChannelStatusSubR"
      "eq\0225\n\003ext\030\001 \003(\0132(.XmsgImGroupChannelStat"
      "usSubReq.ExtEntry\032*\n\010ExtEntry\022\013\n\003key\030\001 \001"
      "(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\203\001\n\036XmsgImGroupCha"
      "nnelStatusSubRsp\0225\n\003ext\030\001 \003(\0132(.XmsgImGr"
      "oupChannelStatusSubRsp.ExtEntry\032*\n\010ExtEn"
      "try\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"f\n\036X"
      "msgImGroupChannelStatusPubReq\0226\n\006notice\030"
      "\001 \003(\0132&.XmsgImGroupChannelStatusChangedN"
      "otice\022\014\n\004more\030\002 \001(\010\"\203\001\n\036XmsgImGroupChann"
      "elStatusPubRsp\0225\n\003ext\030\001 \003(\0132(.XmsgImGrou"
      "pChannelStatusPubRsp.ExtEntry\032*\n\010ExtEntr"
      "y\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"D\n%Xms"
      "gImGroupChannelStatusChangedNotice\022\013\n\003cg"
      "t\030\001 \001(\t\022\016\n\006status\030\004 \001(\t\"O\n\031XmsgImGroupNe"
      "SyncEventReq\022\013\n\003cid\030\001 \001(\004\022\013\n\003ver\030\002 \001(\004\022\013"
      "\n\003msg\030\003 \001(\t\022\013\n\003dat\030\004 \001(\014B\034\n\010x.msg.pbB\020Xm"
      "sgImGroupSysPbb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1422);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "sys-x-msg-im-group.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto

// ===================================================================

void XmsgImGroupObjInfoQueryReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImGroupObjInfoQueryReq::kUcgtFieldNumber;
const int XmsgImGroupObjInfoQueryReq::kGcgtFieldNumber;
const int XmsgImGroupObjInfoQueryReq::kOidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImGroupObjInfoQueryReq::XmsgImGroupObjInfoQueryReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::InitDefaultsXmsgImGroupObjInfoQueryReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImGroupObjInfoQueryReq)
}
XmsgImGroupObjInfoQueryReq::XmsgImGroupObjInfoQueryReq(const XmsgImGroupObjInfoQueryReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ucgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ucgt().size() > 0) {
    ucgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ucgt_);
  }
  gcgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.gcgt().size() > 0) {
    gcgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gcgt_);
  }
  oid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.oid().size() > 0) {
    oid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oid_);
  }
  // @@protoc_insertion_point(copy_constructor:XmsgImGroupObjInfoQueryReq)
}

void XmsgImGroupObjInfoQueryReq::SharedCtor() {
  ucgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gcgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  oid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

XmsgImGroupObjInfoQueryReq::~XmsgImGroupObjInfoQueryReq() {
  // @@protoc_insertion_point(destructor:XmsgImGroupObjInfoQueryReq)
  SharedDtor();
}

void XmsgImGroupObjInfoQueryReq::SharedDtor() {
  ucgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gcgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  oid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgImGroupObjInfoQueryReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImGroupObjInfoQueryReq::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImGroupObjInfoQueryReq& XmsgImGroupObjInfoQueryReq::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::InitDefaultsXmsgImGroupObjInfoQueryReq();
  return *internal_default_instance();
}

XmsgImGroupObjInfoQueryReq* XmsgImGroupObjInfoQueryReq::New(::google::protobuf::Arena* arena) const {
  XmsgImGroupObjInfoQueryReq* n = new XmsgImGroupObjInfoQueryReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImGroupObjInfoQueryReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImGroupObjInfoQueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ucgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gcgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  oid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool XmsgImGroupObjInfoQueryReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImGroupObjInfoQueryReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ucgt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ucgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ucgt().data(), static_cast<int>(this->ucgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupObjInfoQueryReq.ucgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string gcgt = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gcgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gcgt().data(), static_cast<int>(this->gcgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupObjInfoQueryReq.gcgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string oid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->oid().data(), static_cast<int>(this->oid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupObjInfoQueryReq.oid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImGroupObjInfoQueryReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImGroupObjInfoQueryReq)
  return false;
#undef DO_
}

void XmsgImGroupObjInfoQueryReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImGroupObjInfoQueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ucgt = 1;
  if (this->ucgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ucgt().data(), static_cast<int>(this->ucgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupObjInfoQueryReq.ucgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ucgt(), output);
  }

  // string gcgt = 2;
  if (this->gcgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gcgt().data(), static_cast<int>(this->gcgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupObjInfoQueryReq.gcgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->gcgt(), output);
  }

  // string oid = 3;
  if (this->oid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oid().data(), static_cast<int>(this->oid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupObjInfoQueryReq.oid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->oid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImGroupObjInfoQueryReq)
}

::google::protobuf::uint8* XmsgImGroupObjInfoQueryReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImGroupObjInfoQueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ucgt = 1;
  if (this->ucgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ucgt().data(), static_cast<int>(this->ucgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupObjInfoQueryReq.ucgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ucgt(), target);
  }

  // string gcgt = 2;
  if (this->gcgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gcgt().data(), static_cast<int>(this->gcgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupObjInfoQueryReq.gcgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->gcgt(), target);
  }

  // string oid = 3;
  if (this->oid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oid().data(), static_cast<int>(this->oid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupObjInfoQueryReq.oid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->oid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImGroupObjInfoQueryReq)
  return target;
}

size_t XmsgImGroupObjInfoQueryReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImGroupObjInfoQueryReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ucgt = 1;
  if (this->ucgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ucgt());
  }

  // string gcgt = 2;
  if (this->gcgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gcgt());
  }

  // string oid = 3;
  if (this->oid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->oid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImGroupObjInfoQueryReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImGroupObjInfoQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImGroupObjInfoQueryReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImGroupObjInfoQueryReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImGroupObjInfoQueryReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImGroupObjInfoQueryReq)
    MergeFrom(*source);
  }
}

void XmsgImGroupObjInfoQueryReq::MergeFrom(const XmsgImGroupObjInfoQueryReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImGroupObjInfoQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ucgt().size() > 0) {

    ucgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ucgt_);
  }
  if (from.gcgt().size() > 0) {

    gcgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gcgt_);
  }
  if (from.oid().size() > 0) {

    oid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oid_);
  }
}

void XmsgImGroupObjInfoQueryReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImGroupObjInfoQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImGroupObjInfoQueryReq::CopyFrom(const XmsgImGroupObjInfoQueryReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImGroupObjInfoQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImGroupObjInfoQueryReq::IsInitialized() const {
  return true;
}

void XmsgImGroupObjInfoQueryReq::Swap(XmsgImGroupObjInfoQueryReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImGroupObjInfoQueryReq::InternalSwap(XmsgImGroupObjInfoQueryReq* other) {
  using std::swap;
  ucgt_.Swap(&other->ucgt_);
  gcgt_.Swap(&other->gcgt_);
  oid_.Swap(&other->oid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImGroupObjInfoQueryReq::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImGroupObjInfoQueryRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImGroupObjInfoQueryRsp::kUcgtFieldNumber;
const int XmsgImGroupObjInfoQueryRsp::kGtsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImGroupObjInfoQueryRsp::XmsgImGroupObjInfoQueryRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::InitDefaultsXmsgImGroupObjInfoQueryRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImGroupObjInfoQueryRsp)
}
XmsgImGroupObjInfoQueryRsp::XmsgImGroupObjInfoQueryRsp(const XmsgImGroupObjInfoQueryRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ucgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ucgt().size() > 0) {
    ucgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ucgt_);
  }
  gts_ = from.gts_;
  // @@protoc_insertion_point(copy_constructor:XmsgImGroupObjInfoQueryRsp)
}

void XmsgImGroupObjInfoQueryRsp::SharedCtor() {
  ucgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gts_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

XmsgImGroupObjInfoQueryRsp::~XmsgImGroupObjInfoQueryRsp() {
  // @@protoc_insertion_point(destructor:XmsgImGroupObjInfoQueryRsp)
  SharedDtor();
}

void XmsgImGroupObjInfoQueryRsp::SharedDtor() {
  ucgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgImGroupObjInfoQueryRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImGroupObjInfoQueryRsp::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImGroupObjInfoQueryRsp& XmsgImGroupObjInfoQueryRsp::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::InitDefaultsXmsgImGroupObjInfoQueryRsp();
  return *internal_default_instance();
}

XmsgImGroupObjInfoQueryRsp* XmsgImGroupObjInfoQueryRsp::New(::google::protobuf::Arena* arena) const {
  XmsgImGroupObjInfoQueryRsp* n = new XmsgImGroupObjInfoQueryRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImGroupObjInfoQueryRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImGroupObjInfoQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ucgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gts_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool XmsgImGroupObjInfoQueryRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImGroupObjInfoQueryRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ucgt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ucgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ucgt().data(), static_cast<int>(this->ucgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupObjInfoQueryRsp.ucgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 gts = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImGroupObjInfoQueryRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImGroupObjInfoQueryRsp)
  return false;
#undef DO_
}

void XmsgImGroupObjInfoQueryRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImGroupObjInfoQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ucgt = 1;
  if (this->ucgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ucgt().data(), static_cast<int>(this->ucgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupObjInfoQueryRsp.ucgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ucgt(), output);
  }

  // uint64 gts = 2;
  if (this->gts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->gts(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImGroupObjInfoQueryRsp)
}

::google::protobuf::uint8* XmsgImGroupObjInfoQueryRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImGroupObjInfoQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ucgt = 1;
  if (this->ucgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ucgt().data(), static_cast<int>(this->ucgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupObjInfoQueryRsp.ucgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ucgt(), target);
  }

  // uint64 gts = 2;
  if (this->gts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->gts(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImGroupObjInfoQueryRsp)
  return target;
}

size_t XmsgImGroupObjInfoQueryRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImGroupObjInfoQueryRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ucgt = 1;
  if (this->ucgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ucgt());
  }

  // uint64 gts = 2;
  if (this->gts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gts());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImGroupObjInfoQueryRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImGroupObjInfoQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImGroupObjInfoQueryRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImGroupObjInfoQueryRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImGroupObjInfoQueryRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImGroupObjInfoQueryRsp)
    MergeFrom(*source);
  }
}

void XmsgImGroupObjInfoQueryRsp::MergeFrom(const XmsgImGroupObjInfoQueryRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImGroupObjInfoQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ucgt().size() > 0) {

    ucgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ucgt_);
  }
  if (from.gts() != 0) {
    set_gts(from.gts());
  }
}

void XmsgImGroupObjInfoQueryRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImGroupObjInfoQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImGroupObjInfoQueryRsp::CopyFrom(const XmsgImGroupObjInfoQueryRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImGroupObjInfoQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImGroupObjInfoQueryRsp::IsInitialized() const {
  return true;
}

void XmsgImGroupObjInfoQueryRsp::Swap(XmsgImGroupObjInfoQueryRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImGroupObjInfoQueryRsp::InternalSwap(XmsgImGroupObjInfoQueryRsp* other) {
  using std::swap;
  ucgt_.Swap(&other->ucgt_);
  swap(gts_, other->gts_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImGroupObjInfoQueryRsp::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgImHlrUsrInitReq_ExtEntry_DoNotUse::XmsgImHlrUsrInitReq_ExtEntry_DoNotUse() {}
XmsgImHlrUsrInitReq_ExtEntry_DoNotUse::XmsgImHlrUsrInitReq_ExtEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImHlrUsrInitReq_ExtEntry_DoNotUse::MergeFrom(const XmsgImHlrUsrInitReq_ExtEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImHlrUsrInitReq_ExtEntry_DoNotUse::GetMetadata() const {
  ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::file_level_metadata[2];
}
void XmsgImHlrUsrInitReq_ExtEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImHlrUsrInitReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImHlrUsrInitReq::kCgtFieldNumber;
const int XmsgImHlrUsrInitReq::kExtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImHlrUsrInitReq::XmsgImHlrUsrInitReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::InitDefaultsXmsgImHlrUsrInitReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImHlrUsrInitReq)
}
XmsgImHlrUsrInitReq::XmsgImHlrUsrInitReq(const XmsgImHlrUsrInitReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ext_.MergeFrom(from.ext_);
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cgt().size() > 0) {
    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  // @@protoc_insertion_point(copy_constructor:XmsgImHlrUsrInitReq)
}

void XmsgImHlrUsrInitReq::SharedCtor() {
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

XmsgImHlrUsrInitReq::~XmsgImHlrUsrInitReq() {
  // @@protoc_insertion_point(destructor:XmsgImHlrUsrInitReq)
  SharedDtor();
}

void XmsgImHlrUsrInitReq::SharedDtor() {
  cgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgImHlrUsrInitReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImHlrUsrInitReq::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImHlrUsrInitReq& XmsgImHlrUsrInitReq::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::InitDefaultsXmsgImHlrUsrInitReq();
  return *internal_default_instance();
}

XmsgImHlrUsrInitReq* XmsgImHlrUsrInitReq::New(::google::protobuf::Arena* arena) const {
  XmsgImHlrUsrInitReq* n = new XmsgImHlrUsrInitReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImHlrUsrInitReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImHlrUsrInitReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ext_.Clear();
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool XmsgImHlrUsrInitReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImHlrUsrInitReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cgt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cgt().data(), static_cast<int>(this->cgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImHlrUsrInitReq.cgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> ext = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          XmsgImHlrUsrInitReq_ExtEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImHlrUsrInitReq_ExtEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&ext_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImHlrUsrInitReq.ExtEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImHlrUsrInitReq.ExtEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImHlrUsrInitReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImHlrUsrInitReq)
  return false;
#undef DO_
}

void XmsgImHlrUsrInitReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImHlrUsrInitReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImHlrUsrInitReq.cgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cgt(), output);
  }

  // map<string, string> ext = 2;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrUsrInitReq.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrUsrInitReq.ExtEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImHlrUsrInitReq_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImHlrUsrInitReq_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImHlrUsrInitReq)
}

::google::protobuf::uint8* XmsgImHlrUsrInitReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImHlrUsrInitReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImHlrUsrInitReq.cgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cgt(), target);
  }

  // map<string, string> ext = 2;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrUsrInitReq.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrUsrInitReq.ExtEntry.value");
      }
    };

    if (deterministic &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImHlrUsrInitReq_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImHlrUsrInitReq_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImHlrUsrInitReq)
  return target;
}

size_t XmsgImHlrUsrInitReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImHlrUsrInitReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> ext = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ext_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImHlrUsrInitReq_ExtEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->ext().begin();
        it != this->ext().end(); ++it) {
      entry.reset(ext_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cgt());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImHlrUsrInitReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImHlrUsrInitReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImHlrUsrInitReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImHlrUsrInitReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImHlrUsrInitReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImHlrUsrInitReq)
    MergeFrom(*source);
  }
}

void XmsgImHlrUsrInitReq::MergeFrom(const XmsgImHlrUsrInitReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImHlrUsrInitReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ext_.MergeFrom(from.ext_);
  if (from.cgt().size() > 0) {

    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
}

void XmsgImHlrUsrInitReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImHlrUsrInitReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImHlrUsrInitReq::CopyFrom(const XmsgImHlrUsrInitReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImHlrUsrInitReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImHlrUsrInitReq::IsInitialized() const {
  return true;
}

void XmsgImHlrUsrInitReq::Swap(XmsgImHlrUsrInitReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImHlrUsrInitReq::InternalSwap(XmsgImHlrUsrInitReq* other) {
  using std::swap;
  ext_.Swap(&other->ext_);
  cgt_.Swap(&other->cgt_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImHlrUsrInitReq::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse::XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse() {}
XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse::XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse::MergeFrom(const XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse::GetMetadata() const {
  ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::file_level_metadata[4];
}
void XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImHlrUsrInitRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImHlrUsrInitRsp::kExtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImHlrUsrInitRsp::XmsgImHlrUsrInitRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::InitDefaultsXmsgImHlrUsrInitRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImHlrUsrInitRsp)
}
XmsgImHlrUsrInitRsp::XmsgImHlrUsrInitRsp(const XmsgImHlrUsrInitRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ext_.MergeFrom(from.ext_);
  // @@protoc_insertion_point(copy_constructor:XmsgImHlrUsrInitRsp)
}

void XmsgImHlrUsrInitRsp::SharedCtor() {
  _cached_size_ = 0;
}

XmsgImHlrUsrInitRsp::~XmsgImHlrUsrInitRsp() {
  // @@protoc_insertion_point(destructor:XmsgImHlrUsrInitRsp)
  SharedDtor();
}

void XmsgImHlrUsrInitRsp::SharedDtor() {
}

void XmsgImHlrUsrInitRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImHlrUsrInitRsp::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImHlrUsrInitRsp& XmsgImHlrUsrInitRsp::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::InitDefaultsXmsgImHlrUsrInitRsp();
  return *internal_default_instance();
}

XmsgImHlrUsrInitRsp* XmsgImHlrUsrInitRsp::New(::google::protobuf::Arena* arena) const {
  XmsgImHlrUsrInitRsp* n = new XmsgImHlrUsrInitRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImHlrUsrInitRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImHlrUsrInitRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ext_.Clear();
  _internal_metadata_.Clear();
}

bool XmsgImHlrUsrInitRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImHlrUsrInitRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, string> ext = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&ext_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImHlrUsrInitRsp.ExtEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImHlrUsrInitRsp.ExtEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImHlrUsrInitRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImHlrUsrInitRsp)
  return false;
#undef DO_
}

void XmsgImHlrUsrInitRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImHlrUsrInitRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ext = 1;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrUsrInitRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrUsrInitRsp.ExtEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImHlrUsrInitRsp)
}

::google::protobuf::uint8* XmsgImHlrUsrInitRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImHlrUsrInitRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ext = 1;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrUsrInitRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImHlrUsrInitRsp.ExtEntry.value");
      }
    };

    if (deterministic &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImHlrUsrInitRsp)
  return target;
}

size_t XmsgImHlrUsrInitRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImHlrUsrInitRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> ext = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ext_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImHlrUsrInitRsp_ExtEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->ext().begin();
        it != this->ext().end(); ++it) {
      entry.reset(ext_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImHlrUsrInitRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImHlrUsrInitRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImHlrUsrInitRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImHlrUsrInitRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImHlrUsrInitRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImHlrUsrInitRsp)
    MergeFrom(*source);
  }
}

void XmsgImHlrUsrInitRsp::MergeFrom(const XmsgImHlrUsrInitRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImHlrUsrInitRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ext_.MergeFrom(from.ext_);
}

void XmsgImHlrUsrInitRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImHlrUsrInitRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImHlrUsrInitRsp::CopyFrom(const XmsgImHlrUsrInitRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImHlrUsrInitRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImHlrUsrInitRsp::IsInitialized() const {
  return true;
}

void XmsgImHlrUsrInitRsp::Swap(XmsgImHlrUsrInitRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImHlrUsrInitRsp::InternalSwap(XmsgImHlrUsrInitRsp* other) {
  using std::swap;
  ext_.Swap(&other->ext_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImHlrUsrInitRsp::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgApClientKickReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgApClientKickReq::kCcidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgApClientKickReq::XmsgApClientKickReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::InitDefaultsXmsgApClientKickReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgApClientKickReq)
}
XmsgApClientKickReq::XmsgApClientKickReq(const XmsgApClientKickReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ccid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ccid().size() > 0) {
    ccid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ccid_);
  }
  // @@protoc_insertion_point(copy_constructor:XmsgApClientKickReq)
}

void XmsgApClientKickReq::SharedCtor() {
  ccid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

XmsgApClientKickReq::~XmsgApClientKickReq() {
  // @@protoc_insertion_point(destructor:XmsgApClientKickReq)
  SharedDtor();
}

void XmsgApClientKickReq::SharedDtor() {
  ccid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgApClientKickReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgApClientKickReq::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgApClientKickReq& XmsgApClientKickReq::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::InitDefaultsXmsgApClientKickReq();
  return *internal_default_instance();
}

XmsgApClientKickReq* XmsgApClientKickReq::New(::google::protobuf::Arena* arena) const {
  XmsgApClientKickReq* n = new XmsgApClientKickReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgApClientKickReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgApClientKickReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ccid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool XmsgApClientKickReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgApClientKickReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ccid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ccid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ccid().data(), static_cast<int>(this->ccid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgApClientKickReq.ccid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgApClientKickReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgApClientKickReq)
  return false;
#undef DO_
}

void XmsgApClientKickReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgApClientKickReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ccid = 1;
  if (this->ccid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ccid().data(), static_cast<int>(this->ccid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientKickReq.ccid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ccid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgApClientKickReq)
}

::google::protobuf::uint8* XmsgApClientKickReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgApClientKickReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ccid = 1;
  if (this->ccid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ccid().data(), static_cast<int>(this->ccid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientKickReq.ccid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ccid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgApClientKickReq)
  return target;
}

size_t XmsgApClientKickReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgApClientKickReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ccid = 1;
  if (this->ccid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ccid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgApClientKickReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgApClientKickReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgApClientKickReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgApClientKickReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgApClientKickReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgApClientKickReq)
    MergeFrom(*source);
  }
}

void XmsgApClientKickReq::MergeFrom(const XmsgApClientKickReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgApClientKickReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ccid().size() > 0) {

    ccid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ccid_);
  }
}

void XmsgApClientKickReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgApClientKickReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgApClientKickReq::CopyFrom(const XmsgApClientKickReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgApClientKickReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgApClientKickReq::IsInitialized() const {
  return true;
}

void XmsgApClientKickReq::Swap(XmsgApClientKickReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgApClientKickReq::InternalSwap(XmsgApClientKickReq* other) {
  using std::swap;
  ccid_.Swap(&other->ccid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgApClientKickReq::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgApClientKickRsp_ExtEntry_DoNotUse::XmsgApClientKickRsp_ExtEntry_DoNotUse() {}
XmsgApClientKickRsp_ExtEntry_DoNotUse::XmsgApClientKickRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgApClientKickRsp_ExtEntry_DoNotUse::MergeFrom(const XmsgApClientKickRsp_ExtEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgApClientKickRsp_ExtEntry_DoNotUse::GetMetadata() const {
  ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::file_level_metadata[7];
}
void XmsgApClientKickRsp_ExtEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgApClientKickRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgApClientKickRsp::kExtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgApClientKickRsp::XmsgApClientKickRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::InitDefaultsXmsgApClientKickRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgApClientKickRsp)
}
XmsgApClientKickRsp::XmsgApClientKickRsp(const XmsgApClientKickRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ext_.MergeFrom(from.ext_);
  // @@protoc_insertion_point(copy_constructor:XmsgApClientKickRsp)
}

void XmsgApClientKickRsp::SharedCtor() {
  _cached_size_ = 0;
}

XmsgApClientKickRsp::~XmsgApClientKickRsp() {
  // @@protoc_insertion_point(destructor:XmsgApClientKickRsp)
  SharedDtor();
}

void XmsgApClientKickRsp::SharedDtor() {
}

void XmsgApClientKickRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgApClientKickRsp::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgApClientKickRsp& XmsgApClientKickRsp::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::InitDefaultsXmsgApClientKickRsp();
  return *internal_default_instance();
}

XmsgApClientKickRsp* XmsgApClientKickRsp::New(::google::protobuf::Arena* arena) const {
  XmsgApClientKickRsp* n = new XmsgApClientKickRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgApClientKickRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgApClientKickRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ext_.Clear();
  _internal_metadata_.Clear();
}

bool XmsgApClientKickRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgApClientKickRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, string> ext = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          XmsgApClientKickRsp_ExtEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgApClientKickRsp_ExtEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&ext_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgApClientKickRsp.ExtEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgApClientKickRsp.ExtEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgApClientKickRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgApClientKickRsp)
  return false;
#undef DO_
}

void XmsgApClientKickRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgApClientKickRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ext = 1;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgApClientKickRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgApClientKickRsp.ExtEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgApClientKickRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgApClientKickRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgApClientKickRsp)
}

::google::protobuf::uint8* XmsgApClientKickRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgApClientKickRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ext = 1;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgApClientKickRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgApClientKickRsp.ExtEntry.value");
      }
    };

    if (deterministic &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgApClientKickRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgApClientKickRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgApClientKickRsp)
  return target;
}

size_t XmsgApClientKickRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgApClientKickRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> ext = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ext_size());
  {
    ::google::protobuf::scoped_ptr<XmsgApClientKickRsp_ExtEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->ext().begin();
        it != this->ext().end(); ++it) {
      entry.reset(ext_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgApClientKickRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgApClientKickRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgApClientKickRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgApClientKickRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgApClientKickRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgApClientKickRsp)
    MergeFrom(*source);
  }
}

void XmsgApClientKickRsp::MergeFrom(const XmsgApClientKickRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgApClientKickRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ext_.MergeFrom(from.ext_);
}

void XmsgApClientKickRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgApClientKickRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgApClientKickRsp::CopyFrom(const XmsgApClientKickRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgApClientKickRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgApClientKickRsp::IsInitialized() const {
  return true;
}

void XmsgApClientKickRsp::Swap(XmsgApClientKickRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgApClientKickRsp::InternalSwap(XmsgApClientKickRsp* other) {
  using std::swap;
  ext_.Swap(&other->ext_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgApClientKickRsp::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgApClientLostNotice::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgApClientLostNotice::kApCgtFieldNumber;
const int XmsgApClientLostNotice::kCgtFieldNumber;
const int XmsgApClientLostNotice::kPlatFieldNumber;
const int XmsgApClientLostNotice::kDidFieldNumber;
const int XmsgApClientLostNotice::kCcidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgApClientLostNotice::XmsgApClientLostNotice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::InitDefaultsXmsgApClientLostNotice();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgApClientLostNotice)
}
XmsgApClientLostNotice::XmsgApClientLostNotice(const XmsgApClientLostNotice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  apcgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.apcgt().size() > 0) {
    apcgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apcgt_);
  }
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cgt().size() > 0) {
    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  plat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.plat().size() > 0) {
    plat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plat_);
  }
  did_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.did().size() > 0) {
    did_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.did_);
  }
  ccid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ccid().size() > 0) {
    ccid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ccid_);
  }
  // @@protoc_insertion_point(copy_constructor:XmsgApClientLostNotice)
}

void XmsgApClientLostNotice::SharedCtor() {
  apcgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  did_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ccid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

XmsgApClientLostNotice::~XmsgApClientLostNotice() {
  // @@protoc_insertion_point(destructor:XmsgApClientLostNotice)
  SharedDtor();
}

void XmsgApClientLostNotice::SharedDtor() {
  apcgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plat_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  did_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ccid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgApClientLostNotice::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgApClientLostNotice::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgApClientLostNotice& XmsgApClientLostNotice::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::InitDefaultsXmsgApClientLostNotice();
  return *internal_default_instance();
}

XmsgApClientLostNotice* XmsgApClientLostNotice::New(::google::protobuf::Arena* arena) const {
  XmsgApClientLostNotice* n = new XmsgApClientLostNotice;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgApClientLostNotice::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgApClientLostNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  apcgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  did_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ccid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool XmsgApClientLostNotice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgApClientLostNotice)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string apCgt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_apcgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->apcgt().data(), static_cast<int>(this->apcgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgApClientLostNotice.apCgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cgt = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cgt().data(), static_cast<int>(this->cgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgApClientLostNotice.cgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string plat = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_plat()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->plat().data(), static_cast<int>(this->plat().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgApClientLostNotice.plat"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string did = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_did()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->did().data(), static_cast<int>(this->did().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgApClientLostNotice.did"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ccid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ccid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ccid().data(), static_cast<int>(this->ccid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgApClientLostNotice.ccid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgApClientLostNotice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgApClientLostNotice)
  return false;
#undef DO_
}

void XmsgApClientLostNotice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgApClientLostNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string apCgt = 1;
  if (this->apcgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->apcgt().data(), static_cast<int>(this->apcgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientLostNotice.apCgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->apcgt(), output);
  }

  // string cgt = 2;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientLostNotice.cgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->cgt(), output);
  }

  // string plat = 3;
  if (this->plat().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->plat().data(), static_cast<int>(this->plat().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientLostNotice.plat");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->plat(), output);
  }

  // string did = 4;
  if (this->did().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->did().data(), static_cast<int>(this->did().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientLostNotice.did");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->did(), output);
  }

  // string ccid = 5;
  if (this->ccid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ccid().data(), static_cast<int>(this->ccid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientLostNotice.ccid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->ccid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgApClientLostNotice)
}

::google::protobuf::uint8* XmsgApClientLostNotice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgApClientLostNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string apCgt = 1;
  if (this->apcgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->apcgt().data(), static_cast<int>(this->apcgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientLostNotice.apCgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->apcgt(), target);
  }

  // string cgt = 2;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientLostNotice.cgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->cgt(), target);
  }

  // string plat = 3;
  if (this->plat().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->plat().data(), static_cast<int>(this->plat().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientLostNotice.plat");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->plat(), target);
  }

  // string did = 4;
  if (this->did().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->did().data(), static_cast<int>(this->did().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientLostNotice.did");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->did(), target);
  }

  // string ccid = 5;
  if (this->ccid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ccid().data(), static_cast<int>(this->ccid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientLostNotice.ccid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->ccid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgApClientLostNotice)
  return target;
}

size_t XmsgApClientLostNotice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgApClientLostNotice)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string apCgt = 1;
  if (this->apcgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->apcgt());
  }

  // string cgt = 2;
  if (this->cgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cgt());
  }

  // string plat = 3;
  if (this->plat().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->plat());
  }

  // string did = 4;
  if (this->did().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->did());
  }

  // string ccid = 5;
  if (this->ccid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ccid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgApClientLostNotice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgApClientLostNotice)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgApClientLostNotice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgApClientLostNotice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgApClientLostNotice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgApClientLostNotice)
    MergeFrom(*source);
  }
}

void XmsgApClientLostNotice::MergeFrom(const XmsgApClientLostNotice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgApClientLostNotice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.apcgt().size() > 0) {

    apcgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apcgt_);
  }
  if (from.cgt().size() > 0) {

    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  if (from.plat().size() > 0) {

    plat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plat_);
  }
  if (from.did().size() > 0) {

    did_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.did_);
  }
  if (from.ccid().size() > 0) {

    ccid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ccid_);
  }
}

void XmsgApClientLostNotice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgApClientLostNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgApClientLostNotice::CopyFrom(const XmsgApClientLostNotice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgApClientLostNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgApClientLostNotice::IsInitialized() const {
  return true;
}

void XmsgApClientLostNotice::Swap(XmsgApClientLostNotice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgApClientLostNotice::InternalSwap(XmsgApClientLostNotice* other) {
  using std::swap;
  apcgt_.Swap(&other->apcgt_);
  cgt_.Swap(&other->cgt_);
  plat_.Swap(&other->plat_);
  did_.Swap(&other->did_);
  ccid_.Swap(&other->ccid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgApClientLostNotice::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgApClientEstbNotice::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgApClientEstbNotice::kApCgtFieldNumber;
const int XmsgApClientEstbNotice::kCgtFieldNumber;
const int XmsgApClientEstbNotice::kPlatFieldNumber;
const int XmsgApClientEstbNotice::kDidFieldNumber;
const int XmsgApClientEstbNotice::kCcidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgApClientEstbNotice::XmsgApClientEstbNotice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::InitDefaultsXmsgApClientEstbNotice();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgApClientEstbNotice)
}
XmsgApClientEstbNotice::XmsgApClientEstbNotice(const XmsgApClientEstbNotice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  apcgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.apcgt().size() > 0) {
    apcgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apcgt_);
  }
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cgt().size() > 0) {
    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  plat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.plat().size() > 0) {
    plat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plat_);
  }
  did_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.did().size() > 0) {
    did_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.did_);
  }
  ccid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ccid().size() > 0) {
    ccid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ccid_);
  }
  // @@protoc_insertion_point(copy_constructor:XmsgApClientEstbNotice)
}

void XmsgApClientEstbNotice::SharedCtor() {
  apcgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  did_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ccid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

XmsgApClientEstbNotice::~XmsgApClientEstbNotice() {
  // @@protoc_insertion_point(destructor:XmsgApClientEstbNotice)
  SharedDtor();
}

void XmsgApClientEstbNotice::SharedDtor() {
  apcgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plat_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  did_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ccid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgApClientEstbNotice::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgApClientEstbNotice::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgApClientEstbNotice& XmsgApClientEstbNotice::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::InitDefaultsXmsgApClientEstbNotice();
  return *internal_default_instance();
}

XmsgApClientEstbNotice* XmsgApClientEstbNotice::New(::google::protobuf::Arena* arena) const {
  XmsgApClientEstbNotice* n = new XmsgApClientEstbNotice;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgApClientEstbNotice::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgApClientEstbNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  apcgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  did_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ccid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool XmsgApClientEstbNotice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgApClientEstbNotice)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string apCgt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_apcgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->apcgt().data(), static_cast<int>(this->apcgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgApClientEstbNotice.apCgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cgt = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cgt().data(), static_cast<int>(this->cgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgApClientEstbNotice.cgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string plat = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_plat()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->plat().data(), static_cast<int>(this->plat().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgApClientEstbNotice.plat"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string did = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_did()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->did().data(), static_cast<int>(this->did().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgApClientEstbNotice.did"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ccid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ccid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ccid().data(), static_cast<int>(this->ccid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgApClientEstbNotice.ccid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgApClientEstbNotice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgApClientEstbNotice)
  return false;
#undef DO_
}

void XmsgApClientEstbNotice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgApClientEstbNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string apCgt = 1;
  if (this->apcgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->apcgt().data(), static_cast<int>(this->apcgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientEstbNotice.apCgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->apcgt(), output);
  }

  // string cgt = 2;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientEstbNotice.cgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->cgt(), output);
  }

  // string plat = 3;
  if (this->plat().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->plat().data(), static_cast<int>(this->plat().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientEstbNotice.plat");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->plat(), output);
  }

  // string did = 4;
  if (this->did().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->did().data(), static_cast<int>(this->did().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientEstbNotice.did");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->did(), output);
  }

  // string ccid = 5;
  if (this->ccid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ccid().data(), static_cast<int>(this->ccid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientEstbNotice.ccid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->ccid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgApClientEstbNotice)
}

::google::protobuf::uint8* XmsgApClientEstbNotice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgApClientEstbNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string apCgt = 1;
  if (this->apcgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->apcgt().data(), static_cast<int>(this->apcgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientEstbNotice.apCgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->apcgt(), target);
  }

  // string cgt = 2;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientEstbNotice.cgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->cgt(), target);
  }

  // string plat = 3;
  if (this->plat().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->plat().data(), static_cast<int>(this->plat().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientEstbNotice.plat");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->plat(), target);
  }

  // string did = 4;
  if (this->did().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->did().data(), static_cast<int>(this->did().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientEstbNotice.did");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->did(), target);
  }

  // string ccid = 5;
  if (this->ccid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ccid().data(), static_cast<int>(this->ccid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientEstbNotice.ccid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->ccid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgApClientEstbNotice)
  return target;
}

size_t XmsgApClientEstbNotice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgApClientEstbNotice)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string apCgt = 1;
  if (this->apcgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->apcgt());
  }

  // string cgt = 2;
  if (this->cgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cgt());
  }

  // string plat = 3;
  if (this->plat().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->plat());
  }

  // string did = 4;
  if (this->did().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->did());
  }

  // string ccid = 5;
  if (this->ccid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ccid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgApClientEstbNotice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgApClientEstbNotice)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgApClientEstbNotice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgApClientEstbNotice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgApClientEstbNotice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgApClientEstbNotice)
    MergeFrom(*source);
  }
}

void XmsgApClientEstbNotice::MergeFrom(const XmsgApClientEstbNotice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgApClientEstbNotice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.apcgt().size() > 0) {

    apcgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apcgt_);
  }
  if (from.cgt().size() > 0) {

    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  if (from.plat().size() > 0) {

    plat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plat_);
  }
  if (from.did().size() > 0) {

    did_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.did_);
  }
  if (from.ccid().size() > 0) {

    ccid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ccid_);
  }
}

void XmsgApClientEstbNotice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgApClientEstbNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgApClientEstbNotice::CopyFrom(const XmsgApClientEstbNotice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgApClientEstbNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgApClientEstbNotice::IsInitialized() const {
  return true;
}

void XmsgApClientEstbNotice::Swap(XmsgApClientEstbNotice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgApClientEstbNotice::InternalSwap(XmsgApClientEstbNotice* other) {
  using std::swap;
  apcgt_.Swap(&other->apcgt_);
  cgt_.Swap(&other->cgt_);
  plat_.Swap(&other->plat_);
  did_.Swap(&other->did_);
  ccid_.Swap(&other->ccid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgApClientEstbNotice::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse::XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse() {}
XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse::XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse::MergeFrom(const XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse::GetMetadata() const {
  ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::file_level_metadata[11];
}
void XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImGroupChannelStatusSubReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImGroupChannelStatusSubReq::kExtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImGroupChannelStatusSubReq::XmsgImGroupChannelStatusSubReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::InitDefaultsXmsgImGroupChannelStatusSubReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImGroupChannelStatusSubReq)
}
XmsgImGroupChannelStatusSubReq::XmsgImGroupChannelStatusSubReq(const XmsgImGroupChannelStatusSubReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ext_.MergeFrom(from.ext_);
  // @@protoc_insertion_point(copy_constructor:XmsgImGroupChannelStatusSubReq)
}

void XmsgImGroupChannelStatusSubReq::SharedCtor() {
  _cached_size_ = 0;
}

XmsgImGroupChannelStatusSubReq::~XmsgImGroupChannelStatusSubReq() {
  // @@protoc_insertion_point(destructor:XmsgImGroupChannelStatusSubReq)
  SharedDtor();
}

void XmsgImGroupChannelStatusSubReq::SharedDtor() {
}

void XmsgImGroupChannelStatusSubReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImGroupChannelStatusSubReq::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImGroupChannelStatusSubReq& XmsgImGroupChannelStatusSubReq::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::InitDefaultsXmsgImGroupChannelStatusSubReq();
  return *internal_default_instance();
}

XmsgImGroupChannelStatusSubReq* XmsgImGroupChannelStatusSubReq::New(::google::protobuf::Arena* arena) const {
  XmsgImGroupChannelStatusSubReq* n = new XmsgImGroupChannelStatusSubReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImGroupChannelStatusSubReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImGroupChannelStatusSubReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ext_.Clear();
  _internal_metadata_.Clear();
}

bool XmsgImGroupChannelStatusSubReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImGroupChannelStatusSubReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, string> ext = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&ext_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupChannelStatusSubReq.ExtEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupChannelStatusSubReq.ExtEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImGroupChannelStatusSubReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImGroupChannelStatusSubReq)
  return false;
#undef DO_
}

void XmsgImGroupChannelStatusSubReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImGroupChannelStatusSubReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ext = 1;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupChannelStatusSubReq.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupChannelStatusSubReq.ExtEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImGroupChannelStatusSubReq)
}

::google::protobuf::uint8* XmsgImGroupChannelStatusSubReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImGroupChannelStatusSubReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ext = 1;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupChannelStatusSubReq.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupChannelStatusSubReq.ExtEntry.value");
      }
    };

    if (deterministic &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImGroupChannelStatusSubReq)
  return target;
}

size_t XmsgImGroupChannelStatusSubReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImGroupChannelStatusSubReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> ext = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ext_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImGroupChannelStatusSubReq_ExtEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->ext().begin();
        it != this->ext().end(); ++it) {
      entry.reset(ext_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImGroupChannelStatusSubReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImGroupChannelStatusSubReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImGroupChannelStatusSubReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImGroupChannelStatusSubReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImGroupChannelStatusSubReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImGroupChannelStatusSubReq)
    MergeFrom(*source);
  }
}

void XmsgImGroupChannelStatusSubReq::MergeFrom(const XmsgImGroupChannelStatusSubReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImGroupChannelStatusSubReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ext_.MergeFrom(from.ext_);
}

void XmsgImGroupChannelStatusSubReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImGroupChannelStatusSubReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImGroupChannelStatusSubReq::CopyFrom(const XmsgImGroupChannelStatusSubReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImGroupChannelStatusSubReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImGroupChannelStatusSubReq::IsInitialized() const {
  return true;
}

void XmsgImGroupChannelStatusSubReq::Swap(XmsgImGroupChannelStatusSubReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImGroupChannelStatusSubReq::InternalSwap(XmsgImGroupChannelStatusSubReq* other) {
  using std::swap;
  ext_.Swap(&other->ext_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImGroupChannelStatusSubReq::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse::XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse() {}
XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse::XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse::MergeFrom(const XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse::GetMetadata() const {
  ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::file_level_metadata[13];
}
void XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImGroupChannelStatusSubRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImGroupChannelStatusSubRsp::kExtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImGroupChannelStatusSubRsp::XmsgImGroupChannelStatusSubRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::InitDefaultsXmsgImGroupChannelStatusSubRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImGroupChannelStatusSubRsp)
}
XmsgImGroupChannelStatusSubRsp::XmsgImGroupChannelStatusSubRsp(const XmsgImGroupChannelStatusSubRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ext_.MergeFrom(from.ext_);
  // @@protoc_insertion_point(copy_constructor:XmsgImGroupChannelStatusSubRsp)
}

void XmsgImGroupChannelStatusSubRsp::SharedCtor() {
  _cached_size_ = 0;
}

XmsgImGroupChannelStatusSubRsp::~XmsgImGroupChannelStatusSubRsp() {
  // @@protoc_insertion_point(destructor:XmsgImGroupChannelStatusSubRsp)
  SharedDtor();
}

void XmsgImGroupChannelStatusSubRsp::SharedDtor() {
}

void XmsgImGroupChannelStatusSubRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImGroupChannelStatusSubRsp::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImGroupChannelStatusSubRsp& XmsgImGroupChannelStatusSubRsp::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::InitDefaultsXmsgImGroupChannelStatusSubRsp();
  return *internal_default_instance();
}

XmsgImGroupChannelStatusSubRsp* XmsgImGroupChannelStatusSubRsp::New(::google::protobuf::Arena* arena) const {
  XmsgImGroupChannelStatusSubRsp* n = new XmsgImGroupChannelStatusSubRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImGroupChannelStatusSubRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImGroupChannelStatusSubRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ext_.Clear();
  _internal_metadata_.Clear();
}

bool XmsgImGroupChannelStatusSubRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImGroupChannelStatusSubRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, string> ext = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&ext_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupChannelStatusSubRsp.ExtEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupChannelStatusSubRsp.ExtEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImGroupChannelStatusSubRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImGroupChannelStatusSubRsp)
  return false;
#undef DO_
}

void XmsgImGroupChannelStatusSubRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImGroupChannelStatusSubRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ext = 1;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupChannelStatusSubRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupChannelStatusSubRsp.ExtEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImGroupChannelStatusSubRsp)
}

::google::protobuf::uint8* XmsgImGroupChannelStatusSubRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImGroupChannelStatusSubRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ext = 1;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupChannelStatusSubRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupChannelStatusSubRsp.ExtEntry.value");
      }
    };

    if (deterministic &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImGroupChannelStatusSubRsp)
  return target;
}

size_t XmsgImGroupChannelStatusSubRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImGroupChannelStatusSubRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> ext = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ext_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImGroupChannelStatusSubRsp_ExtEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->ext().begin();
        it != this->ext().end(); ++it) {
      entry.reset(ext_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImGroupChannelStatusSubRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImGroupChannelStatusSubRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImGroupChannelStatusSubRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImGroupChannelStatusSubRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImGroupChannelStatusSubRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImGroupChannelStatusSubRsp)
    MergeFrom(*source);
  }
}

void XmsgImGroupChannelStatusSubRsp::MergeFrom(const XmsgImGroupChannelStatusSubRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImGroupChannelStatusSubRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ext_.MergeFrom(from.ext_);
}

void XmsgImGroupChannelStatusSubRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImGroupChannelStatusSubRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImGroupChannelStatusSubRsp::CopyFrom(const XmsgImGroupChannelStatusSubRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImGroupChannelStatusSubRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImGroupChannelStatusSubRsp::IsInitialized() const {
  return true;
}

void XmsgImGroupChannelStatusSubRsp::Swap(XmsgImGroupChannelStatusSubRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImGroupChannelStatusSubRsp::InternalSwap(XmsgImGroupChannelStatusSubRsp* other) {
  using std::swap;
  ext_.Swap(&other->ext_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImGroupChannelStatusSubRsp::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImGroupChannelStatusPubReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImGroupChannelStatusPubReq::kNoticeFieldNumber;
const int XmsgImGroupChannelStatusPubReq::kMoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImGroupChannelStatusPubReq::XmsgImGroupChannelStatusPubReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::InitDefaultsXmsgImGroupChannelStatusPubReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImGroupChannelStatusPubReq)
}
XmsgImGroupChannelStatusPubReq::XmsgImGroupChannelStatusPubReq(const XmsgImGroupChannelStatusPubReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      notice_(from.notice_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  more_ = from.more_;
  // @@protoc_insertion_point(copy_constructor:XmsgImGroupChannelStatusPubReq)
}

void XmsgImGroupChannelStatusPubReq::SharedCtor() {
  more_ = false;
  _cached_size_ = 0;
}

XmsgImGroupChannelStatusPubReq::~XmsgImGroupChannelStatusPubReq() {
  // @@protoc_insertion_point(destructor:XmsgImGroupChannelStatusPubReq)
  SharedDtor();
}

void XmsgImGroupChannelStatusPubReq::SharedDtor() {
}

void XmsgImGroupChannelStatusPubReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImGroupChannelStatusPubReq::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImGroupChannelStatusPubReq& XmsgImGroupChannelStatusPubReq::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::InitDefaultsXmsgImGroupChannelStatusPubReq();
  return *internal_default_instance();
}

XmsgImGroupChannelStatusPubReq* XmsgImGroupChannelStatusPubReq::New(::google::protobuf::Arena* arena) const {
  XmsgImGroupChannelStatusPubReq* n = new XmsgImGroupChannelStatusPubReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImGroupChannelStatusPubReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImGroupChannelStatusPubReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  notice_.Clear();
  more_ = false;
  _internal_metadata_.Clear();
}

bool XmsgImGroupChannelStatusPubReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImGroupChannelStatusPubReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .XmsgImGroupChannelStatusChangedNotice notice = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_notice()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool more = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &more_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImGroupChannelStatusPubReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImGroupChannelStatusPubReq)
  return false;
#undef DO_
}

void XmsgImGroupChannelStatusPubReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImGroupChannelStatusPubReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .XmsgImGroupChannelStatusChangedNotice notice = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->notice_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->notice(static_cast<int>(i)), output);
  }

  // bool more = 2;
  if (this->more() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->more(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImGroupChannelStatusPubReq)
}

::google::protobuf::uint8* XmsgImGroupChannelStatusPubReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImGroupChannelStatusPubReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .XmsgImGroupChannelStatusChangedNotice notice = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->notice_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->notice(static_cast<int>(i)), deterministic, target);
  }

  // bool more = 2;
  if (this->more() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->more(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImGroupChannelStatusPubReq)
  return target;
}

size_t XmsgImGroupChannelStatusPubReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImGroupChannelStatusPubReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .XmsgImGroupChannelStatusChangedNotice notice = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->notice_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->notice(static_cast<int>(i)));
    }
  }

  // bool more = 2;
  if (this->more() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImGroupChannelStatusPubReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImGroupChannelStatusPubReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImGroupChannelStatusPubReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImGroupChannelStatusPubReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImGroupChannelStatusPubReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImGroupChannelStatusPubReq)
    MergeFrom(*source);
  }
}

void XmsgImGroupChannelStatusPubReq::MergeFrom(const XmsgImGroupChannelStatusPubReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImGroupChannelStatusPubReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  notice_.MergeFrom(from.notice_);
  if (from.more() != 0) {
    set_more(from.more());
  }
}

void XmsgImGroupChannelStatusPubReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImGroupChannelStatusPubReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImGroupChannelStatusPubReq::CopyFrom(const XmsgImGroupChannelStatusPubReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImGroupChannelStatusPubReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImGroupChannelStatusPubReq::IsInitialized() const {
  return true;
}

void XmsgImGroupChannelStatusPubReq::Swap(XmsgImGroupChannelStatusPubReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImGroupChannelStatusPubReq::InternalSwap(XmsgImGroupChannelStatusPubReq* other) {
  using std::swap;
  notice_.InternalSwap(&other->notice_);
  swap(more_, other->more_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImGroupChannelStatusPubReq::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse::XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse() {}
XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse::XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse::MergeFrom(const XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse::GetMetadata() const {
  ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::file_level_metadata[16];
}
void XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImGroupChannelStatusPubRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImGroupChannelStatusPubRsp::kExtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImGroupChannelStatusPubRsp::XmsgImGroupChannelStatusPubRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::InitDefaultsXmsgImGroupChannelStatusPubRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImGroupChannelStatusPubRsp)
}
XmsgImGroupChannelStatusPubRsp::XmsgImGroupChannelStatusPubRsp(const XmsgImGroupChannelStatusPubRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ext_.MergeFrom(from.ext_);
  // @@protoc_insertion_point(copy_constructor:XmsgImGroupChannelStatusPubRsp)
}

void XmsgImGroupChannelStatusPubRsp::SharedCtor() {
  _cached_size_ = 0;
}

XmsgImGroupChannelStatusPubRsp::~XmsgImGroupChannelStatusPubRsp() {
  // @@protoc_insertion_point(destructor:XmsgImGroupChannelStatusPubRsp)
  SharedDtor();
}

void XmsgImGroupChannelStatusPubRsp::SharedDtor() {
}

void XmsgImGroupChannelStatusPubRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImGroupChannelStatusPubRsp::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImGroupChannelStatusPubRsp& XmsgImGroupChannelStatusPubRsp::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::InitDefaultsXmsgImGroupChannelStatusPubRsp();
  return *internal_default_instance();
}

XmsgImGroupChannelStatusPubRsp* XmsgImGroupChannelStatusPubRsp::New(::google::protobuf::Arena* arena) const {
  XmsgImGroupChannelStatusPubRsp* n = new XmsgImGroupChannelStatusPubRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImGroupChannelStatusPubRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImGroupChannelStatusPubRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ext_.Clear();
  _internal_metadata_.Clear();
}

bool XmsgImGroupChannelStatusPubRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImGroupChannelStatusPubRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, string> ext = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&ext_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupChannelStatusPubRsp.ExtEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupChannelStatusPubRsp.ExtEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImGroupChannelStatusPubRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImGroupChannelStatusPubRsp)
  return false;
#undef DO_
}

void XmsgImGroupChannelStatusPubRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImGroupChannelStatusPubRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ext = 1;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupChannelStatusPubRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupChannelStatusPubRsp.ExtEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImGroupChannelStatusPubRsp)
}

::google::protobuf::uint8* XmsgImGroupChannelStatusPubRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImGroupChannelStatusPubRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ext = 1;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupChannelStatusPubRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImGroupChannelStatusPubRsp.ExtEntry.value");
      }
    };

    if (deterministic &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImGroupChannelStatusPubRsp)
  return target;
}

size_t XmsgImGroupChannelStatusPubRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImGroupChannelStatusPubRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> ext = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ext_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImGroupChannelStatusPubRsp_ExtEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->ext().begin();
        it != this->ext().end(); ++it) {
      entry.reset(ext_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImGroupChannelStatusPubRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImGroupChannelStatusPubRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImGroupChannelStatusPubRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImGroupChannelStatusPubRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImGroupChannelStatusPubRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImGroupChannelStatusPubRsp)
    MergeFrom(*source);
  }
}

void XmsgImGroupChannelStatusPubRsp::MergeFrom(const XmsgImGroupChannelStatusPubRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImGroupChannelStatusPubRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ext_.MergeFrom(from.ext_);
}

void XmsgImGroupChannelStatusPubRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImGroupChannelStatusPubRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImGroupChannelStatusPubRsp::CopyFrom(const XmsgImGroupChannelStatusPubRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImGroupChannelStatusPubRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImGroupChannelStatusPubRsp::IsInitialized() const {
  return true;
}

void XmsgImGroupChannelStatusPubRsp::Swap(XmsgImGroupChannelStatusPubRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImGroupChannelStatusPubRsp::InternalSwap(XmsgImGroupChannelStatusPubRsp* other) {
  using std::swap;
  ext_.Swap(&other->ext_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImGroupChannelStatusPubRsp::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImGroupChannelStatusChangedNotice::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImGroupChannelStatusChangedNotice::kCgtFieldNumber;
const int XmsgImGroupChannelStatusChangedNotice::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImGroupChannelStatusChangedNotice::XmsgImGroupChannelStatusChangedNotice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::InitDefaultsXmsgImGroupChannelStatusChangedNotice();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImGroupChannelStatusChangedNotice)
}
XmsgImGroupChannelStatusChangedNotice::XmsgImGroupChannelStatusChangedNotice(const XmsgImGroupChannelStatusChangedNotice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cgt().size() > 0) {
    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.status().size() > 0) {
    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
  // @@protoc_insertion_point(copy_constructor:XmsgImGroupChannelStatusChangedNotice)
}

void XmsgImGroupChannelStatusChangedNotice::SharedCtor() {
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

XmsgImGroupChannelStatusChangedNotice::~XmsgImGroupChannelStatusChangedNotice() {
  // @@protoc_insertion_point(destructor:XmsgImGroupChannelStatusChangedNotice)
  SharedDtor();
}

void XmsgImGroupChannelStatusChangedNotice::SharedDtor() {
  cgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgImGroupChannelStatusChangedNotice::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImGroupChannelStatusChangedNotice::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImGroupChannelStatusChangedNotice& XmsgImGroupChannelStatusChangedNotice::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::InitDefaultsXmsgImGroupChannelStatusChangedNotice();
  return *internal_default_instance();
}

XmsgImGroupChannelStatusChangedNotice* XmsgImGroupChannelStatusChangedNotice::New(::google::protobuf::Arena* arena) const {
  XmsgImGroupChannelStatusChangedNotice* n = new XmsgImGroupChannelStatusChangedNotice;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImGroupChannelStatusChangedNotice::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImGroupChannelStatusChangedNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool XmsgImGroupChannelStatusChangedNotice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImGroupChannelStatusChangedNotice)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cgt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cgt().data(), static_cast<int>(this->cgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupChannelStatusChangedNotice.cgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string status = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->status().data(), static_cast<int>(this->status().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupChannelStatusChangedNotice.status"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImGroupChannelStatusChangedNotice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImGroupChannelStatusChangedNotice)
  return false;
#undef DO_
}

void XmsgImGroupChannelStatusChangedNotice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImGroupChannelStatusChangedNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupChannelStatusChangedNotice.cgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cgt(), output);
  }

  // string status = 4;
  if (this->status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status().data(), static_cast<int>(this->status().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupChannelStatusChangedNotice.status");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImGroupChannelStatusChangedNotice)
}

::google::protobuf::uint8* XmsgImGroupChannelStatusChangedNotice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImGroupChannelStatusChangedNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupChannelStatusChangedNotice.cgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cgt(), target);
  }

  // string status = 4;
  if (this->status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status().data(), static_cast<int>(this->status().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupChannelStatusChangedNotice.status");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImGroupChannelStatusChangedNotice)
  return target;
}

size_t XmsgImGroupChannelStatusChangedNotice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImGroupChannelStatusChangedNotice)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string cgt = 1;
  if (this->cgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cgt());
  }

  // string status = 4;
  if (this->status().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImGroupChannelStatusChangedNotice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImGroupChannelStatusChangedNotice)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImGroupChannelStatusChangedNotice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImGroupChannelStatusChangedNotice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImGroupChannelStatusChangedNotice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImGroupChannelStatusChangedNotice)
    MergeFrom(*source);
  }
}

void XmsgImGroupChannelStatusChangedNotice::MergeFrom(const XmsgImGroupChannelStatusChangedNotice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImGroupChannelStatusChangedNotice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cgt().size() > 0) {

    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  if (from.status().size() > 0) {

    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
}

void XmsgImGroupChannelStatusChangedNotice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImGroupChannelStatusChangedNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImGroupChannelStatusChangedNotice::CopyFrom(const XmsgImGroupChannelStatusChangedNotice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImGroupChannelStatusChangedNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImGroupChannelStatusChangedNotice::IsInitialized() const {
  return true;
}

void XmsgImGroupChannelStatusChangedNotice::Swap(XmsgImGroupChannelStatusChangedNotice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImGroupChannelStatusChangedNotice::InternalSwap(XmsgImGroupChannelStatusChangedNotice* other) {
  using std::swap;
  cgt_.Swap(&other->cgt_);
  status_.Swap(&other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImGroupChannelStatusChangedNotice::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImGroupNeSyncEventReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImGroupNeSyncEventReq::kCidFieldNumber;
const int XmsgImGroupNeSyncEventReq::kVerFieldNumber;
const int XmsgImGroupNeSyncEventReq::kMsgFieldNumber;
const int XmsgImGroupNeSyncEventReq::kDatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImGroupNeSyncEventReq::XmsgImGroupNeSyncEventReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::InitDefaultsXmsgImGroupNeSyncEventReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImGroupNeSyncEventReq)
}
XmsgImGroupNeSyncEventReq::XmsgImGroupNeSyncEventReq(const XmsgImGroupNeSyncEventReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  dat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dat().size() > 0) {
    dat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dat_);
  }
  ::memcpy(&cid_, &from.cid_,
    static_cast<size_t>(reinterpret_cast<char*>(&ver_) -
    reinterpret_cast<char*>(&cid_)) + sizeof(ver_));
  // @@protoc_insertion_point(copy_constructor:XmsgImGroupNeSyncEventReq)
}

void XmsgImGroupNeSyncEventReq::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&cid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ver_) -
      reinterpret_cast<char*>(&cid_)) + sizeof(ver_));
  _cached_size_ = 0;
}

XmsgImGroupNeSyncEventReq::~XmsgImGroupNeSyncEventReq() {
  // @@protoc_insertion_point(destructor:XmsgImGroupNeSyncEventReq)
  SharedDtor();
}

void XmsgImGroupNeSyncEventReq::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dat_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgImGroupNeSyncEventReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImGroupNeSyncEventReq::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImGroupNeSyncEventReq& XmsgImGroupNeSyncEventReq::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::InitDefaultsXmsgImGroupNeSyncEventReq();
  return *internal_default_instance();
}

XmsgImGroupNeSyncEventReq* XmsgImGroupNeSyncEventReq::New(::google::protobuf::Arena* arena) const {
  XmsgImGroupNeSyncEventReq* n = new XmsgImGroupNeSyncEventReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImGroupNeSyncEventReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImGroupNeSyncEventReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&cid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ver_) -
      reinterpret_cast<char*>(&cid_)) + sizeof(ver_));
  _internal_metadata_.Clear();
}

bool XmsgImGroupNeSyncEventReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImGroupNeSyncEventReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 cid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &cid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 ver = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ver_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImGroupNeSyncEventReq.msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes dat = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_dat()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImGroupNeSyncEventReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImGroupNeSyncEventReq)
  return false;
#undef DO_
}

void XmsgImGroupNeSyncEventReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImGroupNeSyncEventReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 cid = 1;
  if (this->cid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->cid(), output);
  }

  // uint64 ver = 2;
  if (this->ver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->ver(), output);
  }

  // string msg = 3;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupNeSyncEventReq.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->msg(), output);
  }

  // bytes dat = 4;
  if (this->dat().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->dat(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImGroupNeSyncEventReq)
}

::google::protobuf::uint8* XmsgImGroupNeSyncEventReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImGroupNeSyncEventReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 cid = 1;
  if (this->cid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->cid(), target);
  }

  // uint64 ver = 2;
  if (this->ver() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->ver(), target);
  }

  // string msg = 3;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImGroupNeSyncEventReq.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->msg(), target);
  }

  // bytes dat = 4;
  if (this->dat().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->dat(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImGroupNeSyncEventReq)
  return target;
}

size_t XmsgImGroupNeSyncEventReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImGroupNeSyncEventReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string msg = 3;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  // bytes dat = 4;
  if (this->dat().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->dat());
  }

  // uint64 cid = 1;
  if (this->cid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->cid());
  }

  // uint64 ver = 2;
  if (this->ver() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ver());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImGroupNeSyncEventReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImGroupNeSyncEventReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImGroupNeSyncEventReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImGroupNeSyncEventReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImGroupNeSyncEventReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImGroupNeSyncEventReq)
    MergeFrom(*source);
  }
}

void XmsgImGroupNeSyncEventReq::MergeFrom(const XmsgImGroupNeSyncEventReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImGroupNeSyncEventReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.dat().size() > 0) {

    dat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dat_);
  }
  if (from.cid() != 0) {
    set_cid(from.cid());
  }
  if (from.ver() != 0) {
    set_ver(from.ver());
  }
}

void XmsgImGroupNeSyncEventReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImGroupNeSyncEventReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImGroupNeSyncEventReq::CopyFrom(const XmsgImGroupNeSyncEventReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImGroupNeSyncEventReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImGroupNeSyncEventReq::IsInitialized() const {
  return true;
}

void XmsgImGroupNeSyncEventReq::Swap(XmsgImGroupNeSyncEventReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImGroupNeSyncEventReq::InternalSwap(XmsgImGroupNeSyncEventReq* other) {
  using std::swap;
  msg_.Swap(&other->msg_);
  dat_.Swap(&other->dat_);
  swap(cid_, other->cid_);
  swap(ver_, other->ver_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImGroupNeSyncEventReq::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dgroup_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
